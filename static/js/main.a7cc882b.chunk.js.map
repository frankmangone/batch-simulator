{"version":3,"sources":["lib/localStorage.ts","features/compoundsSlice.ts","features/reactionsSlice.ts","features/settingsSlice.ts","features/simulationResultsSlice.ts","store.ts","GlobalStyles.tsx","lib/breakpoints.ts","components/Button.tsx","hooks/useStore.tsx","hooks/useSettings.ts","lib/tokens/tokenTypes.ts","lib/reactionTypes.ts","hooks/useReactions.tsx","constants/compoundColors.tsx","hooks/useCompounds.tsx","hooks/useSimulationResults.ts","lib/units.ts","hooks/useMathConstants.ts","lib/tokenization.tsx","lib/tokenParser.tsx","lib/reactions.tsx","hooks/useSimulate.tsx","components/Sidebar.tsx","layouts/MainLayout.tsx","hooks/useLocalStorageState.tsx","hooks/useVersionControl.ts","components/PageTitle.tsx","components/CardButton.tsx","components/compounds/CompoundCard.tsx","components/EditModal.tsx","components/forms/Error.tsx","components/forms/Input.tsx","components/forms/InfoTooltip.tsx","components/forms/FieldInput.tsx","components/SubmitButton.tsx","lib/validators.tsx","components/compounds/CompoundEditModal.tsx","components/NoResource.tsx","components/compounds/CompoundList.tsx","pages/CompoundsPage.tsx","components/settings/InputSection.tsx","components/settings/OperatingTimesSection.tsx","components/Select.tsx","components/forms/SelectInput.tsx","components/settings/UnitsSection.tsx","components/forms/Checkbox.tsx","components/forms/CheckboxInput.tsx","components/settings/HeatExchangeSection.tsx","pages/SettingsPage.tsx","components/Notice.tsx","components/reactions/ReactionPreview.tsx","components/reactions/ReactionCard.tsx","constants/kineticModels.tsx","components/ModalInputSection.tsx","components/reactions/ReactionCompoundCard.tsx","components/reactions/ReactionCompoundList.tsx","components/MathExpressions.tsx","components/reactions/ReactionEquation.tsx","constants/regexs.ts","components/reactions/ReactionParamInputCard.tsx","hooks/useUnits.ts","components/reactions/ReactionKineticParameters.tsx","lib/serializeKineticEquation.ts","components/reactions/ReactionEditModal.tsx","components/reactions/ReactionList.tsx","pages/ReactionsPage.tsx","lib/plot/utils.ts","lib/plot/drawVerticalAxis.ts","lib/plot/drawHorizontalAxis.ts","lib/plot/drawPlotCurve.ts","lib/plot/getTicksYAxis.ts","lib/plot/drawPlot.ts","components/results/Plot.tsx","components/Show.tsx","components/results/PlotLegend.tsx","components/results/VariableCheckboxes.tsx","components/results/SidebarOptions.tsx","hooks/useGetData.tsx","pages/ResultsPage.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loadFromKey","key","serializedSlice","localStorage","getItem","JSON","parse","err","saveToKey","state","stringify","setItem","error","console","STORAGE_KEY","initialState","compoundsSlice","createSlice","name","reducers","add","action","payload","update","index","findIndex","c","id","compound","remove","slice","length","reset","actions","reactionsSlice","r","reaction","removeCompound","compoundId","forEach","reactants","filter","reactionCompound","products","keyCompound","undefined","reactionTime","deadTime","timeStep","timeUnits","volumeUnits","molarUnits","massUnits","temperatureUnits","energyUnits","isothermic","initialTemperature","settingsSlice","save","saveField","field","value","simulationResultsSlice","store","configureStore","reducer","compounds","compoundsReducer","reactions","reactionsReducer","settings","settingsReducer","simulationResults","simulationResultsReducer","GlobalStyles","createGlobalStyle","mobileBreakpoint","Button","styled","button","props","colorsBase","color","colorsHover","buttonStyle","useAppDispatch","useDispatch","useAppSelector","useSelector","useSettings","dispatch","useEffect","resetSettings","saveSettings","newSettings","TokenTypes","Operator","Parameter","Variable","LeftParenthesis","RightParenthesis","additionToken","type","divisionToken","exponentiationToken","multiplicationToken","subtractionToken","parameterToken","minusOneToken","variableToken","leftParenthesisToken","rightParenthesisToken","CompoundTypes","KineticModels","useReactions","resetReactions","addReaction","newReaction","randomstring","generate","kineticModel","kineticConstants","E_A","kineticEquation","updateReaction","updatedReaction","removeCompoundFromReactions","removeReaction","COMPOUND_COLORS_CODES","COMPOUND_COLORS","orange","yellow","lime","green1","green2","waterGreen1","waterGreen2","skyBlue1","skyBlue2","blue1","blue2","violet1","violet2","pink1","pink2","pink3","red1","red2","useCompounds","unusedColor","colorKeys","usedColors","foundColor","k","addCompound","newCompound","concentration","molecularWeight","symbol","findCompound","find","updateCompound","updatedCompound","removeAllCompounds","useSimulationResults","saveSimulationResults","newSimulationResults","timeUnitsValue","volumeUnitsValue","massUnitsValue","molarUnitsValue","temperatureUnitsValue","energyUnitsValue","mapUnitOptions","arr","map","unit","displayText","collapsedDisplayText","timeUnitsOptions","massUnitsOptions","molarUnitsOptions","volumeUnitsOptions","temperatureUnitsOptions","energyUnitsOptions","FACTORS","energy","J","kJ","cal","kcal","mass","kg","g","mg","lb","molar","mol","kmol","lbmol","time","s","min","h","ms","temperature","K","R","volume","L","m3","cm3","useMathConstants","energyUnitsIndex","molarUnitsIndex","temperatureUnitsIndex","CONSTANTS","getEnergyFactor","getTemperatureFactor","getMolarFactor","e","call","assoc","prec","precedence","token","associativity","replaceSigns","tokenizedEquation","i","parenthesisFound","getCoefficientForComponent","baseStoichiometricCoefficient","getStoichiomericCoefficientForKeyCompound","coefficient","stoichiometricCoefficient","reactionConstantsSymbols","activationEnergy","preExponential","reactionEnthalpy","useSimulate","getConstant","parseReactionEquations","parsedReactions","parsedReaction","parseParametersAndVariables","tokens","outputQueue","operationStack","peek","array","push","pop","concat","reverse","parseEquation","mergeCompounds","enthalpy","parseFloat","kineticEquationCopy","replace","parsedCompounds","Object","assign","simulate","initialValues","t","T","results","executeSimulation","resultsInitialValues","iterator","endTime","rangeIterator","next","result","done","explicitEulerStep","createSimulationIterator","oldTimePoint","newTimePoint","reactionRates","calculateReactionRate","entries","variable","rateOfChange","calculateNetRateOfChange","nonNegative","temperatureRateOfChange","calculateTemperatureNetRateOfChange","reactionRate","netRate","resultStack","b","a","Sidebar","history","useHistory","useState","expanded","setExpanded","navigateTo","route","iconProps","size","SidebarWrapper","onClick","event","preventDefault","SidebarLinkWrapper","IconWrapper","title","icon","href","SidebarLink","div","MainLayout","children","MainLayoutWrapper","MainContentWrapper","MainContent","useLocalStorageState","defaultValue","options","serialize","deserialize","valueInLocalStorage","window","setState","prevKeyRef","useRef","prevKey","current","removeItem","CURRENT_VERSION","useVersionControl","version","setVersion","PageTitle","h2","CardButton","CompoundCard","editCompound","CompoundCardWrapper","CompoundCardInner","CompoundTile","Buttons","li","EditModal","closing","setClosing","handleClose","closeModal","setTimeout","EditModalWrapper","EditModalInner","CloseButton","ErrorWrapper","big","Error","className","Input","input","transparent","errors","InfoTooltip","text","Icon","InfoWrapper","Info","FieldInputWrapper","LabelWrapper","FieldInput","fieldName","label","tooltip","onBlur","onChange","htmlFor","autoComplete","SubmitButton","validateEqual","validateNotEmpty","validateGreaterThan","threshold","equal","CompoundEditModal","compoundIndex","comp","validateUnicity","formik","useFormik","validate","values","onSubmit","scrollTo","top","behavior","Form","handleSubmit","handleChange","form","NoResource","p","CompoundList","editedCompoundId","setEditedCompoundId","editedCompound","useMemo","CompoundListWrapper","ul","deleteButtonStyle","CompoundsPage","confirm","InputSection","InputSectionWrapper","InputSectionInner","OperatingTimesSection","Select","alignment","defaultDisplayValue","hoverIcon","initialValue","onSelectionChange","selectOptions","selecting","setSelecting","currentValue","setCurrentValue","selectRef","document","getElementById","clickOutsideHandler","useCallback","contains","target","toggleSelecting","removeEventListener","addEventListener","selectValue","currentValueOption","option","SelectWrapper","SelectValue","SelectOptions","SelectOption","hoverBackgroundColor","SelectInputWrapper","SelectInput","selectedOption","UnitsSection","setFieldValue","CheckboxWrapper","toggled","Checkbox","onToggle","CheckboxInput","CheckboxInputWrapper","HeatExchangeSection","SettingsPage","sectionProps","Notice","ReactionPreview","ReactionPreviewWrapper","CompoundWrapper","ReactionCard","reactionIndex","editReaction","ReactionCardWrapper","ReactionInfo","ReactionName","KINETIC_MODELS","generateKineticConstants","model","generateHiperbolicModelConstants","generateAutocatalyticModelConstants","generateSimpleModelConstants","updatedExponents","paramKey","reactantExponent","oldConstant","semiSaturationConstant","productExponent","ModalInputSection","ModalColumnInputSection","ReactionCompoundCard","coefficientInput","setCoefficientInput","ReactionCompoundCardWrapper","ReactionCompoundList","reactionCompounds","compoundType","updatedReactionCompound","Equation","components","parenthesisStack","parenthesis","currentStack","level","operation","code","numerator","denominator","elements","base","power","component","replaceBySymbol","SymbolComponent","separatedTerms","split","term","termGroup","subindex","Parenthesis","elem","Division","DivisionWrapper","Power","PowerWrapper","Subindex","SubindexWrapper","GreekAlpha","GreekBeta","GreekMu","GreekDeltaCapital","SymbolInfinity","ReactionEquation","keyCompoundSymbol","EquationWrapper","SCI_REGEX","SCI_POSITIVE_REGEX","ReactionParamInputCard","paramSymbol","positive","units","updateValue","valueInput","setValueInput","ParamInputWrapper","ParamInputInner","filtered","el","indexOf","join","validString","match","useUnits","tokenizedMuUnits","tokenizedActivationEnergyUnits","tokenizedReactionEnthalpyUnits","tokenizedKUnits","order","kUnits","ReactionKineticParameters","updateKineticConstant","globalOrder","reduce","accumulator","param","includes","KineticParamsWrapper","serializeKineticEquation","equationTokens","addArrheniusExponential","addHyperbolicTerm","addReactantWithExponent","addProductWithExponent","ReactionEditModal","rea","modalReaction","setModalReaction","scrollRef","selectReactantIndex","setSelectReactantIndex","selectProductIndex","setSelectProductIndex","reactantOptions","productOptions","getCompoundKey","deletedCompound","selectReactantInitialValue","selectProductInitialValue","SelectField","CompoundInputWrapper","AddCompound","CompoundInputInner","ReactionList","editedReactionId","setEditedReactionId","editedReaction","ReactionListWrapper","ReactionsPage","formatTickValue","stringValue","toString","getPowerOfTen","toFixed","drawVerticalAxis","context","ticks","width","canvas","height","effectiveHeight","DISTANCE_FROM_CORNER","totalTicks","tickDistance","yPosition","beginPath","strokeStyle","moveTo","lineTo","stroke","font","fillStyle","textAlign","fillText","drawHorizontalAxis","drawPlotCurve","params","colors","data","yAxisTicks","maxTimeValue","x","minYAxisValue","Math","floor","maxYAxisValue","range","plotAreaWidth","plotAreaHeight","j","plotPath","Path2D","points","y","lineWidth","getTicksYAxis","maxValue","AVERAGE_TICK_DISTANCE","maxValuesForEachVariable","max","point","maxFunctionalValue","minValue","minValuesForEachVariable","minFunctionalValue","targetTickAmount","powerOfTen","MAX_TICK_AMOUNT","getTickDistance","ceil","drawPlot","getContext","clearRect","Plot","canvasRef","innerWidth","canvasWidth","setCanvasWidth","innerHeight","canvasHeight","setCanvasHeight","resizeHandler","isMobile","ws","hs","Canvas","ref","Show","when","fallback","Wrapper","ColorBadge","PlotLegend","selectedVariables","temperatureSelected","VariableCheckboxes","setSelectedVariables","setTemperatureSelected","isToggled","foundIndex","toggleIndex","CompoundSymbol","span","SidebarOptions","optionsVisible","toggleOptionsVisible","SidebarOptionsWrapper","visible","useGetData","variableData","ResultsPage","setOptionsVisible","selectedCompound","compoundData","OptionsButton","Routes","path","exact","to","pathname","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a7cc882b.chunk.js","sourcesContent":["export const loadFromKey = (key: string) => {\n  try {\n    const serializedSlice = localStorage.getItem(key)\n    if (serializedSlice === null) {\n      return undefined\n    }\n    return JSON.parse(serializedSlice)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveToKey = <T extends unknown>(state: T, key: string) => {\n  try {\n    const serializedSlice = JSON.stringify(state)\n    localStorage.setItem(key, serializedSlice)\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { loadFromKey } from \"../lib/localStorage\"\n\ntype CompoundsState = Compound[]\nexport const STORAGE_KEY = \"batch-simulator:compounds\"\nconst initialState: CompoundsState = loadFromKey(STORAGE_KEY) || []\n\ntype AddPayload = Compound\ntype UpdatePayload = { id: string; compound: Compound }\ntype RemovePayload = { id: string }\n\nexport const compoundsSlice = createSlice({\n  name: \"compounds\",\n  initialState,\n  reducers: {\n    add: (state, action: PayloadAction<AddPayload>) => {\n      return [...state, action.payload]\n    },\n\n    update: (state, action: PayloadAction<UpdatePayload>) => {\n      const index = state.findIndex((c) => c.id === action.payload.id)\n      if (index === -1) return state\n      state[index] = action.payload.compound\n    },\n\n    remove: (state, action: PayloadAction<RemovePayload>) => {\n      const index = state.findIndex((c) => c.id === action.payload.id)\n      if (index === -1) return state\n      return [...state.slice(0, index), ...state.slice(index + 1, state.length)]\n    },\n\n    reset: () => {\n      return []\n    },\n  },\n})\n\nexport const { add, update, remove, reset } = compoundsSlice.actions\n\nexport default compoundsSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { loadFromKey } from \"../lib/localStorage\"\n\ntype ReactionsState = Reaction[]\nexport const STORAGE_KEY = \"batch-simulator:reactions\"\nconst initialState: ReactionsState = loadFromKey(STORAGE_KEY) || []\n\ntype AddPayload = Reaction\ntype UpdatePayload = { id: string; reaction: Reaction }\ntype RemovePayload = { id: string }\ntype RemoveCompoundPayload = { id: string }\n\nexport const reactionsSlice = createSlice({\n  name: \"reactions\",\n  initialState,\n  reducers: {\n    reset: () => {\n      return []\n    },\n\n    add: (state, action: PayloadAction<AddPayload>) => {\n      return [...state, action.payload]\n    },\n\n    update: (state, action: PayloadAction<UpdatePayload>) => {\n      const index = state.findIndex((r) => r.id === action.payload.id)\n      if (index === -1) return state\n      state[index] = action.payload.reaction\n    },\n\n    remove: (state, action: PayloadAction<RemovePayload>) => {\n      const index = state.findIndex((r) => r.id === action.payload.id)\n      if (index === -1) return state\n      return [...state.slice(0, index), ...state.slice(index + 1, state.length)]\n    },\n\n    removeCompound: (state, action: PayloadAction<RemoveCompoundPayload>) => {\n      /**\n       * Remove from reactions that have this compound\n       */\n      const compoundId = action.payload.id\n      state.forEach((reaction: Reaction) => {\n        reaction.reactants = reaction.reactants.filter(\n          (reactionCompound: ReactionCompound) =>\n            reactionCompound.compoundId !== compoundId\n        )\n\n        reaction.products = reaction.products.filter(\n          (reactionCompound: ReactionCompound) =>\n            reactionCompound.compoundId !== compoundId\n        )\n\n        if (reaction.keyCompound === compoundId) {\n          reaction.keyCompound = undefined\n        }\n      })\n\n      return state\n    },\n  },\n})\n\nexport const { reset, add, update, remove, removeCompound } =\n  reactionsSlice.actions\n\nexport default reactionsSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { loadFromKey } from \"../lib/localStorage\"\n\ntype SettingsState = Settings\nexport const STORAGE_KEY = \"batch-simulator:settings\"\n\nconst initialState: SettingsState = loadFromKey(STORAGE_KEY) || {\n  // Reaction times\n  reactionTime: 30,\n  deadTime: 30,\n  timeStep: 0.1,\n\n  // Units\n  timeUnits: 0,\n  volumeUnits: 0,\n  molarUnits: 0,\n  massUnits: 0,\n  temperatureUnits: 0,\n  energyUnits: 0,\n\n  // Heat Exchange\n  isothermic: true,\n  initialTemperature: 300,\n}\n\ntype SaveFieldAction = PayloadAction<{ field: string; value: string | number }>\ntype SaveAction = PayloadAction<Settings>\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    reset: () => {\n      return initialState\n    },\n\n    save: (state, action: SaveAction) => {\n      return action.payload\n    },\n\n    saveField: (state, action: SaveFieldAction) => {\n      return {\n        ...state,\n        [action.payload.field]: action.payload.value,\n      }\n    },\n  },\n})\n\nexport const { reset, save, saveField } = settingsSlice.actions\n\nexport default settingsSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype SimulationResultsState = SimulationResults\nconst initialState: SimulationResultsState = []\n\ntype SaveAction = PayloadAction<SimulationResultsState>\n\nexport const simulationResultsSlice = createSlice({\n  name: \"simulationResults\",\n  initialState,\n  reducers: {\n    save: (state, action: SaveAction) => {\n      return action.payload\n    },\n  },\n})\n\nexport const { save } = simulationResultsSlice.actions\n\nexport default simulationResultsSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport compoundsReducer from \"./features/compoundsSlice\"\nimport reactionsReducer from \"./features/reactionsSlice\"\nimport settingsReducer from \"./features/settingsSlice\"\nimport simulationResultsReducer from \"./features/simulationResultsSlice\"\n\nconst store = configureStore({\n  reducer: {\n    compounds: compoundsReducer,\n    reactions: reactionsReducer,\n    settings: settingsReducer,\n    simulationResults: simulationResultsReducer,\n  },\n})\n\nexport default store\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --color-primary-darkest: hsl(213,48%,15%);\n    --color-primary-darker: hsl(213,48%,30%);\n    --color-primary-dark: hsl(213,48%,50%);\n    --color-primary-normal: hsl(213,48%,70%);\n    --color-primary-light: hsl(213,48%,85%);\n    --color-primary-lighter: hsl(213,48%,95%);\n\n    --color-triadic-green-darker: hsl(93,40%,30%);\n    --color-triadic-green-dark: hsl(93,40%,45%);\n    --color-triadic-green-normal: hsl(93,40%,70%);\n    --color-triadic-green-light: hsl(93,40%,85%);\n    --color-triadic-green-lighter: hsl(93,40%,95%);\n\n    --color-triadic-red-darker: hsl(333,48%,30%);\n    --color-triadic-red-dark: hsl(333,48%,45%);\n    --color-triadic-red-normal: hsl(333,48%,70%);\n    --color-triadic-red-light: hsl(333,48%,85%);\n    --color-triadic-red-lighter: hsl(333,48%,95%);\n\n    --color-grey-darker: hsl(213, 20%, 15%);\n    --color-grey-dark: hsl(213, 20%, 30%);\n    --color-grey-normal: hsl(213, 20%, 45%);\n    --color-grey-light: hsl(213, 20%, 70%);\n    --color-grey-lighter: hsl(213, 20%, 85%);\n    --color-grey-lightest: hsl(213, 20%, 95%);\n  }\n  \n  body {\n    margin: 0;\n    background-color: var(--color-grey-lighter);\n    font-family: 'Mulish', sans-serif;\n\n    @media (max-width: 800px) {\n      margin-top: 0;\n    }\n  }\n\n  a, button {\n    cursor: pointer;\n  }\n\n  a, button, input {\n    transition: all 0.15s ease-in-out;\n  }\n\n  /* Scrollbar */\n  /* Width */\n  ::-webkit-scrollbar {\n    opacity: 0;\n    width: 5px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: var(--color-grey-lighter); \n  }\n  \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    opacity: 0;\n    border-radius: 10px;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    opacity: 0;\n  }\n\n  @keyframes slide-in {\n    from {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0px);\n    }\n  }\n\n  @keyframes slide-out {\n    from {\n      opacity: 1;\n      transform: translateY(0px);\n    }\n    \n    to {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n  }\n`\n\nexport default GlobalStyles\n","export const mobileBreakpoint = 750\n","import styled from \"styled-components\"\n\ninterface IButton {\n  color?: string\n  buttonStyle?: string\n}\n\nconst Button = styled.button<IButton>`\n  align-items: center;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  font-size: 1.1rem;\n  justify-content: space-between;\n  padding: 5px 10px;\n  text-decoration: none;\n\n  ${(props) => colorsBase(props.color)}\n\n  &:hover {\n    ${(props) => colorsHover(props.color)}\n  }\n\n  /* Any additional custom styles */\n  ${(props) => props.buttonStyle ?? \"\"}\n`\n\nexport default Button\n\nconst colorsBase = (color?: string) => {\n  switch (color) {\n    case \"red\":\n      return `\n        background-color: var(--color-triadic-red-dark);\n        color: var(--color-grey-lightest);\n      `\n    case \"green\":\n      return `\n        background-color: var(--color-triadic-green-dark);\n        color: var(--color-grey-lightest);\n      `\n    case \"grey\":\n      return `\n        background-color: var(--color-grey-dark);\n        color: var(--color-grey-lightest);\n      `\n    default:\n      return `\n        background-color: var(--color-primary-dark);\n        color: var(--color-grey-lightest);\n      `\n  }\n}\n\nconst colorsHover = (color?: string) => {\n  switch (color) {\n    case \"red\":\n      return `\n        background-color: var(--color-triadic-red-darker);\n      `\n    case \"green\":\n      return `\n        background-color: var(--color-triadic-green-darker);\n      `\n    case \"grey\":\n      return `\n        background-color: var(--color-grey-darker);\n      `\n    default:\n      return `\n        background-color: var(--color-primary-darker);\n      `\n  }\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\nimport type { RootState, AppDispatch } from \"../store\"\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"./useStore\"\nimport { reset, save, saveField } from \"../features/settingsSlice\"\nimport { saveToKey } from \"../lib/localStorage\"\n\n/* Constants */\nimport { STORAGE_KEY } from \"../features/settingsSlice\"\n\nconst useSettings = () => {\n  const dispatch = useAppDispatch()\n  const settings = useAppSelector((state) => state.settings)\n\n  useEffect(() => {\n    /* Save to localStorage upon changes to state */\n    saveToKey(settings, STORAGE_KEY)\n  }, [settings])\n\n  return {\n    settings,\n\n    resetSettings: (): void => {\n      dispatch(reset())\n    },\n\n    saveSettings: (newSettings: Settings): void => {\n      dispatch(save(newSettings))\n    },\n\n    saveField: (field: string, value: string | number): void => {\n      dispatch(saveField({ field, value }))\n    },\n  }\n}\n\nexport default useSettings\n","export const TokenTypes: Record<string, TokenType> = {\n  Parameter: \"parameter\",\n  Variable: \"variable\",\n  Operator: \"operator\",\n  LeftParenthesis: \"left-parenthesis\",\n  RightParenthesis: \"right-parenthesis\",\n}\n\nconst { Operator, Parameter, Variable, LeftParenthesis, RightParenthesis } =\n  TokenTypes\n\n// Operation tokens\nexport const additionToken = { type: Operator, value: \"+\" }\nexport const divisionToken = { type: Operator, value: \"/\" }\nexport const exponentiationToken = { type: Operator, value: \"^\" }\nexport const multiplicationToken = { type: Operator, value: \"*\" }\nexport const subtractionToken = { type: Operator, value: \"-\" }\nexport const operationToken = (value: string) => ({ type: Operator, value })\n\n// Parameter token\nexport const parameterToken = (value: string) => ({ type: Parameter, value })\nexport const minusOneToken = parameterToken(\"-1\")\n\n// Variable token\nexport const variableToken = (value: string) => ({ type: Variable, value })\n\n// Parameter token\nexport const leftParenthesisToken = { type: LeftParenthesis, value: \"(\" }\nexport const rightParenthesisToken = { type: RightParenthesis, value: \")\" }\n","export const CompoundTypes: Record<string, CompoundType> = {\n  Reactant: 0,\n  Product: 1,\n}\n\nexport const KineticModels: Record<string, KineticModel> = {\n  simple: 0,\n  hyperbolic: 1,\n  autocatalytic: 2,\n}\n","import randomstring from \"randomstring\"\nimport { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"./useStore\"\nimport {\n  add,\n  reset,\n  update,\n  remove,\n  removeCompound,\n} from \"../features/reactionsSlice\"\nimport { STORAGE_KEY } from \"../features/reactionsSlice\"\nimport { saveToKey } from \"../lib/localStorage\"\nimport {\n  divisionToken,\n  exponentiationToken,\n  multiplicationToken,\n  subtractionToken,\n  parameterToken,\n  variableToken,\n  leftParenthesisToken,\n  rightParenthesisToken,\n} from \"../lib/tokens/tokenTypes\"\nimport { KineticModels } from \"../lib/reactionTypes\"\n\nconst useReactions = () => {\n  const dispatch = useAppDispatch()\n  const reactions = useAppSelector((state) => state.reactions)\n\n  useEffect(() => {\n    /* Save to localStorage upon changes to state */\n    saveToKey(reactions, STORAGE_KEY)\n  }, [reactions])\n\n  return {\n    reactions,\n\n    resetReactions: (): void => {\n      dispatch(reset())\n    },\n\n    addReaction: (): void => {\n      const newReaction = {\n        id: randomstring.generate(8),\n        name: \"\",\n        reactants: [],\n        products: [],\n        kineticModel: KineticModels.simple,\n        kineticConstants: {\n          \"k_\\\\inf\": \"1e7\", // Pre exponential term for Arrhenius\n          E_A: \"4.5e4\", // Arrhenius activation energy\n          \"\\\\Delta+H_r\": \"2\", // Arrhenius activation energy\n        },\n        kineticEquation: [\n          parameterToken(\"<k_\\\\inf>\"),\n          multiplicationToken,\n          parameterToken(\"e\"),\n          exponentiationToken,\n          leftParenthesisToken,\n          leftParenthesisToken,\n          subtractionToken,\n          parameterToken(\"<E_A>\"),\n          rightParenthesisToken,\n          divisionToken,\n          leftParenthesisToken,\n          parameterToken(\"<R>\"),\n          multiplicationToken,\n          variableToken(\"{T}\"),\n          rightParenthesisToken,\n          rightParenthesisToken,\n        ],\n      }\n      dispatch(add(newReaction))\n    },\n\n    updateReaction: (id: string, updatedReaction: Reaction): void => {\n      dispatch(update({ id, reaction: updatedReaction }))\n    },\n\n    removeCompoundFromReactions: (compoundId: string): void => {\n      dispatch(removeCompound({ id: compoundId }))\n    },\n\n    removeReaction: (id: string): void => {\n      dispatch(remove({ id }))\n    },\n  }\n}\n\nexport default useReactions\n","export const COMPOUND_COLORS_CODES = [\n  \"blue1\",\n  \"pink3\",\n  \"yellow\",\n  \"skyBlue2\",\n  \"red2\",\n  \"green1\",\n  \"skyBlue1\",\n  \"orange\",\n  \"violet1\",\n  \"pink1\",\n  \"lime\",\n  \"waterGreen2\",\n  \"red1\",\n  \"blue2\",\n  \"green2\",\n  \"pink2\",\n  \"waterGreen1\",\n  \"violet2\",\n]\n\nexport const COMPOUND_COLORS = {\n  orange: \"hsl(30, 80%, 65%)\",\n  yellow: \"hsl(50, 80%, 65%)\",\n  lime: \"hsl(70, 80%, 65%)\",\n  green1: \"hsl(90, 80%, 65%)\",\n  green2: \"hsl(110, 80%, 65%)\",\n  waterGreen1: \"hsl(130, 80%, 65%)\",\n  waterGreen2: \"hsl(150, 80%, 65%)\",\n  skyBlue1: \"hsl(170, 80%, 65%)\",\n  skyBlue2: \"hsl(190, 80%, 65%)\",\n  blue1: \"hsl(210, 80%, 65%)\",\n  blue2: \"hsl(230, 80%, 65%)\",\n  violet1: \"hsl(250, 80%, 65%)\",\n  violet2: \"hsl(270, 80%, 65%)\",\n  pink1: \"hsl(290, 80%, 65%)\",\n  pink2: \"hsl(310, 80%, 65%)\",\n  pink3: \"hsl(330, 80%, 65%)\",\n  red1: \"hsl(350, 80%, 65%)\",\n  red2: \"hsl(10, 80%, 65%)\",\n}\n","import randomstring from \"randomstring\"\nimport { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"./useStore\"\nimport { add, update, remove, reset } from \"../features/compoundsSlice\"\nimport useReactions from \"./useReactions\"\nimport { saveToKey } from \"../lib/localStorage\"\n\n/* Constants */\nimport { COMPOUND_COLORS_CODES } from \"../constants/compoundColors\"\nimport { STORAGE_KEY } from \"../features/compoundsSlice\"\n\ninterface UsedColors {\n  [key: string]: boolean\n}\n\nconst useCompounds = () => {\n  const dispatch = useAppDispatch()\n  const compounds = useAppSelector((state) => state.compounds)\n  const { resetReactions, removeCompoundFromReactions } = useReactions()\n\n  useEffect(() => {\n    /* Save to localStorage upon changes to state */\n    saveToKey(compounds, STORAGE_KEY)\n  }, [compounds])\n\n  const unusedColor = () => {\n    const colorKeys = COMPOUND_COLORS_CODES\n\n    // Initialize object to keep track of used colors\n    let usedColors: UsedColors = {}\n    colorKeys.forEach((key: string) => (usedColors[key] = false))\n\n    // Find currently used colors\n    compounds.forEach((compound) => (usedColors[compound.color] = true))\n\n    // Find the first unused color\n    let k = 0,\n      foundColor\n    while (k < colorKeys.length && !foundColor) {\n      if (!usedColors[colorKeys[k]]) foundColor = colorKeys[k]\n      k++\n    }\n\n    return foundColor || \"blue1\"\n  }\n\n  return {\n    compounds,\n\n    addCompound: (): void => {\n      const newCompound = {\n        id: randomstring.generate(8),\n        color: unusedColor(),\n        concentration: 0,\n        molecularWeight: 0,\n        symbol: \"A\",\n        name: \"\",\n      }\n      dispatch(add(newCompound))\n    },\n\n    findCompound: (id?: string): Compound | undefined => {\n      return compounds.find((c) => c.id === id)\n    },\n\n    updateCompound: (id: string, updatedCompound: Compound): void => {\n      dispatch(update({ id, compound: updatedCompound }))\n    },\n\n    removeCompound: (id: string): void => {\n      removeCompoundFromReactions(id)\n      dispatch(remove({ id }))\n    },\n\n    removeAllCompounds: (): void => {\n      resetReactions()\n      dispatch(reset())\n    },\n  }\n}\n\nexport default useCompounds\n","import { useAppDispatch, useAppSelector } from \"./useStore\"\nimport { save } from \"../features/simulationResultsSlice\"\n\nconst useSimulationResults = () => {\n  const dispatch = useAppDispatch()\n  const simulationResults = useAppSelector((state) => state.simulationResults)\n\n  return {\n    simulationResults,\n\n    saveSimulationResults: (newSimulationResults: SimulationResults): void => {\n      dispatch(save(newSimulationResults))\n    },\n  }\n}\n\nexport default useSimulationResults\n","export const temperatureUnits: TemperatureUnits = [\"K\", \"R\", \"°C\", \"°F\"]\nexport const timeUnits: TimeUnits = [\"ms\", \"s\", \"min\", \"h\"]\nexport const massUnits: MassUnits = [\"mg\", \"g\", \"kg\", \"lb\"]\nexport const molarUnits: MolarUnits = [\"mol\", \"kmol\", \"lbmol\"]\nexport const volumeUnits: VolumeUnits = [\"L\", \"m3\", \"cm3\"]\nexport const energyUnits: EnergyUnits = [\"cal\", \"kcal\", \"J\", \"kJ\"]\n\n/**\n * Value getters\n * @param index\n * @returns Units value as string\n */\nexport const timeUnitsValue = (index: number) => {\n  return timeUnits[index]\n}\n\nexport const volumeUnitsValue = (index: number) => {\n  return volumeUnits[index]\n}\n\nexport const massUnitsValue = (index: number) => {\n  return massUnits[index]\n}\n\nexport const molarUnitsValue = (index: number) => {\n  return molarUnits[index]\n}\n\nexport const temperatureUnitsValue = (index: number) => {\n  return temperatureUnits[index]\n}\n\nexport const energyUnitsValue = (index: number) => {\n  return energyUnits[index]\n}\n\n/**\n * Options mapping for selects\n */\nconst mapUnitOptions = (arr: string[]) => {\n  return arr.map((unit, index) => ({\n    value: index,\n    displayText: unit,\n    collapsedDisplayText: unit,\n  }))\n}\n\nexport const timeUnitsOptions = mapUnitOptions(timeUnits)\nexport const massUnitsOptions = mapUnitOptions(massUnits)\nexport const molarUnitsOptions = mapUnitOptions(molarUnits)\nexport const volumeUnitsOptions = mapUnitOptions(volumeUnits)\nexport const temperatureUnitsOptions = mapUnitOptions(temperatureUnits)\nexport const energyUnitsOptions = mapUnitOptions(energyUnits)\n","import useSettings from \"./useSettings\"\nimport {\n  timeUnitsValue,\n  volumeUnitsValue,\n  massUnitsValue,\n  molarUnitsValue,\n  temperatureUnitsValue,\n  energyUnitsValue,\n} from \"../lib/units\"\n\n/**\n * Returns a function that can be called with a math or physical constant [string] as an argument.\n * For the latter, also handles unit conversions based on app settings.\n *\n * It's important to define a standard set of base units. The chosen ones are:\n *  - K\n *  - s\n *  - kg\n *  - mol\n *  - L\n *  - J\n */\n\nconst FACTORS: Factors = {\n  energy: {\n    J: 1,\n    kJ: 1 / 1000,\n    cal: 0.239006,\n    kcal: 0.239006 / 1000,\n  },\n  mass: {\n    kg: 1,\n    g: 1 / 1000,\n    mg: 1 / 1000000,\n    lb: 2.20462,\n  },\n  molar: {\n    mol: 1,\n    kmol: 1 / 1000,\n    lbmol: 0.00220462,\n  },\n  time: {\n    s: 1,\n    min: 1 / 60,\n    h: 1 / (60 * 60),\n    ms: 1000,\n  },\n  temperature: {\n    K: 1,\n    R: 1.8,\n    \"°C\": 1,\n    \"°F\": 1.8,\n  },\n  volume: {\n    L: 1,\n    m3: 1 / 1000,\n    cm3: 1000,\n  },\n}\n\nconst useMathConstants = () => {\n  const { settings } = useSettings()\n  const {\n    energyUnits: energyUnitsIndex,\n    massUnits: massUnitsIndex,\n    molarUnits: molarUnitsIndex,\n    temperatureUnits: temperatureUnitsIndex,\n    timeUnits: timeUnitsIndex,\n    volumeUnits: volumeUnitsIndex,\n  } = settings\n\n  /**\n   * Factor getters from factors object\n   */\n  const getEnergyFactor = () => {\n    const key = energyUnitsValue(energyUnitsIndex)\n    return FACTORS.energy[key]\n  }\n  const getMassFactor = () => {\n    const key = massUnitsValue(massUnitsIndex)\n    return FACTORS.mass[key]\n  }\n  const getMolarFactor = () => {\n    const key = molarUnitsValue(molarUnitsIndex)\n    return FACTORS.molar[key]\n  }\n  const getTemperatureFactor = () => {\n    const key = temperatureUnitsValue(temperatureUnitsIndex)\n    return FACTORS.temperature[key]\n  }\n  const getTimeFactor = () => {\n    const key = timeUnitsValue(timeUnitsIndex)\n    return FACTORS.time[key]\n  }\n  const getVolumeFactor = () => {\n    const key = volumeUnitsValue(volumeUnitsIndex)\n    return FACTORS.volume[key]\n  }\n\n  /**\n   * R - Gas constant\n   * Base units: J / (mol * K)\n   ********************************/\n  const R = () => {\n    const base = 8.314\n    return (\n      (base * getEnergyFactor()) / getTemperatureFactor() / getMolarFactor()\n    )\n  }\n\n  /**\n   * e - Euler's constant\n   * Base units: -\n   ********************************/\n  const e = () => {\n    return 2.7182818\n  }\n\n  /*********************************\n   * *******************************\n   * Mapping of all constants\n   * *******************************\n   ********************************/\n  const CONSTANTS: Record<MathConstant, () => number> = {\n    R,\n    e,\n  }\n\n  return (key: keyof typeof CONSTANTS) => {\n    return CONSTANTS[key].call(null)\n  }\n}\n\nexport default useMathConstants\n","import {\n  parameterToken,\n  variableToken,\n  operationToken,\n  leftParenthesisToken,\n  rightParenthesisToken,\n} from \"./tokens/tokenTypes\"\n\n/**\n * Equation tokenization\n * https://blog.shalvah.me/posts/how-to-build-a-math-expression-tokenizer-using-javascript-or-any-other-language\n * https://blog.shalvah.me/posts/parsing-math-expressions-with-javascript\n */\n\nexport const tokenizeEquation = (equation: string): Token[] => {\n  const tokensArray: Token[] = []\n\n  // Remove spaces, they don't matter\n  equation.replace(/\\s+/g, \"\")\n\n  // Convert to array of characters\n  const charsArray = equation.split(\"\")\n\n  // Define buffers\n  let parameterBuffer: string[] = []\n  let variableBuffer: string[] = []\n\n  /**\n   * Buffer handling\n   */\n  const emptyParameterBuffer = () => {\n    // Push new parameter to the tokens array\n    const newParam = parameterBuffer.join(\"\")\n    tokensArray.push(parameterToken(newParam))\n\n    // Empty parameter buffer\n    parameterBuffer = []\n  }\n\n  const emptyVariableBuffer = () => {\n    // Push new variable to the tokens array\n    const newVar = variableBuffer.join(\"\")\n    tokensArray.push(variableToken(newVar))\n\n    // Empty variable buffer\n    variableBuffer = []\n  }\n\n  /**\n   * Array traversal\n   * This is the core of the tokenization function\n   *  */\n  charsArray.forEach((char) => {\n    /**\n     * Parameters are always contained in <>, so if the parameterBuffer\n     * isn't empty, you simply keep pushing to it.\n     *  */\n    if (parameterBuffer.length !== 0) {\n      if (isParameterEnd(char)) {\n        parameterBuffer.push(char)\n        emptyParameterBuffer()\n      } else {\n        parameterBuffer.push(char)\n      }\n    }\n    //\n    /**\n     * Variables are always contained in {}. Treatment is exactly the same\n     * as with parameters.\n     */\n    else if (variableBuffer.length !== 0) {\n      if (isVariableEnd(char)) {\n        variableBuffer.push(char)\n        emptyVariableBuffer()\n      } else {\n        variableBuffer.push(char)\n      }\n    }\n    //\n    /**\n     * Check if variable start or parameter start\n     */\n    else if (isVariableStart(char)) {\n      variableBuffer.push(char)\n    } else if (isParameterStart(char)) {\n      parameterBuffer.push(char)\n    }\n    //\n    /**\n     * Only operators and parenthesis remain, so:\n     */\n    else if (isOperator(char)) {\n      tokensArray.push(operationToken(char))\n    } else if (isLeftParenthesis(char)) {\n      tokensArray.push(leftParenthesisToken)\n    } else if (isRightParenthesis(char)) {\n      tokensArray.push(rightParenthesisToken)\n    }\n  })\n\n  return tokensArray\n}\n\nexport const joinTokens = (tokens: Token[]) => {\n  return tokens.map(({ value }) => value).join(\"\")\n}\n\n/**\n * Token class\n */\nconst assoc = {\n  \"^\": \"right\",\n  \"*\": \"left\",\n  \"/\": \"left\",\n  \"+\": \"left\",\n  \"-\": \"left\",\n}\n\nconst prec = {\n  \"^\": 4,\n  \"*\": 3,\n  \"/\": 3,\n  \"+\": 2,\n  \"-\": 2,\n}\n\nexport const precedence = (token: Token) => {\n  return prec[token.value as keyof typeof prec] || 1\n}\n\nexport const associativity = (token: Token) => {\n  return assoc[token.value as keyof typeof assoc] || \"left\"\n}\n\n/**\n * Recognition functions\n *  */\n\n// const isDigit = (char: string): boolean => {\n//   return /\\d/.test(char)\n// }\n// const isLetter = (char: string): boolean => {\n//   return /[a-z]/i.test(char)\n// }\nconst isOperator = (char: string): boolean => {\n  return /\\+|-|\\*|\\/|\\^/.test(char)\n}\nconst isLeftParenthesis = (char: string): boolean => {\n  return char === \"(\"\n}\nconst isRightParenthesis = (char: string): boolean => {\n  return char === \")\"\n}\nconst isParameterStart = (char: string): boolean => {\n  return char === \"<\"\n}\nconst isParameterEnd = (char: string): boolean => {\n  return char === \">\"\n}\nconst isVariableStart = (char: string): boolean => {\n  return char === \"{\"\n}\nconst isVariableEnd = (char: string): boolean => {\n  return char === \"}\"\n}\n","import { associativity, precedence } from \"./tokenization\"\nimport { TokenTypes } from \"./tokens/tokenTypes\"\n\nexport const parseEquation = (tokenizedEquation: Token[]): Token[] => {\n  /**\n   * Note: this assumes that the tokenized expression is valid!!\n   * Returns an RPN-ordered version of the tokenized expression\n   * (Reverse Polish Notation, or Infix Notation)\n   *\n   * Based on: https://blog.shalvah.me/posts/parsing-math-expressions-with-javascript\n   */\n\n  const tokens = replaceSigns(tokenizedEquation)\n\n  const outputQueue: Token[] = []\n  const operationStack: Token[] = []\n\n  const peek = <T extends unknown>(array: Array<T>): T => {\n    return array.slice(-1)[0]\n  }\n\n  tokens.forEach((token: Token) => {\n    // Push parameters and variables to output queue\n    if (\n      token.type === TokenTypes.Parameter ||\n      token.type === TokenTypes.Variable\n    ) {\n      outputQueue.push(token)\n    }\n\n    // Functions are not contemplated in this app (for now) ---------------\n\n    // If token is an operator, things get a little more complicated:\n    else if (token.type === TokenTypes.Operator) {\n      while (\n        peek(operationStack) &&\n        peek(operationStack).type === TokenTypes.Operator &&\n        ((associativity(token) === \"left\" &&\n          precedence(token) <= precedence(peek(operationStack))) ||\n          (associativity(token) === \"right\" &&\n            precedence(token) < precedence(peek(operationStack))))\n      ) {\n        outputQueue.push(operationStack.pop() as Token)\n      }\n      // At the end of iteration push o1 onto the operator stack\n      operationStack.push(token)\n    }\n\n    // If the token is a left parenthesis (i.e. \"(\"), then push it onto the stack.\n    else if (token.type === TokenTypes.LeftParenthesis) {\n      operationStack.push(token)\n    }\n\n    // If the token is a right parenthesis (i.e. \")\"):\n    else if (token.type === TokenTypes.RightParenthesis) {\n      // Until the token at the top of the stack is a left parenthesis,\n      // pop operators off the stack onto the output queue.\n      while (\n        peek(operationStack) &&\n        peek(operationStack).type !== TokenTypes.LeftParenthesis\n      ) {\n        outputQueue.push(operationStack.pop() as Token)\n      }\n\n      // Pop the left parenthesis from the stack, but not onto the output queue.\n      // (We 'consume' the parenthesis)\n      operationStack.pop()\n    }\n  })\n\n  return outputQueue.concat(operationStack.reverse())\n}\n\nexport const rpnToString = (rpn: Token[]) => {\n  return rpn.map((token) => token.value).join(\" \")\n}\n\n//\n\nconst replaceSigns = (tokenizedEquation: Token[]): Token[] => {\n  // A special case needs to be accounted for:\n  // If the previous element on the serialized equation is a LeftParenthesis, and the current\n  // element is a (+) or a (-), it's a *SIGN* rather than an operation.\n  //\n  // For this reason, we want to update that token, switching it by a number (parameter)\n  // of value 1 or -1, and add a '*' operation.  let i = 0, parenthesisFound: boolean\n\n  let i = 0,\n    parenthesisFound = false\n\n  while (i < tokenizedEquation.length) {\n    if (tokenizedEquation[i].type === TokenTypes.LeftParenthesis) {\n      parenthesisFound = true\n    }\n    //\n    else if (\n      parenthesisFound &&\n      (tokenizedEquation[i].value === \"+\" || tokenizedEquation[i].value === \"-\")\n    ) {\n      // Set sign to a parameter of value 1 or -1\n      tokenizedEquation[i].type = TokenTypes.Parameter\n      if (tokenizedEquation[i].value === \"+\") tokenizedEquation[i].value = 1\n      else tokenizedEquation[i].value = -1\n\n      // Add an operation (multiplication) right after\n      tokenizedEquation = [\n        ...tokenizedEquation.slice(0, i + 1),\n        { type: TokenTypes.Operator, value: \"*\" },\n        ...tokenizedEquation.slice(i + 1, tokenizedEquation.length),\n      ]\n\n      parenthesisFound = false\n    }\n    //\n    else {\n      parenthesisFound = false\n    }\n\n    i++\n  }\n\n  return tokenizedEquation\n}\n","export const reactionHasCompound = (reaction: Reaction, compoundId: string) => {\n  if (reaction.reactants.findIndex((c) => c.compoundId === compoundId))\n    return true\n  if (reaction.products.findIndex((c) => c.compoundId === compoundId))\n    return true\n  return false\n}\n\nexport const getCoefficientForComponent = (\n  reaction: Reaction,\n  compoundId: string\n) => {\n  const baseStoichiometricCoefficient =\n    getStoichiomericCoefficientForKeyCompound(reaction)\n  let coefficient: number = 0\n\n  reaction.reactants.forEach((c) => {\n    if (c.compoundId === compoundId) {\n      coefficient = -baseStoichiometricCoefficient / c.stoichiometricCoefficient\n    }\n  })\n  if (coefficient !== 0) return coefficient\n\n  reaction.products.forEach((c) => {\n    if (c.compoundId === compoundId) {\n      coefficient = baseStoichiometricCoefficient / c.stoichiometricCoefficient\n    }\n  })\n  return coefficient\n}\n\nconst getStoichiomericCoefficientForKeyCompound = (reaction: Reaction) => {\n  const keyCompound = reaction.reactants.find(\n    (c) => c.compoundId === (reaction.keyCompound as string)\n  ) as ReactionCompound\n  return keyCompound.stoichiometricCoefficient\n}\n\nexport const reactionConstantsSymbols = {\n  activationEnergy: \"E_A\",\n  preExponential: \"k_\\\\inf\",\n  reactionEnthalpy: \"\\\\Delta+H_r\",\n}\n\nexport const isVariableRelatedParam = (param: string) => {\n  return Object.values(reactionConstantsSymbols).includes(param)\n}\n","import useSettings from \"../hooks/useSettings\"\nimport useCompounds from \"../hooks/useCompounds\"\nimport useReactions from \"../hooks/useReactions\"\nimport useSimulationResults from \"../hooks/useSimulationResults\"\nimport useMathConstants from \"../hooks/useMathConstants\"\n\nimport { parseEquation } from \"../lib/tokenParser\"\nimport { getCoefficientForComponent } from \"../lib/reactions\"\nimport { TokenTypes } from \"../lib/tokens/tokenTypes\"\n\nconst useSimulate = () => {\n  const getConstant = useMathConstants()\n  const { compounds } = useCompounds()\n  const { reactions } = useReactions()\n  const { settings } = useSettings()\n  const { saveSimulationResults } = useSimulationResults()\n\n  const parseReactionEquations = (): ParsedReaction[] => {\n    /**\n     * Parsing a reaction entails:\n     *  1) Replacing parameters for their entered values\n     *  2) Modifying the token order to RPN\n     *  3) Merging reactants and products to compounds, which have a symbol\n     *    and a coefficient\n     *  4) Add additional information\n     *\n     *  The reactions are stored in a new object of type ParsedReaction\n     */\n    const parsedReactions: ParsedReaction[] = []\n\n    reactions.forEach((reaction, index) => {\n      const parsedReaction: ParsedReaction = {}\n\n      // 1) Replace parameters for values & strip variables of {} symbols\n      parsedReaction.kineticEquation = parseParametersAndVariables(reaction)\n\n      // 2) Modify token order to RPN\n      parsedReaction.kineticEquation = parseEquation(\n        parsedReaction.kineticEquation\n      )\n\n      // 3) Merge reactants and products\n      parsedReaction.compounds = mergeCompounds(reaction, compounds)\n\n      // 4) Adds additional keys with important information\n      parsedReaction.enthalpy = parseFloat(\n        reaction.kineticConstants[\"\\\\Delta+H_r\"]\n      )\n\n      parsedReactions.push(parsedReaction)\n    })\n\n    return parsedReactions\n  }\n\n  const parseParametersAndVariables = (reaction: Reaction): KineticEquation => {\n    const kineticEquationCopy = JSON.parse(\n      JSON.stringify(reaction.kineticEquation)\n    )\n\n    kineticEquationCopy.forEach((token: Token, index: number) => {\n      if (token.type === TokenTypes.Parameter) {\n        // Replace parameter by numeric value\n        const key = (token.value as string).replace(/<|>/g, \"\")\n        // Param. may be reaction-related, or be a thermodynamic constant\n        if (reaction.kineticConstants[key]) {\n          token.value = parseFloat(reaction.kineticConstants[key])\n        } else {\n          token.value = getConstant(key as MathConstant)\n        }\n      } else if (token.type === TokenTypes.Variable) {\n        // Strip variable of {} symbols\n        token.value = (token.value as string).replace(/{|}/g, \"\")\n      }\n\n      kineticEquationCopy[index] = token\n    })\n\n    return kineticEquationCopy\n  }\n\n  const mergeCompounds = (\n    reaction: Reaction,\n    compounds: Compound[]\n  ): CompoundWithCoefficient[] => {\n    const parsedCompounds: CompoundWithCoefficient[] = []\n\n    reaction.reactants.forEach((reactionCompound: ReactionCompound) => {\n      const compound: CompoundWithCoefficient = Object.assign(\n        {},\n        {\n          compoundId: reactionCompound.compoundId,\n          symbol: `[${\n            compounds.find((c) => c.id === reactionCompound.compoundId)?.symbol\n          }]`,\n          coefficient: getCoefficientForComponent(\n            reaction,\n            reactionCompound.compoundId\n          ),\n        }\n      )\n      parsedCompounds.push(compound)\n    })\n\n    reaction.products.forEach((reactionCompound: ReactionCompound) => {\n      const compound: CompoundWithCoefficient = Object.assign(\n        {},\n        {\n          compoundId: reactionCompound.compoundId,\n          symbol: `[${\n            compounds.find((c) => c.id === reactionCompound.compoundId)?.symbol\n          }]`,\n          coefficient: getCoefficientForComponent(\n            reaction,\n            reactionCompound.compoundId\n          ),\n        }\n      )\n      parsedCompounds.push(compound)\n    })\n\n    return parsedCompounds\n  }\n\n  //\n  //\n  //\n\n  //: SimulationResults => {\n  const simulate = () => {\n    /**\n     * Reaction equations (as tokens) are reordered to RPN notation\n     * and some more magic happens. Check the method\n     *  */\n    const parsedReactions: ParsedReaction[] = parseReactionEquations()\n\n    // Initialize simulation results\n    const initialValues: TimePoint = { t: 0, T: settings.initialTemperature }\n    compounds.forEach((c) => (initialValues[`[${c.symbol}]`] = c.concentration))\n\n    // Start simulation execution\n    const results = executeSimulation(initialValues, parsedReactions, settings)\n\n    saveSimulationResults(results)\n  }\n\n  return { simulate }\n}\n\nexport default useSimulate\n\n/****************************************************************\n *    SIMULATE METHOD                                           *\n *    ---                                                       *\n ****************************************************************/\n\nconst executeSimulation = (\n  resultsInitialValues: TimePoint,\n  parsedReactions: ParsedReaction[],\n  settings: Settings\n) => {\n  const results: SimulationResults = [resultsInitialValues]\n\n  // Define an iterator for time evolution\n  const createSimulationIterator = (endTime = 10, timeStep = 0.1) => {\n    const rangeIterator = {\n      next: function () {\n        let result\n        const currentTime = results[results.length - 1].t\n\n        if (currentTime < endTime) {\n          result = { done: false }\n          explicitEulerStep(\n            parsedReactions,\n            timeStep,\n            settings.isothermic,\n            results\n          )\n          return result\n        }\n        return { done: true }\n      },\n    }\n\n    return rangeIterator\n  }\n\n  const iterator = createSimulationIterator(\n    settings.reactionTime,\n    settings.timeStep\n  )\n\n  let result = iterator.next()\n  while (!result.done) {\n    result = iterator.next()\n  }\n\n  return results\n}\n\n/**\n * Mutates the results object, pushing the new calculations as TimePoints\n */\nconst explicitEulerStep = (\n  parsedReactions: ParsedReaction[],\n  timeStep: number,\n  isothermic: boolean,\n  results: SimulationResults\n): void => {\n  const oldTimePoint: TimePoint = JSON.parse(\n    JSON.stringify(results[results.length - 1])\n  )\n  // TODO: Conditionally run T equation if not an isothermic system\n  const newTimePoint: TimePoint = { t: 0, T: oldTimePoint.T }\n\n  // Reaction rates can be calculated for each reaction once,\n  // and reused when calculating compound net reaction rates\n  //\n  // TODO: Rethink this for other kind of numeric methods\n  const reactionRates: number[] = parsedReactions.map((parsedReaction) => {\n    return calculateReactionRate(parsedReaction, oldTimePoint)\n  })\n\n  Object.entries(oldTimePoint).forEach(([variable, value]) => {\n    // variable corresponds to \"t\" (time), \"T\" (temperature),\n    // or a compound symbol in brackets i.e. \"[A]\"\n    //\n    // variables \"t\" and \"T\" have to be treated differently than the others\n    if (variable === \"t\") {\n      newTimePoint.t = value + timeStep\n      return\n    }\n\n    if (variable === \"T\") {\n      const temperatureRateOfChange = isothermic\n        ? 0\n        : calculateTemperatureNetRateOfChange(parsedReactions, reactionRates)\n\n      newTimePoint.T = oldTimePoint.T - temperatureRateOfChange * timeStep\n      return\n    }\n\n    // For other variables, calculate functional value (net rate of change) associated\n    // with the ODE.\n    // It's a summatory of kinetic velocities\n    //\n    // In other words: d[VAR]/dt = rateOfChange\n    const rateOfChange = calculateNetRateOfChange(\n      parsedReactions,\n      reactionRates,\n      variable\n    )\n\n    // In explicit euler, this reaction rate is used with the time step to calculate the next\n    // functional value. This should be generalized (TODO:)\n    //\n    // Also, values should be zero or higher!\n    newTimePoint[variable] = nonNegative(\n      oldTimePoint[variable] + rateOfChange * timeStep\n    )\n  })\n\n  // Finally, push new TimePoint\n  results.push(newTimePoint)\n}\n\nconst calculateNetRateOfChange = (\n  parsedReactions: ParsedReaction[],\n  reactionRates: number[],\n  variable: string\n) => {\n  let reactionRate = 0\n\n  parsedReactions.forEach((reaction: ParsedReaction, index: number) => {\n    const compound = reaction.compounds?.find(\n      (c) => c.symbol === variable\n    ) as CompoundWithCoefficient\n    // If a compound is found, it means the reaction is involved in the\n    // material balance of the species\n    if (compound) {\n      reactionRate += reactionRates[index] * compound.coefficient\n    }\n  })\n\n  return reactionRate\n}\n\nconst calculateTemperatureNetRateOfChange = (\n  parsedReactions: ParsedReaction[],\n  reactionRates: number[]\n) => {\n  let netRate = 0\n\n  // Rates are calculated in relation to the key compound\n  parsedReactions.forEach((reaction: ParsedReaction, index: number) => {\n    netRate += reactionRates[index] * reaction.enthalpy!\n  })\n\n  return netRate\n}\n\nconst calculateReactionRate = (\n  reaction: ParsedReaction,\n  oldTimePoint: TimePoint\n) => {\n  /**\n   * WARNING: By this point, it is assumed that the provided RPN equation is valid.\n   * This has to be ensured with validation prior to execution, or it can lead to failures.\n   */\n\n  let resultStack: number[] = []\n\n  reaction.kineticEquation?.forEach((token: Token) => {\n    // Tokens are already ordered in RPN at this point, so\n    // what we need to do is push values into the stack,\n    // and then perform binary operations\n    if (token.type === TokenTypes.Parameter)\n      resultStack.push(token.value as number)\n    else if (token.type === TokenTypes.Variable) {\n      resultStack.push(oldTimePoint[token.value])\n    } else {\n      // Can only be a binary operator. Parenthesis have been removed in RPN.\n      // Because it is a binary operator, it will always involve the last two\n      // elements added to the stack, so we first have to pop them\n      const b = resultStack.pop() as number\n      const a = resultStack.pop() as number\n\n      switch (token.value) {\n        case \"+\":\n          resultStack.push(a + b)\n          break\n        case \"-\":\n          resultStack.push(a - b)\n          break\n        case \"*\":\n          resultStack.push(a * b)\n          break\n        case \"/\":\n          resultStack.push(a / b)\n          break\n        case \"^\":\n          resultStack.push(a ** b)\n          break\n      }\n    }\n  })\n\n  // After execution, we should be left with only one element in the stack, which\n  // is the computation result\n  return resultStack[0]\n}\n\nconst nonNegative = (value: number) => {\n  if (value < 0) return 0\n  return value\n}\n","import styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport { mobileBreakpoint } from \"../lib/breakpoints\"\n\n/* Components */\nimport Button from \"./Button\"\nimport { FiMenu, FiSliders, FiPlay } from \"react-icons/fi\"\nimport { BiAtom, BiLineChart } from \"react-icons/bi\"\nimport { AiOutlineExperiment } from \"react-icons/ai\"\n\n/* Hooks */\nimport useSimulate from \"../hooks/useSimulate\"\nimport useSimulationResults from \"../hooks/useSimulationResults\"\nimport { useState } from \"react\"\n\ninterface ISidebarLinkProps {\n  onClick: () => void\n  title: string\n  icon: JSX.Element\n}\n\nconst Sidebar: React.FC = () => {\n  const { simulate } = useSimulate()\n  const { simulationResults } = useSimulationResults()\n  const history = useHistory()\n  const [expanded, setExpanded] = useState<boolean>(false)\n\n  const onSimulate = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault()\n    simulate()\n    history.push(\"/results\")\n  }\n\n  const expandMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    setExpanded(!expanded)\n  }\n\n  const navigateTo = (route: string) => {\n    history.push(route)\n    setExpanded(false)\n  }\n\n  const iconProps = {\n    size: 25,\n  }\n\n  return (\n    <SidebarWrapper expanded={expanded}>\n      <nav>\n        <button onClick={expandMenu} id=\"hamburger\">\n          <SidebarLinkWrapper>\n            <IconWrapper>\n              <FiMenu {...iconProps} />\n            </IconWrapper>\n          </SidebarLinkWrapper>\n        </button>\n        <SidebarLink\n          onClick={() => navigateTo(\"/compounds\")}\n          title=\"Compounds\"\n          icon={<BiAtom {...iconProps} />}\n        />\n        <SidebarLink\n          onClick={() => navigateTo(\"/reactions\")}\n          title=\"Reactions\"\n          icon={<AiOutlineExperiment {...iconProps} />}\n        />\n        <SidebarLink\n          onClick={() => navigateTo(\"/settings\")}\n          title=\"Settings\"\n          icon={<FiSliders {...iconProps} />}\n        />\n        {simulationResults && (\n          <SidebarLink\n            onClick={() => navigateTo(\"/results\")}\n            title=\"Results\"\n            icon={<BiLineChart {...iconProps} />}\n          />\n        )}\n        <a href=\"/\" onClick={onSimulate}>\n          <SidebarLinkWrapper>\n            <IconWrapper>\n              <FiPlay {...iconProps} />\n            </IconWrapper>\n            <p>Simulate</p>\n          </SidebarLinkWrapper>\n        </a>\n      </nav>\n    </SidebarWrapper>\n  )\n}\n\nexport default Sidebar\n\nconst SidebarLink: React.FC<ISidebarLinkProps> = (props) => {\n  const { icon, onClick, title } = props\n  return (\n    <Button onClick={onClick}>\n      <SidebarLinkWrapper>\n        <IconWrapper>{icon}</IconWrapper>\n        <p>{title}</p>\n        {/* <FiChevronRight /> */}\n      </SidebarLinkWrapper>\n    </Button>\n  )\n}\n\nconst SidebarLinkWrapper = styled.div`\n  padding: 0.7rem 0.5rem;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`\n\nconst IconWrapper = styled.div`\n  width: 25px;\n  height: 25px;\n  margin-right: 0.5rem;\n  @media only screen and (max-width: ${mobileBreakpoint}px) {\n    margin-right: 0;\n  }\n`\n\ninterface SidebarWrapperProps {\n  expanded: boolean\n}\n\nconst SidebarWrapper = styled.div<SidebarWrapperProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  height: 100vh;\n  max-width: ${(props) => (props.expanded ? \"270px\" : \"90px\")};\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    height: 80px;\n    width: 100vw;\n    max-width: 100vw;\n    position: fixed;\n  }\n  flex-grow: 0;\n  flex-shrink: 0;\n  transition: all 0.15s linear;\n  background-color: var(--color-grey-normal);\n\n  nav {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    @media screen and (max-width: ${mobileBreakpoint}px) {\n      flex-direction: row;\n      margin: 0 1rem;\n      align-items: center;\n      height: 100%;\n    }\n\n    a,\n    button {\n      align-items: center;\n      background-color: var(--color-grey-normal);\n      border: none;\n      border-radius: 5px;\n      color: var(--color-grey-lightest);\n      display: flex;\n      font-size: 1.2rem;\n      justify-content: space-between;\n      margin-bottom: 10px;\n      padding: 5px 10px;\n      text-decoration: none;\n\n      &:hover {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n\n      p {\n        margin: 0;\n      }\n\n      @media screen and (max-width: ${mobileBreakpoint}px) {\n        margin-bottom: 0;\n\n        p {\n          display: none;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    #hamburger {\n      display: none;\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Sidebar from \"../components/Sidebar\"\nimport { mobileBreakpoint } from \"../lib/breakpoints\"\n\ninterface IProps {\n  children: JSX.Element | JSX.Element[]\n}\n\nconst MainLayout: React.FC<IProps> = (props) => {\n  const { children } = props\n\n  return (\n    <MainLayoutWrapper>\n      <Sidebar />\n      <MainContentWrapper id=\"scroll-target\">\n        <MainContent>{children}</MainContent>\n      </MainContentWrapper>\n    </MainLayoutWrapper>\n  )\n}\n\nexport default MainLayout\n\nconst MainLayoutWrapper = styled.div`\n  height: 100vh;\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    position: absolute;\n    top: 80px;\n    right: 0;\n    left: 0;\n    height: calc(100vh - 80px);\n  }\n`\n\nconst MainContentWrapper = styled.div`\n  background: var(--color-grey-light);\n  flex-grow: 1;\n  height: 100vh;\n  margin-left: 90px;\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    margin-left: 0;\n    height: calc(100vh - 80px);\n  }\n  position: relative;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nconst MainContent = styled.div`\n  margin: 20px;\n  min-height: calc(100% - 40px);\n`\n","import { useEffect, useRef, useState } from \"react\"\n\ninterface ISerialization<T> {\n  serialize: (value: T) => string\n  deserialize: (value: string) => T\n}\n\nconst useLocalStorageState = <T extends unknown>(\n  key: string,\n  defaultValue: T | undefined = undefined,\n  options: ISerialization<T> = {\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n  }\n) => {\n  const { serialize, deserialize } = options\n\n  /**\n   * The callback in useState is only called for state initialization\n   *  */\n  const [state, setState] = useState<T>((): T => {\n    const valueInLocalStorage = window.localStorage.getItem(key)\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage)\n    }\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue\n  })\n\n  /**\n   * Keep a reference to the old key in localStorage,\n   * to delete it if the key changes\n   */\n  const prevKeyRef = useRef(key)\n\n  useEffect(() => {\n    // Check if key has changed, and remove previous key if necessary\n    const prevKey = prevKeyRef.current\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey)\n      prevKeyRef.current = key\n    }\n\n    // Set item in localStorage\n    window.localStorage.setItem(key, serialize(state))\n  }, [key, serialize, state])\n\n  return [state, setState]\n}\n\nexport default useLocalStorageState\n","import { useEffect } from \"react\"\nimport useLocalStorageState from \"./useLocalStorageState\"\nimport useCompounds from \"./useCompounds\"\nimport useSettings from \"./useSettings\"\n\nconst CURRENT_VERSION = \"1.0.1\"\n\nconst useVersionControl = () => {\n  const [version, setVersion] = useLocalStorageState(\"currentVersion\")\n  const { removeAllCompounds } = useCompounds()\n  const { resetSettings } = useSettings()\n\n  useEffect(() => {\n    if (version === CURRENT_VERSION) return\n\n    setVersion(CURRENT_VERSION)\n    removeAllCompounds()\n    resetSettings()\n    // eslint-disable-next-line\n  }, [])\n}\n\nexport default useVersionControl\n","import styled from \"styled-components\"\n\nconst PageTitle = styled.h2`\n  color: var(--color-grey-lightest);\n  font-size: 20px;\n  margin-top: 0;\n  display: inline-block;\n`\n\nexport default PageTitle\n","import styled from \"styled-components\"\n\nconst CardButton = styled.button`\n  align-items: center;\n  align-self: center;\n  background-color: unset;\n  border: none;\n  border-radius: 5px;\n  color: var(--color-grey-normal);\n  cursor: pointer;\n  display: flex;\n  font-size: 1.5em;\n  margin-left: 0.2rem;\n  padding: 0.5rem;\n  transition: all 0.15s ease-in-out;\n  z-index: 2;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.3);\n    color: var(--color-grey-dark);\n  }\n`\n\nexport default CardButton\n","import styled from \"styled-components\"\nimport CardButton from \"../CardButton\"\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\"\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\n\ninterface ICompoundCardProps {\n  compound: Compound\n  editCompound: () => void\n  updateCompound: (compound: Compound) => void\n  validateUnicity: (field: string, value: any) => boolean\n  removeCompound: () => void\n}\n\nconst CompoundCard: React.FC<ICompoundCardProps> = (props) => {\n  const { compound, editCompound, removeCompound } = props\n\n  return (\n    <CompoundCardWrapper>\n      <CompoundCardInner>\n        {/* Tile to display symbol */}\n        <CompoundTile color={compound.color as keyof typeof COMPOUND_COLORS}>\n          {compound.symbol}\n        </CompoundTile>\n\n        <Buttons>\n          {/* Button to toggle modal edition */}\n          <CardButton onClick={editCompound}>\n            <FiEdit />\n          </CardButton>\n\n          {/* Button to delete the compound */}\n          <CardButton onClick={removeCompound}>\n            <FiTrash2 />\n          </CardButton>\n        </Buttons>\n      </CompoundCardInner>\n    </CompoundCardWrapper>\n  )\n}\n\nexport default CompoundCard\n\n/**\n * Styled components\n */\n\nconst CompoundCardWrapper = styled.li`\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    flex: 1;\n    flex-basis: 100%;\n  }\n`\n\nconst CompoundCardInner = styled.div`\n  margin: 5px;\n  padding: 20px;\n  position: relative;\n\n  align-items: center;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  border-radius: 5px;\n  border: 1.5px solid var(--color-grey-lightest);\n  display: flex;\n  color: var(--color-grey-lightest);\n  cursor: pointer;\n  justify-content: space-between;\n  overflow: hidden;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.15);\n    transform: translateY(-2px);\n  }\n\n  button {\n    padding: 0.8rem;\n  }\n`\n\ninterface ICompoundColorBulletProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst CompoundTile = styled.div<ICompoundColorBulletProps>`\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border-radius: 5px;\n  border: 1px solid var(--color-grey-normal);\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.15);\n  color: var(--color-grey-dark);\n  font-size: 1.6rem;\n  padding: 0.5rem 0.9rem;\n  margin-right: 1rem;\n`\n\nconst Buttons = styled.div`\n  align-self: center;\n  display: flex;\n`\n","import styled from \"styled-components\"\nimport { FiX } from \"react-icons/fi\"\nimport { useEffect } from \"react\"\nimport { mobileBreakpoint } from \"../lib/breakpoints\"\n\nexport interface IClosing {\n  closing?: boolean\n}\n\ntype EditModalProps = IClosing & {\n  setClosing: (closing: boolean) => void\n  handleClose: () => void\n}\n\nconst EditModal: React.FC<EditModalProps> = (props) => {\n  const { children, closing, setClosing, handleClose } = props\n\n  const closeModal = () => {\n    /**\n     * Animate and close modal after slide animation\n     */\n    setClosing(true)\n    setTimeout(() => {\n      handleClose()\n    }, 250)\n  }\n\n  useEffect(() => {\n    if (closing) {\n      closeModal()\n    }\n    // eslint-disable-next-line\n  }, [closing])\n\n  return (\n    <EditModalWrapper closing={closing}>\n      <EditModalInner closing={closing}>\n        <CloseButton onClick={closeModal} closing={closing}>\n          <FiX />\n        </CloseButton>\n        {children}\n      </EditModalInner>\n    </EditModalWrapper>\n  )\n}\n\nexport default EditModal\n\nconst EditModalWrapper = styled.div<IClosing>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  min-height: 100%;\n  background-color: rgba(0, 0, 0, 0.15);\n\n  animation-name: dim-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* Override animation upon modal close */\n  ${(props) =>\n    props.closing\n      ? `\n    animation-name: dim-out;\n    animation-timing-function: ease-in-out;\n    animation-duration: 0.25s;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n  `\n      : \"\"}\n\n  @keyframes dim-in {\n    from {\n      background-color: rgba(0, 0, 0, 0);\n    }\n\n    to {\n      background-color: rgba(0, 0, 0, 0.15);\n    }\n  }\n\n  @keyframes dim-out {\n    from {\n      background-color: rgba(0, 0, 0, 0.15);\n    }\n\n    to {\n      background-color: rgba(0, 0, 0, 0);\n    }\n  }\n`\n\nconst EditModalInner = styled.div<IClosing>`\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  border: 1px solid var(--color-grey-lightest);\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  flex-grow: 1;\n  margin: 10px;\n  padding: 2rem;\n  padding-top: 3.5rem;\n  position: relative;\n  max-width: 700px;\n  max-height: 600px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 3;\n\n  /* Override animation upon modal close */\n  ${(props) =>\n    props.closing\n      ? `\n    animation-name: slide-out;\n    animation-timing-function: ease-in-out;\n    animation-duration: 0.25s;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n  `\n      : \"\"}\n\n  label {\n    color: var(--color-grey-darker);\n  }\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    max-width: unset;\n    max-height: unset;\n    height: calc(100vh - 190px);\n    position: absolute;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`\n\nconst CloseButton = styled.button<IClosing>`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  align-items: center;\n  background-color: unset;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n  ${(props) => (props.closing ? \"disabled: true;\" : \"\")}\n  font-size: 1.3rem;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`\n","import styled from \"styled-components\"\n\ninterface ErrorProps {\n  big?: boolean\n}\n\nconst Error: React.FC<ErrorProps> = (props) => {\n  const { big, children } = props\n  return (\n    <ErrorWrapper big={big} className=\"error\">\n      {children}\n    </ErrorWrapper>\n  )\n}\n\nconst ErrorWrapper = styled.div<ErrorProps>`\n  position: absolute;\n  ${(props) =>\n    props.big\n      ? `\n    bottom: 0.9rem;\n    right: 1rem;\n  `\n      : `\n    bottom: 0.4rem;\n    right: 0.5rem;\n  `}\n\n  background-color: var(--color-triadic-red-darker);\n  border-radius: 5px;\n  box-shadow: 0px 0px 4px var(--color-triadic-red-darker);\n  color: white;\n  padding: 0.2rem 0.5rem;\n  pointer-events: none;\n  opacity: 0;\n  transform: translateY(105%);\n  z-index: 4;\n`\n\nexport default Error\n","import styled from \"styled-components\"\n\ninterface IInputProps extends React.HTMLProps<HTMLInputElement> {\n  errors?: boolean\n  transparent?: boolean\n}\n\nconst Input = styled.input<IInputProps>`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-normal);\n  border-radius: 5px;\n  flex-grow: 1;\n  font-family: \"Mulish\", sans-serif;\n  min-width: 0;\n  width: 0;\n  outline: none;\n  padding: 0.5rem 1rem;\n  color: var(--color-grey-dark);\n\n  &:autofill {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &:focus {\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  }\n\n  /**\n   * Remove arrows from number inputs\n   */\n\n  /* Chrome, Safari, Edge, Opera */\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  &[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n\n  /** Overrides */\n  ${(props) =>\n    props.transparent\n      ? `\n      background-color: rgba(255,255,255,0.2);\n      border-color: hsla(213, 20%, 15%, 0.5);\n      color: var(--color-grey-darker);\n\n      &:focus {\n        border-color: var(--color-grey-darker);\n        background-color: rgba(255,255,255,0.5);\n      }\n      `\n      : \"\"}\n  ${(props) =>\n    props.errors\n      ? `\n        border-color: var(--color-triadic-red-darker) !important\n      `\n      : \"\"}\n`\n\nexport default Input\n","import styled from \"styled-components\"\nimport { FiInfo } from \"react-icons/fi\"\ninterface InfoTooltipProps {\n  text: string | JSX.Element\n}\n\nconst InfoTooltip = (props: InfoTooltipProps) => {\n  const { text } = props\n\n  return (\n    <Icon>\n      <FiInfo color=\"hsl(213, 20%, 95%)\" size={16} />\n      <InfoWrapper>\n        <Info>{text}</Info>\n      </InfoWrapper>\n    </Icon>\n  )\n}\n\nexport default InfoTooltip\n\nconst Icon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 22px;\n  height: 22px;\n  flex-basis: 22px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  background-color: var(--color-grey-normal);\n  margin-left: 0.5rem;\n  color: var(--color-white);\n  cursor: pointer;\n  position: relative;\n  &:hover > div > div {\n    opacity: 1;\n  }\n`\n\nconst Info = styled.div`\n  position: relative;\n  opacity: 0;\n  transition: opacity 0.15s linear;\n  padding: 1rem;\n  background-color: var(--color-grey-normal);\n  border-radius: 5px;\n  margin-left: 1rem;\n  margin-bottom: 25px;\n  width: max-content;\n  max-width: 180px;\n  font-size: 1rem;\n  color: var(--color-grey-lightest);\n  overflow: visible;\n  filter: drop-shadow(0 1px 2px var(--color-grey-normal));\n  display: flex;\n\n  &:before {\n    position: absolute;\n    right: 50%;\n    bottom: 0;\n    transform: translateY(100%) translateX(50%);\n    content: \"\";\n    width: 0;\n    height: 0;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid var(--color-grey-normal);\n  }\n`\n\nconst InfoWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  right: 18px;\n  transform: translateX(50%) translateY(-50%);\n  pointer-events: none;\n`\n","import styled from \"styled-components\"\nimport Error from \"./Error\"\nimport Input from \"./Input\"\nimport InfoTooltip from \"./InfoTooltip\"\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\n\ninterface IFieldInputProps {\n  big?: boolean\n  color?: string\n  error?: string\n  fieldName: string\n  label: string\n  type?: string\n  tooltip?: string\n  transparent?: boolean\n  value: any\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst FieldInput: React.FC<IFieldInputProps> = (props) => {\n  const {\n    big,\n    color,\n    error,\n    fieldName,\n    label,\n    type,\n    tooltip,\n    transparent,\n    value,\n    onBlur,\n    onChange,\n  } = props\n\n  const voidFunction = () => {}\n\n  return (\n    <FieldInputWrapper color={color} big={big}>\n      <LabelWrapper>\n        <label htmlFor={fieldName}>{label}</label>\n        {tooltip && <InfoTooltip text={tooltip} />}\n      </LabelWrapper>\n      <Input\n        errors={!!error}\n        name={fieldName}\n        type={type || \"text\"}\n        autoComplete=\"off\"\n        onBlur={onBlur || voidFunction}\n        onChange={onChange}\n        value={value}\n        transparent={transparent}\n      />\n      {error && <Error big={big}>{error}</Error>}\n    </FieldInputWrapper>\n  )\n}\n\ninterface IFieldInputWrapperProps {\n  color?: string\n  big?: boolean\n}\n\nconst FieldInputWrapper = styled.div<IFieldInputWrapperProps>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5rem;\n  position: relative;\n\n  ${(props) =>\n    props.color\n      ? `\n    background-color: ${\n      COMPOUND_COLORS[props.color as keyof typeof COMPOUND_COLORS]\n    };\n    border-radius: 5px;\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  `\n      : \"\"}\n  ${(props) =>\n    props.big\n      ? `\n    align-items: flex-start;\n    margin-bottom: 1.5rem;\n    padding: 1rem;\n  `\n      : \"\"}\n\n  label {\n    ${(props) => (props.big ? \"font-size: 1.5rem;\" : \"\")}\n    font-weight: 600;\n    color: ${(props) =>\n      props.color ? \"var(--color-grey-darker)\" : \"var(--color-grey-dark)\"};\n  }\n\n  input {\n    ${(props) =>\n      props.big\n        ? `    \n    font-size: 3rem;\n    margin-left: 1rem;\n    width: 0;\n    `\n        : \"font-size: 1rem;\"}\n    width: 300px;\n    align-self: stretch;\n  }\n\n  &:hover > .error {\n    opacity: 1 !important;\n  }\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    flex-direction: column;\n    align-items: flex-start;\n\n    input {\n      width: auto;\n      margin-left: 0;\n    }\n  }\n`\n\nconst LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-basis: 50%;\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    margin-bottom: 10px;\n  }\n`\n\nexport default FieldInput\n","import styled from \"styled-components\"\nimport Button from \"./Button\"\n\nconst SubmitButton = styled(Button)`\n  align-self: stretch;\n  font-size: 1.2rem;\n  justify-content: center;\n  margin-top: 1.5rem;\n  padding: 0.5rem;\n  width: 100%;\n`\nexport default SubmitButton\n","/**\n * Validates if field is equal to a provided value.\n * */\nexport const validateEqual = (a: unknown, b: unknown) => {\n  if (a === b) return true\n  return false\n}\n\n/**\n * Validates if field is not empty, which equates to\n * not being undefined, null,\n * In the case it is a string, check that it is not empty.\n * In the case of a number, 0 is valid.\n * */\nexport const validateNotEmpty = (value: unknown) => {\n  if (value === \"\") return false\n  if (typeof value === \"number\") return true\n  if (!value) return false\n  return true\n}\n\n/**\n * Validates if field is greater than, only if the value is numeric.\n * Otherwise, returns false.\n * */\nexport const validateGreaterThan = (\n  value: unknown,\n  threshold: number,\n  equal: boolean\n) => {\n  if (typeof value !== \"number\") return false\n  if (value > threshold) return true\n  if (value === threshold && equal) return true\n  return false\n}\n","import styled from \"styled-components\"\nimport { useFormik } from \"formik\"\n\n/* Components */\nimport EditModal from \"../EditModal\"\nimport FieldInput from \"../forms/FieldInput\"\nimport SubmitButton from \"../SubmitButton\"\n\n/* Helpers */\nimport { validateNotEmpty, validateGreaterThan } from \"../../lib/validators\"\nimport {\n  volumeUnitsValue,\n  massUnitsValue,\n  molarUnitsValue,\n} from \"../../lib/units\"\n\n/* Hooks */\nimport { useState } from \"react\"\nimport useCompounds from \"../../hooks/useCompounds\"\nimport useSettings from \"../../hooks/useSettings\"\n\ninterface ICompoundEditModalProps {\n  compound: Compound\n  closeModal: () => void\n}\n\nconst CompoundEditModal: React.FC<ICompoundEditModalProps> = (props) => {\n  const { compound, closeModal } = props\n  const { compounds, updateCompound } = useCompounds()\n  const { settings } = useSettings()\n  const [closing, setClosing] = useState<boolean>(false)\n  const compoundIndex = compounds.findIndex((comp) => comp.id === compound.id)\n\n  const molarUnits = molarUnitsValue(settings.molarUnits)\n  const volumeUnits = volumeUnitsValue(settings.volumeUnits)\n  const massUnits = massUnitsValue(settings.massUnits)\n\n  /**\n   * Validate method for Formik\n   */\n  interface IErrors {\n    symbol?: string\n    concentration?: string\n    name?: string\n    molecularWeight?: string\n  }\n\n  const validate = (values: Compound): IErrors => {\n    const errors: IErrors = {}\n\n    /* Symbol validation */\n    if (!validateNotEmpty(values.symbol))\n      errors.symbol = \"Symbol cannot be empty\"\n    else if (!validateUnicity(\"symbol\", values.symbol))\n      errors.symbol = \"Symbol is already used\"\n\n    /* Concentration validation */\n    if (!validateNotEmpty(values.concentration))\n      errors.concentration = \"Concentration cannot be empty\"\n    else if (!validateGreaterThan(values.concentration, 0, true))\n      errors.concentration = \"Concentration cannot be lower than 0\"\n\n    /* Molecular weight validation */\n    if (!validateNotEmpty(values.molecularWeight))\n      errors.molecularWeight = \"Molecular weight cannot be empty\"\n    else if (!validateGreaterThan(values.molecularWeight, 0, true))\n      errors.molecularWeight = \"Molecular weight cannot be lower than 0\"\n\n    return errors\n  }\n\n  const validateUnicity = (field: string, value: any): boolean => {\n    for (var i = 0; i < compounds.length; i++) {\n      // @ts-ignore\n      if (i !== compoundIndex && compounds[i][field] === value) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Formik form initialization\n   */\n  const formik = useFormik({\n    // @ts-ignore\n    initialValues: {\n      symbol: compound.symbol,\n      concentration: compound.concentration,\n      name: compound.name,\n      molecularWeight: compound.molecularWeight,\n    },\n    validate,\n    onSubmit: (values) => {\n      const updatedCompound = { ...compound, ...values }\n      updateCompound(compound.id, updatedCompound)\n      window.scrollTo({ top: 0, behavior: \"smooth\" })\n      setClosing(true)\n    },\n  })\n\n  return (\n    <EditModal\n      closing={closing}\n      setClosing={setClosing}\n      handleClose={closeModal}\n    >\n      <Form onSubmit={formik.handleSubmit}>\n        <FieldInput\n          fieldName=\"symbol\"\n          label=\"Symbol:\"\n          error={formik.errors.symbol}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            formik.handleChange(event)\n          }}\n          value={formik.values.symbol}\n          color={compound.color}\n          big\n          transparent\n        />\n\n        <FieldInput\n          fieldName=\"concentration\"\n          label={`Initial concentration [${molarUnits}/${volumeUnits}]:`}\n          error={formik.errors.concentration}\n          tooltip=\"Concentration in the loaded mixture\"\n          type=\"number\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            formik.handleChange(event)\n          }}\n          value={formik.values.concentration}\n        />\n\n        <FieldInput\n          fieldName=\"molecularWeight\"\n          label={`Molecular weight [${massUnits}/${molarUnits}]:`}\n          error={formik.errors.molecularWeight}\n          type=\"number\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            formik.handleChange(event)\n          }}\n          value={formik.values.molecularWeight}\n        />\n\n        <FieldInput\n          fieldName=\"name\"\n          label=\"Compound name (optional):\"\n          error={formik.errors.name}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            formik.handleChange(event)\n          }}\n          value={formik.values.name}\n        />\n\n        <SubmitButton color=\"green\" type=\"submit\">\n          Done\n        </SubmitButton>\n      </Form>\n    </EditModal>\n  )\n}\n\nexport default CompoundEditModal\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`\n","import styled from \"styled-components\"\n\nconst NoResource = styled.p`\n  padding: 1rem;\n  color: var(--color-grey-dark);\n  font-style: italic;\n`\n\nexport default NoResource\n","import styled from \"styled-components\"\n\n/* Components */\nimport CompoundCard from \"./CompoundCard\"\nimport CompoundEditModal from \"./CompoundEditModal\"\nimport NoResource from \"../NoResource\"\n\n/* Hooks */\nimport useCompounds from \"../../hooks/useCompounds\"\nimport { useState, useMemo } from \"react\"\n\nconst CompoundList: React.FC = (props) => {\n  const { compounds, updateCompound, removeCompound } = useCompounds()\n  const [editedCompoundId, setEditedCompoundId] = useState<string | undefined>(\n    undefined\n  )\n\n  const editCompound = (id?: string) => setEditedCompoundId(id)\n  const editedCompound = useMemo(\n    () =>\n      editedCompoundId\n        ? compounds.find((c) => c.id === editedCompoundId)\n        : undefined,\n    [compounds, editedCompoundId]\n  )\n\n  return (\n    <CompoundListWrapper>\n      {compounds.length === 0 && (\n        <NoResource>No compounds added yet</NoResource>\n      )}\n\n      {compounds.map((compound, index) => (\n        <CompoundCard\n          key={index}\n          compound={compound}\n          editCompound={(): void => {\n            editCompound(compound.id)\n          }}\n          updateCompound={(compound: Compound): void => {\n            updateCompound(compound.id, compound)\n          }}\n          removeCompound={(): void => {\n            removeCompound(compound.id)\n          }}\n          validateUnicity={(field: string, value: any): boolean => {\n            for (var i = 0; i < compounds.length; i++) {\n              // @ts-ignore\n              if (i !== index && compounds[i][field] === value) {\n                return false\n              }\n            }\n            return true\n          }}\n        />\n      ))}\n\n      {/* Edit modal */}\n      {editedCompoundId && (\n        <CompoundEditModal\n          compound={editedCompound as Compound}\n          closeModal={() => editCompound()}\n        />\n      )}\n    </CompoundListWrapper>\n  )\n}\n\nexport default CompoundList\n\n/**\n * Styled components\n */\n\nconst CompoundListWrapper = styled.ul`\n  align-self: stretch;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding-left: 0;\n`\n","import Button from \"../components/Button\"\nimport PageTitle from \"../components/PageTitle\"\nimport CompoundList from \"../components/compounds/CompoundList\"\nimport { FiPlus, FiTrash2 } from \"react-icons/fi\"\nimport useCompounds from \"../hooks/useCompounds\"\nimport { mobileBreakpoint } from \"../lib/breakpoints\"\n\nconst deleteButtonStyle = `\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.6rem 1rem;\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    top: calc(80px + 1rem);\n  }\n`\n\nconst CompoundsPage: React.FC = () => {\n  const { addCompound, removeAllCompounds } = useCompounds()\n\n  const handleResetCompounds = () => {\n    const confirmation = window.confirm(\n      \"Are you sure you want to delete all compounds? This will also delete all reactions\"\n    )\n    if (confirmation) removeAllCompounds()\n  }\n\n  return (\n    <>\n      <PageTitle>Compounds</PageTitle>\n      <Button color=\"green\" onClick={addCompound}>\n        Add <FiPlus />\n      </Button>\n      <Button\n        color=\"red\"\n        buttonStyle={deleteButtonStyle}\n        onClick={handleResetCompounds}\n      >\n        <FiTrash2 size={20} />\n      </Button>\n      <CompoundList />\n    </>\n  )\n}\n\nexport default CompoundsPage\n","import styled from \"styled-components\"\n\nconst InputSection = ({\n  children,\n}: {\n  children: JSX.Element | JSX.Element[]\n}) => {\n  return (\n    <InputSectionWrapper>\n      <InputSectionInner>{children}</InputSectionInner>\n    </InputSectionWrapper>\n  )\n}\n\nexport default InputSection\n\nconst InputSectionWrapper = styled.div`\n  display: flex;\n  flex-basis: 50%;\n\n  @media only screen and (max-width: 940px) {\n    flex-basis: 100%;\n  }\n`\n\nconst InputSectionInner = styled.div`\n  flex-grow: 1;\n  background-color: var(--color-grey-lighter);\n  border-radius: 5px;\n  flex-direction: column;\n  padding: 1rem;\n  margin: 0.5rem;\n\n  h2 {\n    color: var(--color-grey-normal);\n    font-size: 1.2rem;\n    margin-top: 0;\n  }\n\n  input {\n    width: auto;\n  }\n`\n","import InputSection from \"./InputSection\"\nimport FieldInput from \"../forms/FieldInput\"\nimport type { FormikProps } from \"formik\"\n\ninterface OperatingTimesProps {\n  formik: FormikProps<Settings>\n  onBlur: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst OperatingTimesSection: React.VFC<OperatingTimesProps> = (props) => {\n  const { formik, onBlur, onChange } = props\n\n  return (\n    <InputSection>\n      <h2>Operating times</h2>\n      <FieldInput\n        fieldName=\"reactionTime\"\n        label=\"Reaction time:\"\n        type=\"number\"\n        value={formik.values.reactionTime}\n        error={formik.errors.reactionTime}\n        {...{ onBlur, onChange }}\n      />\n      <FieldInput\n        fieldName=\"deadTime\"\n        label=\"Dead time:\"\n        type=\"number\"\n        tooltip=\"Time needed for discharge, cleaning, etc.\"\n        value={formik.values.deadTime}\n        error={formik.errors.deadTime}\n        {...{ onBlur, onChange }}\n      />\n      <FieldInput\n        fieldName=\"timeStep\"\n        label=\"Time step:\"\n        type=\"number\"\n        tooltip=\"Small time interval for numerical calculation purposes\"\n        value={formik.values.timeStep}\n        error={formik.errors.timeStep}\n        {...{ onBlur, onChange }}\n      />\n    </InputSection>\n  )\n}\n\nexport default OperatingTimesSection\n","import styled from \"styled-components\"\nimport randomstring from \"randomstring\"\n\n/* Components */\nimport { FiChevronDown } from \"react-icons/fi\"\n\n// Hooks\nimport { useEffect, useState, useRef, useCallback } from \"react\"\n\ninterface ISelectProps<T> {\n  alignment?: string\n  defaultDisplayValue?: string\n  hoverIcon?: JSX.Element\n  initialValue?: ISelectOption<T>\n  selectOptions: ISelectOption<T>[]\n  onSelectionChange: (value?: T) => void\n}\n\nexport interface ISelectOption<T> {\n  value?: T\n  displayText?: string\n  collapsedDisplayText?: string\n  hoverBackgroundColor?: string\n}\n\n/* Reusable custom select component */\nconst Select = <T extends string | number>(props: ISelectProps<T>) => {\n  const {\n    alignment,\n    defaultDisplayValue,\n    hoverIcon,\n    initialValue,\n    onSelectionChange,\n    selectOptions,\n  } = props\n\n  // Set state variables\n  const [selecting, setSelecting] = useState<boolean>(false)\n  const [currentValue, setCurrentValue] = useState<T | undefined>(\n    initialValue?.value || undefined\n  )\n\n  // Use ref for id value\n  const id = useRef<string>(randomstring.generate(8))\n\n  /*\n   * Save a ref select component, for event add and remove listeners\n   * when clicking outside\n   */\n  const selectRef = useRef<HTMLElement | null>(null)\n  // const dropdownRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    // Save initialValue provided as prop to currentValue, if present\n    if (initialValue) setCurrentValue(initialValue.value)\n\n    // Save ref to rendered Select component\n    selectRef.current = document.getElementById(id.current)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  /*\n   * Set ref to dropdown when visible\n   */\n  useEffect(() => {\n    if (selecting) selectRef.current = document.getElementById(id.current)\n    else selectRef.current = null\n  }, [selecting])\n\n  /*\n   * A useCallback hook here is needed so that the exact same function is passed\n   * to both addEventListener and removeEventListener\n   *\n   * https://dev.to/marcostreng/how-to-really-remove-eventlisteners-in-react-3och\n   */\n  const clickOutsideHandler = useCallback((event: any): void => {\n    // TODO: Better typing\n    // Uses tips from:\n    // https://stackoverflow.com/questions/152975/how-do-i-detect-a-click-outside-an-element/3028037#3028037\n\n    if (!selectRef.current?.contains(event.target)) {\n      toggleSelecting()\n      // Change state manually because clickOutsideHandler can't have toggleSelecting as a dependency\n      setSelecting(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  /*\n   * Toggles select options, while adding listeners for closing when clicking outside\n   * of the dropdown\n   */\n  const toggleSelecting = (): void => {\n    // Event listeners handling\n    if (!selecting) {\n      window.addEventListener(\"click\", clickOutsideHandler, true)\n    } else {\n      window.removeEventListener(\"click\", clickOutsideHandler, true)\n    }\n\n    // Toggle state variable\n    setSelecting(!selecting)\n  }\n\n  /*\n   * Handles value selection\n   * Definition is pretty self-explanatory\n   */\n  const selectValue = (value?: T): void => {\n    toggleSelecting()\n    setCurrentValue(value)\n    onSelectionChange(value)\n  }\n\n  /*\n   * Current selected value data\n   */\n  const currentValueOption: ISelectOption<T> | undefined = selectOptions.find(\n    (option) => option.value === currentValue\n  )\n\n  return (\n    <SelectWrapper id={id.current}>\n      <SelectValue selecting={selecting} onClick={toggleSelecting}>\n        <p>{currentValueOption?.collapsedDisplayText || defaultDisplayValue}</p>\n        <FiChevronDown size={10} />\n      </SelectValue>\n      {selecting && (\n        <SelectOptions alignment={alignment || \"left\"}>\n          {defaultDisplayValue && (\n            <SelectOption onClick={() => selectValue(undefined)}>\n              <p>{defaultDisplayValue}</p>\n            </SelectOption>\n          )}\n          {selectOptions.map(({ value, displayText, hoverBackgroundColor }) => (\n            <SelectOption\n              key={value}\n              onClick={() => {\n                selectValue(value)\n              }}\n              hoverBackgroundColor={hoverBackgroundColor}\n            >\n              <p>{displayText}</p>\n              <span>{hoverIcon}</span>\n            </SelectOption>\n          ))}\n        </SelectOptions>\n      )}\n    </SelectWrapper>\n  )\n}\n\nexport default Select\n\ninterface ISelecting {\n  selecting: boolean\n}\n\nconst SelectWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`\n\nconst SelectValue = styled.div<ISelecting>`\n  align-items: center;\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-normal);\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  font-size: 1.1rem;\n  outline: none;\n  padding: 5px 10px;\n  transition: all 0.15s linear;\n  ${(props) =>\n    props.selecting\n      ? `box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15),\n    0px 0px 2px var(--color-grey-normal);`\n      : \"\"}\n\n  & > p {\n    margin: 0;\n    flex-grow: 1;\n  }\n\n  & > svg {\n    margin-left: 0.5rem;\n  }\n`\n\ninterface ISelectOptions {\n  alignment: string\n}\n\nconst SelectOptions = styled.div<ISelectOptions>`\n  position: absolute;\n  top: 100%;\n\n  align-items: stretch;\n  ${(props) => (props.alignment === \"left\" ? \"left: 0;\" : \"\")}\n  ${(props) => (props.alignment === \"right\" ? \"right: 0;\" : \"\")}\n  background-color: var(--color-grey-lightest);\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15),\n    0px 0px 2px var(--color-grey-normal);\n  display: flex;\n  flex-direction: column;\n  font-size: 1.2rem;\n  margin-top: 0.5rem;\n  max-height: 400px;\n  overflow-y: auto;\n  padding: 0.5rem;\n  transition: all 0.05s linear;\n  width: calc(100% - 1rem);\n  z-index: 20;\n`\n\ninterface ISelectOptionProps {\n  hoverBackgroundColor?: string\n}\n\nconst SelectOption = styled.button<ISelectOptionProps>`\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  font-size: 1rem;\n  text-align: left;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.hoverBackgroundColor || \"var(--color-grey-lighter)\"};\n\n    & > span {\n      opacity: 1;\n    }\n  }\n\n  & > p {\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n    flex-grow: 1;\n  }\n\n  & > span {\n    display: inline-flex;\n    align-items: center;\n    opacity: 0;\n    transition: opacity 0.15s linear;\n  }\n`\n","import styled from \"styled-components\"\nimport InfoTooltip from \"./InfoTooltip\"\nimport Select, { ISelectOption } from \"../Select\"\n\ninterface SelectInputProps {\n  selectedOption: any\n  fieldName: string\n  selectOptions: ISelectOption<any>[]\n  label: string\n  tooltip?: string\n  onSelectionChange: (value: any) => void\n}\n\nconst SelectInput: React.FC<SelectInputProps> = (props) => {\n  const {\n    fieldName,\n    label,\n    selectOptions,\n    tooltip,\n    selectedOption,\n    onSelectionChange,\n  } = props\n\n  const currentValue = selectOptions.find((option) => {\n    return option.value === selectedOption.value\n  })\n  return (\n    <SelectInputWrapper>\n      <LabelWrapper>\n        <label htmlFor={fieldName}>{label}</label>\n        {tooltip && <InfoTooltip text={tooltip} />}\n      </LabelWrapper>\n      <Select\n        initialValue={currentValue}\n        selectOptions={selectOptions}\n        onSelectionChange={onSelectionChange}\n      />\n    </SelectInputWrapper>\n  )\n}\n\nconst SelectInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: flex-start;\n  padding: 0.5rem;\n  position: relative;\n\n  label {\n    font-weight: 600;\n    color: var(--color-grey-dark);\n    margin-right: 1rem;\n  }\n\n  &:hover > .error {\n    opacity: 1 !important;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-basis: 50%;\n  align-items: center;\n`\n\nexport default SelectInput\n","import { VFC } from \"react\"\nimport InputSection from \"./InputSection\"\nimport SelectInput from \"../forms/SelectInput\"\nimport {\n  timeUnitsOptions,\n  volumeUnitsOptions,\n  massUnitsOptions,\n  molarUnitsOptions,\n  temperatureUnitsOptions,\n  energyUnitsOptions,\n} from \"../../lib/units\"\nimport type { FormikProps } from \"formik\"\n\ninterface UnitsProps {\n  formik: FormikProps<Settings>\n}\n\nconst UnitsSection: VFC<UnitsProps> = (props) => {\n  const { formik } = props\n\n  return (\n    <InputSection>\n      <h2>Units</h2>\n      <SelectInput\n        selectedOption={timeUnitsOptions[formik.values.timeUnits]}\n        fieldName=\"timeUnits\"\n        label=\"Time units:\"\n        selectOptions={timeUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"timeUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n      <SelectInput\n        selectedOption={volumeUnitsOptions[formik.values.volumeUnits]}\n        fieldName=\"volumeUnits\"\n        label=\"Volume units:\"\n        selectOptions={volumeUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"volumeUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n      <SelectInput\n        selectedOption={molarUnitsOptions[formik.values.molarUnits]}\n        fieldName=\"molarUnits\"\n        label=\"Molar units:\"\n        selectOptions={molarUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"molarUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n      <SelectInput\n        selectedOption={massUnitsOptions[formik.values.massUnits]}\n        fieldName=\"massUnits\"\n        label=\"Mass units:\"\n        selectOptions={massUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"massUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n      <SelectInput\n        selectedOption={temperatureUnitsOptions[formik.values.temperatureUnits]}\n        fieldName=\"temperatureUnits\"\n        label=\"Temperature units:\"\n        selectOptions={temperatureUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"temperatureUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n      <SelectInput\n        selectedOption={energyUnitsOptions[formik.values.energyUnits]}\n        fieldName=\"energyUnits\"\n        label=\"Energy units:\"\n        selectOptions={energyUnitsOptions}\n        onSelectionChange={(value) => {\n          formik.setFieldValue(\"energyUnits\", value, false)\n          formik.handleSubmit()\n        }}\n      />\n    </InputSection>\n  )\n}\n\nexport default UnitsSection\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaCheck } from \"react-icons/fa\"\n\ninterface CheckboxWrapperProps {\n  toggled: boolean\n}\n\ntype CheckboxProps = {\n  onToggle: () => void\n} & CheckboxWrapperProps\n\nconst Checkbox: React.VFC<CheckboxProps> = (props) => {\n  const { toggled, onToggle } = props\n\n  return (\n    <CheckboxWrapper onClick={onToggle} toggled={toggled}>\n      {toggled && <FaCheck size={10} />}\n    </CheckboxWrapper>\n  )\n}\n\nconst CheckboxWrapper = styled.div<CheckboxWrapperProps>`\n  width: 0.8rem;\n  height: 0.8rem;\n  border: 2px solid var(--color-grey-normal);\n  background-color: ${(props) =>\n    props.toggled ? \"var(--color-grey-normal)\" : \"var(--color-grey-lightest)\"};\n  border-radius: 3px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0.5rem;\n\n  svg {\n    fill: var(--color-grey-lightest);\n  }\n`\n\nexport default Checkbox\n","import styled from \"styled-components\"\n\n/* Components */\nimport Error from \"./Error\"\nimport InfoTooltip from \"./InfoTooltip\"\nimport Checkbox from \"./Checkbox\"\n\n/* Types */\nimport type { FormikProps } from \"formik\"\n\n/*********************************\n * CAUTION: This checkbox only works inside a formik form\n *********************************/\n\ninterface CheckboxInputProps<T> {\n  error?: string\n  fieldName: string\n  formik: FormikProps<T>\n  label: string\n  tooltip?: string\n}\n\nconst CheckboxInput = <T extends unknown>(props: CheckboxInputProps<T>) => {\n  const { fieldName, formik, label, tooltip } = props\n\n  const key = fieldName as keyof typeof formik.values\n  const value = formik.values[key]\n  const error = formik.errors[key]\n\n  const onToggle = () => {\n    formik.setFieldValue(fieldName, !formik.values[key], false)\n    formik.handleSubmit()\n  }\n\n  return (\n    <CheckboxInputWrapper>\n      <Checkbox onToggle={onToggle} toggled={!!value} />\n      <LabelWrapper>\n        <label htmlFor={fieldName}>{label}</label>\n        {tooltip && <InfoTooltip text={tooltip} />}\n      </LabelWrapper>\n      {error && <Error>{error}</Error>}\n    </CheckboxInputWrapper>\n  )\n}\n\nexport default CheckboxInput\n\nconst CheckboxInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: flex-start;\n  padding: 0.5rem;\n  position: relative;\n\n  label {\n    font-weight: 600;\n    color: var(--color-grey-dark);\n  }\n\n  &:hover > .error {\n    opacity: 1 !important;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n","import InputSection from \"./InputSection\"\nimport FieldInput from \"../forms/FieldInput\"\nimport CheckboxInput from \"../forms/CheckboxInput\"\n\n/* Hooks */\nimport useSettings from \"../../hooks/useSettings\"\n\nimport { temperatureUnitsValue } from \"../../lib/units\"\n\nimport type { FormikProps } from \"formik\"\n\ninterface HeatExchangeProps {\n  formik: FormikProps<Settings>\n  onBlur: (event: React.ChangeEvent<HTMLInputElement>) => void\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst HeatExchangeSection: React.VFC<HeatExchangeProps> = (props) => {\n  const { formik, onBlur, onChange } = props\n  const { settings } = useSettings()\n\n  const temperatureUnits = temperatureUnitsValue(settings.temperatureUnits)\n  return (\n    <InputSection>\n      <h2>Heat Exchange</h2>\n      <CheckboxInput<Settings>\n        fieldName=\"isothermic\"\n        label=\"Isothermic system\"\n        {...{ formik }}\n      />\n      <FieldInput\n        fieldName=\"initialTemperature\"\n        label={`Initial Temperature [${temperatureUnits}]:`}\n        type=\"number\"\n        value={formik.values.initialTemperature}\n        error={formik.errors.initialTemperature}\n        {...{ onBlur, onChange }}\n      />\n    </InputSection>\n  )\n}\n\nexport default HeatExchangeSection\n","import styled from \"styled-components\"\n\n/* Components */\nimport PageTitle from \"../components/PageTitle\"\nimport OperatingTimesSection from \"../components/settings/OperatingTimesSection\"\nimport UnitsSection from \"../components/settings/UnitsSection\"\nimport HeatExchangeSection from \"../components/settings/HeatExchangeSection\"\n\n/* Helpers */\nimport {\n  validateEqual,\n  validateNotEmpty,\n  validateGreaterThan,\n} from \"../lib/validators\"\n\n/* Hooks */\nimport useSettings from \"../hooks/useSettings\"\nimport { useFormik } from \"formik\"\n\n/* Types */\nimport type { FormikProps } from \"formik\"\n\nconst SettingsPage: React.VFC = () => {\n  const { settings, saveSettings } = useSettings()\n\n  /**\n   * Form validation function\n   */\n  const validate = (values: Settings): SettingsErrors => {\n    const { deadTime, initialTemperature, timeStep, reactionTime } = values\n    const errors: SettingsErrors = {}\n\n    /* Reaction time validation */\n    if (!validateNotEmpty(reactionTime))\n      errors.reactionTime = \"Reaction time cannot be empty\"\n    else if (!validateGreaterThan(reactionTime, 0, true))\n      errors.reactionTime = \"Reaction time cannot be lower than 0\"\n\n    /* Dead time validation */\n    if (!validateNotEmpty(deadTime))\n      errors.deadTime = \"Dead time cannot be empty\"\n    else if (!validateGreaterThan(deadTime, 0, true))\n      errors.deadTime = \"Dead time cannot be lower than 0\"\n\n    /* Time step validation */\n    if (!validateNotEmpty(timeStep))\n      errors.timeStep = \"Time step cannot be empty\"\n    else if (!validateGreaterThan(timeStep, 0, false))\n      errors.timeStep = \"Time step has to be greater than 0\"\n    // TODO: Time step has to be lower than reaction time\n\n    /* Initial temperature validation */\n    if (!validateNotEmpty(timeStep))\n      errors.initialTemperature = \"Initial temperature cannot be empty\"\n    else if (\n      (validateEqual(initialTemperature, \"K\") ||\n        validateEqual(initialTemperature, \"R\")) &&\n      !validateGreaterThan(initialTemperature, 0, false)\n    )\n      errors.initialTemperature =\n        \"Initial temperature cannot be equal or lower than 0\"\n    else if (\n      validateEqual(initialTemperature, \"°C\") &&\n      !validateGreaterThan(initialTemperature, -273.15, false)\n    )\n      errors.initialTemperature =\n        \"Initial temperature cannot be equal or lower than -273.15\"\n    else if (\n      validateEqual(initialTemperature, \"°F\") &&\n      !validateGreaterThan(initialTemperature, -459.67, false)\n    )\n      errors.initialTemperature =\n        \"Initial temperature cannot be equal or lower than -459.67\"\n\n    return errors\n  }\n\n  const formik: FormikProps<Settings> = useFormik({\n    initialValues: { ...settings },\n    validate,\n    onSubmit: (values) => {\n      saveSettings(values)\n    },\n  })\n\n  const submit = () => {\n    formik.handleSubmit()\n  }\n\n  const onBlur = submit\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    formik.handleChange(event)\n\n  const sectionProps = {\n    formik,\n    onBlur,\n    onChange,\n  }\n\n  return (\n    <>\n      <PageTitle>Operation</PageTitle>\n\n      <Form>\n        <OperatingTimesSection {...sectionProps} />\n        <UnitsSection {...sectionProps} />\n        <HeatExchangeSection {...sectionProps} />\n      </Form>\n    </>\n  )\n}\n\nexport default SettingsPage\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n`\n","import styled from \"styled-components\"\n\nconst Notice = styled.p`\n  color: var(--color-grey-normal);\n  font-style: italic;\n  margin: 0.5rem;\n`\n\nexport default Notice\n","import styled from \"styled-components\"\n\n/* Components */\nimport { Fragment } from \"react\"\nimport Notice from \"../Notice\"\nimport { FiArrowRight, FiPlus } from \"react-icons/fi\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Hooks */\nimport useCompounds from \"../../hooks/useCompounds\"\n\ninterface IReactionPreviewProps {\n  reaction: Reaction\n}\n\nconst ReactionPreview: React.FC<IReactionPreviewProps> = (props) => {\n  const { reaction } = props\n  const { findCompound } = useCompounds()\n\n  return (\n    <ReactionPreviewWrapper>\n      {reaction.reactants.length === 0 && reaction.products.length === 0 && (\n        <Notice>No reaction data</Notice>\n      )}\n\n      {reaction.reactants.map((reactionCompound, index) => {\n        const compound = findCompound(reactionCompound.compoundId) as Compound\n\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            {index !== 0 && <FiPlus size={25} />}\n            <CompoundWrapper>\n              <p>{reactionCompound.stoichiometricCoefficient}</p>\n              <CompoundTile\n                color={compound.color as keyof typeof COMPOUND_COLORS}\n              >\n                {compound.symbol}\n              </CompoundTile>\n            </CompoundWrapper>\n          </Fragment>\n        )\n      })}\n\n      {reaction.reactants.length > 0 && reaction.products.length > 0 && (\n        <FiArrowRight size={25} />\n      )}\n\n      {reaction.products.map((reactionCompound, index) => {\n        const compound = findCompound(reactionCompound.compoundId) as Compound\n\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            {index !== 0 && <FiPlus size={25} />}\n            <CompoundWrapper>\n              <p>{reactionCompound.stoichiometricCoefficient}</p>\n              <CompoundTile\n                color={compound.color as keyof typeof COMPOUND_COLORS}\n              >\n                {compound.symbol}\n              </CompoundTile>\n            </CompoundWrapper>\n          </Fragment>\n        )\n      })}\n    </ReactionPreviewWrapper>\n  )\n}\n\nexport default ReactionPreview\n\nconst ReactionPreviewWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  min-height: 3rem;\n`\n\nconst CompoundWrapper = styled.div`\n  align-items: flex-end;\n  display: flex;\n  margin: 0 0.5rem;\n\n  p {\n    color: var(--color-grey-dark);\n    font-size: 1.6rem;\n    margin: 0 0 0.2rem 0;\n  }\n`\n\ninterface ICompoundColorBulletProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst CompoundTile = styled.div<ICompoundColorBulletProps>`\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border-radius: 5px;\n  border: 1px solid var(--color-grey-normal);\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.15);\n  color: var(--color-grey-dark);\n  font-size: 1.6rem;\n  margin: 0 0.5rem;\n  padding: 0.5rem 0.9rem;\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport CardButton from \"../CardButton\"\nimport ReactionPreview from \"./ReactionPreview\"\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\"\n\ninterface IReactionCardProps {\n  reaction: Reaction\n  reactionIndex: number\n  editReaction: () => void\n  removeReaction: () => void\n}\n\nconst ReactionCard: React.FC<IReactionCardProps> = (props) => {\n  const { reaction, reactionIndex, editReaction, removeReaction } = props\n\n  return (\n    <ReactionCardWrapper>\n      <ReactionInfo>\n        <ReactionName>\n          {`#${reactionIndex + 1}`} {reaction.name ? ` - ${reaction.name}` : \"\"}\n        </ReactionName>\n        <ReactionPreview reaction={reaction} />\n      </ReactionInfo>\n      <CardButton onClick={editReaction}>\n        <FiEdit />\n      </CardButton>\n      <CardButton onClick={removeReaction}>\n        <FiTrash2 />\n      </CardButton>\n    </ReactionCardWrapper>\n  )\n}\n\nexport default ReactionCard\n\nconst ReactionCardWrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  position: relative;\n\n  align-items: center;\n  align-self: stretch;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  border-radius: 5px;\n  border: 1.5px solid var(--color-grey-lightest);\n  display: flex;\n  color: var(--color-grey-dark);\n  cursor: pointer;\n  flex-basis: 100%;\n  overflow: hidden;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.15);\n    transform: translateY(-2px);\n  }\n\n  p:not(:first-child) {\n    flex-grow: 1;\n    margin: 0;\n  }\n`\n\nconst ReactionName = styled.p`\n  color: var(--color-grey-normal);\n  flex-grow: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0;\n  padding-left: 0.6rem;\n  padding-bottom: 0.5rem;\n`\n\nconst ReactionInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`\n","/**\n * This is a placeholder for more complex kinetic models,\n * where constants can be added and used in expressions\n *\n * Kinetic constants are representes by:\n *  - A principal constant, with key @reactionConstant\n *  - A compound-specific constant, with key @compoundId\n *\n * More complex models are not considerer, for simplicity of\n * the MVP1\n */\n\nimport { KineticModels } from \"../lib/reactionTypes\"\n\nexport const KINETIC_MODELS = [\"Simple\", \"Hiperbolic\", \"Autocatalytic\"]\n\nexport const generateKineticConstants = (\n  model: KineticModel,\n  reaction: Reaction,\n  compounds: Compound[]\n): KineticConstants => {\n  switch (model) {\n    case KineticModels.hyperbolic:\n      return generateHiperbolicModelConstants(reaction, compounds)\n    case KineticModels.autocatalytic:\n      return generateAutocatalyticModelConstants(reaction, compounds)\n    default:\n      // simple\n      return generateSimpleModelConstants(reaction, compounds)\n  }\n}\n\nconst generateSimpleModelConstants = (\n  reaction: Reaction,\n  compounds: Compound[]\n) => {\n  const updatedExponents: KineticConstants = {\n    \"k_\\\\inf\": reaction.kineticConstants[\"k_\\\\inf\"],\n    E_A: reaction.kineticConstants.E_A,\n    \"\\\\Delta+H_r\": reaction.kineticConstants[\"\\\\Delta+H_r\"],\n  }\n\n  reaction.reactants.forEach((reactionCompound: ReactionCompound) => {\n    const compound = compounds.find(\n      (c) => c.id === reactionCompound.compoundId\n    ) as Compound\n    const paramKey = reactantExponent(compound)\n    const oldConstant = reaction.kineticConstants[paramKey]\n\n    if (oldConstant === undefined) {\n      updatedExponents[paramKey] = \"1\"\n    } else {\n      updatedExponents[paramKey] = oldConstant\n    }\n  })\n\n  return { ...updatedExponents }\n}\n\nconst generateHiperbolicModelConstants = (\n  reaction: Reaction,\n  compounds: Compound[]\n) => {\n  const updatedExponents: KineticConstants = {\n    \"k_\\\\inf\": reaction.kineticConstants[\"k_\\\\inf\"],\n    E_A: reaction.kineticConstants.E_A,\n    \"\\\\Delta+H_r\": reaction.kineticConstants[\"\\\\Delta+H_r\"],\n  }\n\n  reaction.reactants.forEach((reactionCompound: ReactionCompound) => {\n    const compound = compounds.find(\n      (c) => c.id === reactionCompound.compoundId\n    ) as Compound\n    const paramKey = semiSaturationConstant(compound)\n    const oldConstant = reaction.kineticConstants[paramKey]\n\n    if (oldConstant === undefined) {\n      updatedExponents[paramKey] = \"1\"\n    } else {\n      updatedExponents[paramKey] = oldConstant\n    }\n  })\n\n  return { ...updatedExponents }\n}\n\nconst generateAutocatalyticModelConstants = (\n  reaction: Reaction,\n  compounds: Compound[]\n) => {\n  const updatedExponents: KineticConstants = {\n    \"k_\\\\inf\": reaction.kineticConstants[\"k_\\\\inf\"],\n    E_A: reaction.kineticConstants.E_A,\n    \"\\\\Delta+H_r\": reaction.kineticConstants[\"\\\\Delta+H_r\"],\n  }\n\n  reaction.reactants.forEach((reactionCompound: ReactionCompound) => {\n    const compound = compounds.find(\n      (c) => c.id === reactionCompound.compoundId\n    ) as Compound\n    const paramKey = reactantExponent(compound)\n    const oldConstant = reaction.kineticConstants[paramKey]\n\n    if (oldConstant === undefined) {\n      updatedExponents[paramKey] = \"1\"\n    } else {\n      updatedExponents[paramKey] = oldConstant\n    }\n  })\n  reaction.products.forEach((reactionCompound: ReactionCompound) => {\n    const compound = compounds.find(\n      (c) => c.id === reactionCompound.compoundId\n    ) as Compound\n    const paramKey = productExponent(compound)\n    const oldConstant = reaction.kineticConstants[paramKey]\n\n    if (oldConstant === undefined) {\n      updatedExponents[paramKey] = \"1\"\n    } else {\n      updatedExponents[paramKey] = oldConstant\n    }\n  })\n\n  return { ...updatedExponents }\n}\n\n// Some placeholder parameters\n\nexport const reactantExponent = (compound: Compound) => {\n  return `\\\\alpha_${compound.symbol}`\n}\n\nexport const productExponent = (compound: Compound) => {\n  return `\\\\beta_${compound.symbol}`\n}\n\nexport const semiSaturationConstant = (compound: Compound) => {\n  return `K_${compound.symbol}`\n}\n","import styled from \"styled-components\"\n\nexport const ModalInputSection = styled.div`\n  border-top: 1px solid var(--color-grey-light);\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  padding: 2rem 1rem 0rem;\n\n  h2 {\n    color: var(--color-grey-dark);\n    font-size: 20px;\n    margin-top: 0;\n  }\n`\n\nexport const ModalColumnInputSection = styled(ModalInputSection)`\n  flex-direction: column;\n  flex-wrap: nowrap;\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport CardButton from \"../CardButton\"\nimport { FiTrash2 } from \"react-icons/fi\"\nimport Input from \"../forms/Input\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Helpers */\nimport { validateNotEmpty } from \"../../lib/validators\"\n\n/* Hooks */\nimport { useState } from \"react\"\n\ninterface IReactionCompoundCardProps {\n  key: string\n  compound: Compound\n  reactionCompound: ReactionCompound\n  updateCompound: (updatedReactionCompound: ReactionCompound) => void\n  removeCompound: () => void\n}\n\nconst ReactionCompoundCard: React.FC<IReactionCompoundCardProps> = (props) => {\n  const { compound, reactionCompound, updateCompound, removeCompound } = props\n\n  /* Coefficient is short for Stoichiometric Coefficient in this component */\n  const [coefficientInput, setCoefficientInput] = useState<number | \"\">(\n    reactionCompound.stoichiometricCoefficient\n  )\n\n  const handleCoefficientChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.target.value === \"\") {\n      setCoefficientInput(\"\")\n      return\n    }\n    setCoefficientInput(parseFloat(event.target.value))\n  }\n\n  const validateAndUpdateCoefficient = () => {\n    if (validateNotEmpty(coefficientInput)) {\n      updateCompound({\n        ...reactionCompound,\n        stoichiometricCoefficient: coefficientInput as number,\n      })\n      return\n    }\n    setCoefficientInput(reactionCompound.stoichiometricCoefficient)\n  }\n\n  return (\n    <ReactionCompoundCardWrapper\n      color={compound.color as keyof typeof COMPOUND_COLORS}\n    >\n      <h1>{compound.symbol}</h1>\n      <Input\n        value={coefficientInput}\n        type=\"number\"\n        onChange={handleCoefficientChange}\n        onBlur={validateAndUpdateCoefficient}\n        transparent\n      />\n      <CardButton onClick={removeCompound}>\n        <FiTrash2 />\n      </CardButton>\n    </ReactionCompoundCardWrapper>\n  )\n}\n\nexport default ReactionCompoundCard\n\ninterface IReactionCompoundCardWrapperProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst ReactionCompoundCardWrapper = styled.div<IReactionCompoundCardWrapperProps>`\n  margin: 5px;\n  padding: 1rem 1.3rem;\n  position: relative;\n\n  align-items: center;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border-radius: 5px;\n  color: var(--color-grey-dark);\n  display: flex;\n  cursor: pointer;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    & {\n      box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n  }\n\n  h1 {\n    flex-grow: 1;\n    font-size: 1.8rem;\n    margin: 0;\n  }\n\n  input {\n    font-size: 1.3rem;\n    width: 0px;\n  }\n\n  button {\n    opacity: 1;\n    margin-left: 0.5rem;\n  }\n`\n","/* Components */\nimport ReactionCompoundCard from \"./ReactionCompoundCard\"\n\n/* Hooks */\nimport useCompounds from \"../../hooks/useCompounds\"\n\ninterface IReactionCompoundListProps {\n  compoundType: CompoundType\n  reactionCompounds: ReactionCompound[]\n  reactionIndex: number\n  removeCompound: (compoundIndex: number, compoundType: CompoundType) => void\n  updateCompound: (\n    compoundIndex: number,\n    compoundType: CompoundType,\n    updatedCompound: ReactionCompound\n  ) => void\n}\n\nconst ReactionCompoundList: React.FC<IReactionCompoundListProps> = (props) => {\n  const { reactionCompounds, removeCompound, updateCompound, compoundType } =\n    props\n  const { findCompound } = useCompounds()\n\n  return (\n    <>\n      {reactionCompounds.map((reactionCompound) => {\n        const compound = findCompound(reactionCompound.compoundId) as Compound\n        /**\n         * compoundIndex is the index in the reaction object (reactants or products)\n         *  */\n        const compoundIndex = reactionCompounds.findIndex(\n          (c) => c.compoundId === reactionCompound.compoundId\n        ) as number\n\n        return (\n          <ReactionCompoundCard\n            key={reactionCompound.compoundId}\n            compound={compound}\n            reactionCompound={reactionCompound}\n            updateCompound={(updatedReactionCompound: ReactionCompound) => {\n              updateCompound(\n                compoundIndex,\n                compoundType,\n                updatedReactionCompound\n              )\n            }}\n            removeCompound={() => {\n              removeCompound(compoundIndex, compoundType)\n            }}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default ReactionCompoundList\n","import styled from \"styled-components\"\nimport { Fragment } from \"react\"\nimport { TokenTypes } from \"../lib/tokens/tokenTypes\"\n\ntype Term = string | JSX.Element\n\ninterface IEquation {\n  tokenizedEquation: Token[]\n}\n\n// It is necessary to specify the 'parenthesis level' at which the operation is done\ninterface Operation {\n  code: Term\n  level: number\n}\n\nexport const Equation: React.FC<IEquation> = (props) => {\n  const { tokenizedEquation } = props\n  const components: JSX.Element[] = []\n\n  const parenthesisStack: Term[][] = []\n  const operationStack: Operation[] = []\n\n  tokenizedEquation.forEach((token) => {\n    /**\n     * Parenthesis treatment takes precedence over everything else.\n     *\n     * A buffer is pushed to the parenthesis stack upon finding a left bracket.\n     *\n     * When a right parenthesis is found, the last element from the buffer is popped,\n     * and added as a parenthesis component to the latest parenthesis stack, or the components array\n     */\n    if (token.type === TokenTypes.LeftParenthesis) {\n      parenthesisStack.push([])\n    } else if (token.type === TokenTypes.RightParenthesis) {\n      // If the syntax is correct, pop should never return undefined\n      const parenthesis = parenthesisStack.pop() as (string | JSX.Element)[]\n\n      // If there are elements in the parenthesisStack, then push any new components to it\n      // If not, push any new components to the components array\n      const currentStack =\n        parenthesisStack.length === 0\n          ? components\n          : parenthesisStack[parenthesisStack.length - 1]\n\n      // If there are operations in the operationStack, and if the latest operation\n      // matches the parenthesis level, pop most recent one\n      if (\n        operationStack.length > 0 &&\n        operationStack[operationStack.length - 1].level ===\n          parenthesisStack.length\n      ) {\n        const operation = operationStack.pop() as Operation\n\n        //\n        if (operation.code === \"/\") {\n          const numerator = currentStack.pop() as string | JSX.Element\n          currentStack.push(\n            <Division\n              numerator={numerator}\n              denominator={<Parenthesis elements={parenthesis} />}\n            />\n          )\n        } else if (operation.code === \"^\") {\n          const base = currentStack.pop() as string | JSX.Element\n          currentStack.push(\n            <Power base={base} power={<Parenthesis elements={parenthesis} />} />\n          )\n        } else if (operation.code === \"-\" || operation.code === \"+\") {\n          currentStack.push(operation.code)\n          currentStack.push(<Parenthesis elements={parenthesis} />)\n        }\n      } else {\n        // No *valid* operations in operationStack, simply push component\n        currentStack.push(<Parenthesis elements={parenthesis} />)\n      }\n    }\n    //\n    /**\n     * Variables and parameters are easy to treat.\n     *\n     * The only considerations are to push to the parenthesis stack\n     * if a buffer is present, and to build Division and Power components if\n     * necessary.\n     */\n    else if (\n      token.type === TokenTypes.Parameter ||\n      token.type === TokenTypes.Variable\n    ) {\n      /**\n       * Push to parenthesis stack if one is present\n       */\n      if (parenthesisStack.length > 0) {\n        parenthesisStack[parenthesisStack.length - 1].push(\n          <SymbolComponent\n            symbol={(token.value as string).replace(/<|>|{|}/g, \"\")}\n          />\n        )\n      }\n      //\n      /**\n       * Then, check if division or power are present in the stack\n       *  */\n      else if (operationStack.length > 0) {\n        /**\n         * Pop most recent operation from stack\n         */\n        const operation = operationStack.pop() as Operation\n        //\n        if (operation.code === \"/\") {\n          const numerator = components.pop() as string | JSX.Element\n          components.push(\n            <Division\n              numerator={numerator}\n              denominator={\n                <SymbolComponent\n                  symbol={(token.value as string).replace(/<|>|{|}/g, \"\")}\n                />\n              }\n            />\n          )\n        } else if (operation.code === \"^\") {\n          const base = components.pop() as string | JSX.Element\n          components.push(\n            <Power\n              base={base}\n              power={\n                <SymbolComponent\n                  symbol={(token.value as string).replace(/<|>|{|}/g, \"\")}\n                />\n              }\n            />\n          )\n        }\n      }\n      //\n      /**\n       * Next steps are easier: close parenthesis or just push to components\n       */\n      else {\n        components.push(\n          <SymbolComponent\n            symbol={(token.value as string).replace(/<|>|{|}/g, \"\")}\n          />\n        )\n      }\n    }\n    //\n    /**\n     * Division and power are special in that they need the previous\n     * element in components. For this reason, the use a stack.\n     * */\n    else if (token.type === TokenTypes.Operator) {\n      if (token.value === \"/\" || token.value === \"^\") {\n        //\n        operationStack.push({\n          code: token.value,\n          level: parenthesisStack.length,\n        })\n      }\n      //\n      else if (parenthesisStack.length > 0) {\n        if (token.value === \"+\" || token.value === \"-\") {\n          parenthesisStack[parenthesisStack.length - 1].push(<>{token.value}</>)\n        } else if (token.value === \"*\") {\n          parenthesisStack[parenthesisStack.length - 1].push(<>.</>)\n        }\n      } else {\n        if (token.value === \"+\" || token.value === \"-\") {\n          components.push(<>{token.value}</>)\n        } else if (token.value === \"*\") {\n          components.push(<>.</>)\n        }\n      }\n    }\n  })\n\n  return (\n    <>\n      {components.map((component, index) => (\n        <Fragment key={index}>{component}</Fragment>\n      ))}\n    </>\n  )\n}\n\n// ----------------------------------------------------------------\n/**\n * Symbol Component\n * For alphanumeric expressions such as variables or parameters\n */\ninterface ISymbolComponent {\n  symbol: string\n}\n\nconst replaceBySymbol = (symbol: string | JSX.Element) => {\n  // Replace symbols represented as strings for components\n  switch (symbol) {\n    case \"\\\\alpha\":\n      return <GreekAlpha />\n    case \"\\\\beta\":\n      return <GreekBeta />\n    case \"\\\\mu\":\n      return <GreekMu />\n    case \"\\\\Delta\":\n      return <GreekDeltaCapital />\n    case \"\\\\inf\":\n      return <SymbolInfinity />\n    default:\n      return symbol\n  }\n}\n\nexport const SymbolComponent: React.FC<ISymbolComponent> = (props) => {\n  const { symbol } = props\n\n  /**\n   * Expressions may have subindices\n   * For now, they may not have superindices (TODO: maybe?)\n   * TODO: Support commas for subindex separation?\n   */\n  const separatedTerms: Term[] = symbol.split(\"_\")\n  const termsThatGoTogether: Term[][] = separatedTerms.map((term) =>\n    (term as string).split(\"+\")\n  )\n\n  termsThatGoTogether.forEach((termGroup: Term[], index) => {\n    // Replace symbols represented as strings for components\n    termGroup.forEach(\n      (term: Term, index) => (termGroup[index] = replaceBySymbol(term))\n    )\n\n    // Join terms that go together into a single term\n    separatedTerms[index] = (\n      <>\n        {termGroup.map((term, index) => (\n          <Fragment key={index}>{term}</Fragment>\n        ))}\n      </>\n    )\n  })\n\n  separatedTerms.forEach(\n    (term, index) => (separatedTerms[index] = replaceBySymbol(term))\n  )\n\n  for (let i = separatedTerms.length - 1; i > 0; i--) {\n    // Last term will be the subindex\n    const subindex = separatedTerms.pop() as string | JSX.Element\n    separatedTerms[i - 1] = (\n      <Subindex base={separatedTerms[i - 1]} subindex={subindex} />\n    )\n  }\n\n  // Final result is at separatedTerms[0]\n  return separatedTerms[0] as JSX.Element\n}\n\n// ----------------------------------------------------------------\n/**\n * Parenthesis\n */\n\ninterface IParenthesisProps {\n  elements: (string | JSX.Element)[]\n}\n\nexport const Parenthesis: React.FC<IParenthesisProps> = (props) => {\n  const { elements } = props\n\n  return (\n    <>\n      {elements.map((elem, index) => (\n        <Fragment key={index}>{elem}</Fragment>\n      ))}\n    </>\n  )\n}\n\n// ----------------------------------------------------------------\n/**\n * Division\n */\n\ninterface IDivisionProps {\n  numerator: string | JSX.Element\n  denominator: string | JSX.Element\n}\n\nexport const Division: React.FC<IDivisionProps> = (props) => {\n  const { numerator, denominator } = props\n\n  return (\n    <DivisionWrapper>\n      <div>{numerator}</div>\n      <div></div>\n      <div>{denominator}</div>\n    </DivisionWrapper>\n  )\n}\n\nconst DivisionWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  & > div:not(:nth-child(2)) {\n    display: flex;\n    padding: 0.5rem;\n    position: relative;\n  }\n\n  & > div:nth-child(2) {\n    width: 100%;\n    height: 2px;\n    background-color: var(--color-grey-dark);\n  }\n`\n\n// ----------------------------------------------------------------\n/**\n * Power\n *  */\n\ninterface IPowerProps {\n  base: string | JSX.Element\n  power: string | JSX.Element\n}\n\nexport const Power: React.FC<IPowerProps> = (props) => {\n  const { base, power } = props\n  return (\n    <PowerWrapper>\n      <div>{base}</div>\n      <div className=\"exponent\">{power}</div>\n    </PowerWrapper>\n  )\n}\n\nconst PowerWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  & > .exponent {\n    transform: translateY(-30%) scale(0.7);\n  }\n`\n\n// ----------------------------------------------------------------\n/**\n * Subindex\n *  */\n\ninterface ISubindexProps {\n  base: string | JSX.Element\n  subindex: string | JSX.Element\n}\n\nexport const Subindex: React.FC<ISubindexProps> = (props) => {\n  const { base, subindex } = props\n  return (\n    <SubindexWrapper>\n      <div>{base}</div>\n      <div className=\"subindex\">{subindex}</div>\n    </SubindexWrapper>\n  )\n}\n\nconst SubindexWrapper = styled.div`\n  position: relative;\n  display: flex;\n\n  & > .subindex {\n    transform: translateY(30%) scale(0.75);\n  }\n`\n\n// ----------------------------------------------------------------\n/**\n * Greek letters\n */\n\nexport const GreekAlpha = () => <span>&alpha;</span>\nexport const GreekBeta = () => <span>&beta;</span>\nexport const GreekMu = () => <span>&mu;</span>\n\nexport const GreekDeltaCapital = () => <span>&Delta;</span>\n\n// ----------------------------------------------------------------\n/**\n * Other Symbols\n */\nexport const SymbolInfinity = () => <span>&infin;</span>\n","import styled from \"styled-components\"\n\n/* Components */\nimport { Equation, Subindex } from \"../MathExpressions\"\n\n/* Hooks */\nimport useCompounds from \"../../hooks/useCompounds\"\n\ninterface IReactionEquationProps {\n  reaction: Reaction\n  keyCompoundSymbol?: string\n}\n\nconst ReactionEquation: React.FC<IReactionEquationProps> = (props) => {\n  const { reaction } = props\n  const { findCompound } = useCompounds()\n\n  const keyCompound = findCompound(reaction.keyCompound)\n  const keyCompoundSymbol: string | undefined = keyCompound?.symbol || undefined\n\n  return (\n    <EquationWrapper>\n      {keyCompoundSymbol && (\n        <>\n          <Subindex base=\"r\" subindex={keyCompoundSymbol} />\n          &nbsp;=&nbsp;\n        </>\n      )}\n      <Equation tokenizedEquation={reaction.kineticEquation} />\n    </EquationWrapper>\n  )\n}\n\nexport default ReactionEquation\n\n//\n\nconst EquationWrapper = styled.div`\n  align-items: center;\n  align-self: stretch;\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-light);\n  border-radius: 5px;\n  box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.1);\n  color: var(--color-grey-dark);\n  display: flex;\n  font-size: 1.8rem;\n  justify-content: center;\n  padding: 1.5rem;\n  margin: 1.5rem 0 1rem;\n\n  span {\n    font-family: \"Comfortaa\", symbol;\n  }\n`\n","export const SCI_REGEX: RegExp = /((-)?\\d+(.\\d+)?([eE]{1,1}[-]?\\d+(.\\d+)?)?)/g\n\nexport const SCI_POSITIVE_REGEX: RegExp =\n  /(\\d+(.\\d+)?([eE]{1,1}[-]?\\d+(.\\d+)?)?)/g\n","import styled from \"styled-components\"\nimport InfoTooltip from \"../forms/InfoTooltip\"\nimport Input from \"../forms/Input\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\nimport { validateNotEmpty } from \"../../lib/validators\"\nimport { SCI_REGEX, SCI_POSITIVE_REGEX } from \"../../constants/regexs\"\nimport { useState } from \"react\"\n\ninterface ReactionParamInputCardProps {\n  paramSymbol: string | JSX.Element | JSX.Element[]\n  units?: JSX.Element\n  value: string\n  positive?: boolean\n  updateValue: (value: string) => void\n}\n\nconst ALLOWED_CHARS = \"0123456789.-+eE\"\n\nconst ReactionParamInputCard: React.FC<ReactionParamInputCardProps> = (\n  props\n) => {\n  const { paramSymbol, value, positive = false, units, updateValue } = props\n  const [valueInput, setValueInput] = useState<string>(value)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value === \"\") {\n      setValueInput(\"\")\n      return\n    }\n\n    // Filter input unallowed characters\n    const filtered = event.target.value\n      .split(\"\")\n      .filter((el) => ALLOWED_CHARS.indexOf(el) > -1)\n      .join(\"\")\n\n    setValueInput(filtered)\n  }\n\n  const validateAndUpdateConstant = () => {\n    if (!validateNotEmpty(valueInput)) {\n      // Reset value\n      setValueInput(valueInput)\n      return\n    }\n\n    let validString: string | undefined\n\n    if (positive) validString = valueInput.match(SCI_POSITIVE_REGEX)?.[0]\n    else validString = valueInput.match(SCI_REGEX)?.[0]\n\n    if (!validString) {\n      // Reset value\n      setValueInput(valueInput)\n      return\n    }\n\n    updateValue(validString)\n    setValueInput(validString)\n  }\n\n  return (\n    <ParamInputWrapper>\n      <ParamInputInner>\n        <h1>{paramSymbol}</h1>\n        <Input\n          value={valueInput}\n          type=\"text\"\n          onChange={handleChange}\n          onBlur={validateAndUpdateConstant}\n          transparent\n        />\n        {units && <InfoTooltip text={units} />}\n      </ParamInputInner>\n    </ParamInputWrapper>\n  )\n}\n\nexport default ReactionParamInputCard\n\nconst ParamInputWrapper = styled.div`\n  flex-basis: 50%;\n  flex-shrink: 0;\n  position: relative;\n  z-index: 2;\n\n  @media screen and (max-width: 600px) {\n    flex-basis: 100%;\n  }\n\n  &:hover {\n    z-index: 3;\n  }\n`\n\nconst ParamInputInner = styled.div`\n  position: relative;\n  align-items: center;\n  background-color: var(--color-grey-light);\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  margin: 0.5rem;\n  padding: 1rem 1.3rem;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n    transform: translateY(-2px);\n  }\n\n  h1 {\n    color: var(--color-grey-dark);\n    font-size: 1.6rem;\n    margin: 0;\n    margin-right: 1rem;\n    flex-grow: 1;\n\n    @media screen and (max-width: ${mobileBreakpoint}px) {\n      flex-basis: 0;\n      flex-grow: 0;\n      flex-shrink: 1;\n    }\n\n    span {\n      /* Greek symbols */\n      font-family: \"Comfortaa\", symbol;\n    }\n  }\n\n  input {\n    font-size: 1.4rem;\n  }\n`\n","import {\n  timeUnitsValue,\n  temperatureUnitsValue,\n  volumeUnitsValue,\n  molarUnitsValue,\n  energyUnitsValue,\n} from \"../lib/units\"\nimport {\n  multiplicationToken,\n  exponentiationToken,\n  parameterToken,\n  minusOneToken,\n} from \"../lib/tokens/tokenTypes\"\nimport useSettings from \"./useSettings\"\n\nconst useUnits = () => {\n  const { settings } = useSettings()\n\n  /**\n   * Physical variable units\n   */\n  const timeUnits = timeUnitsValue(settings.timeUnits)\n  const temperatureUnits = temperatureUnitsValue(settings.temperatureUnits)\n  const volumeUnits = volumeUnitsValue(settings.volumeUnits)\n  const molarUnits = molarUnitsValue(settings.molarUnits)\n  const energyUnits = energyUnitsValue(settings.energyUnits)\n\n  /**\n   * Constant units\n   */\n  const tokenizedMuUnits = [\n    parameterToken(timeUnits),\n    exponentiationToken,\n    minusOneToken,\n  ]\n\n  const tokenizedActivationEnergyUnits = [\n    parameterToken(energyUnits),\n    multiplicationToken,\n    parameterToken(molarUnits),\n    exponentiationToken,\n    minusOneToken,\n    multiplicationToken,\n    parameterToken(temperatureUnits),\n    exponentiationToken,\n    minusOneToken,\n  ]\n\n  const tokenizedReactionEnthalpyUnits = [\n    parameterToken(energyUnits),\n    multiplicationToken,\n    parameterToken(molarUnits),\n    exponentiationToken,\n    minusOneToken,\n  ]\n\n  const tokenizedKUnits = (order: number) => {\n    const kUnits = [\n      parameterToken(timeUnits),\n      exponentiationToken,\n      minusOneToken,\n    ]\n\n    if (order !== 1) {\n      kUnits.push(multiplicationToken)\n      kUnits.push(parameterToken(volumeUnits))\n      kUnits.push(exponentiationToken)\n      kUnits.push(parameterToken(`${order - 1}`))\n      kUnits.push(multiplicationToken)\n      kUnits.push(parameterToken(molarUnits))\n      kUnits.push(exponentiationToken)\n      kUnits.push(parameterToken(`${-(order - 1)}`))\n    }\n\n    return kUnits\n  }\n\n  return {\n    timeUnits,\n    temperatureUnits,\n    volumeUnits,\n    molarUnits,\n    energyUnits,\n\n    tokenizedMuUnits,\n    tokenizedKUnits,\n    tokenizedActivationEnergyUnits,\n    tokenizedReactionEnthalpyUnits,\n  }\n}\n\nexport default useUnits\n","import styled from \"styled-components\"\nimport ReactionParamInputCard from \"./ReactionParamInputCard\"\nimport { Equation, SymbolComponent } from \"../MathExpressions\"\nimport { KineticModels } from \"../../lib/reactionTypes\"\nimport {\n  reactionConstantsSymbols,\n  isVariableRelatedParam,\n} from \"../../lib/reactions\"\nimport useUnits from \"../../hooks/useUnits\"\ninterface ReactionKineticParametersProps {\n  compounds: Compound[]\n  reaction: Reaction\n  updateKineticConstant: (key: string, value: string) => void\n}\n\nconst ReactionKineticParameters: React.FC<ReactionKineticParametersProps> = (\n  props\n) => {\n  const { reaction, updateKineticConstant } = props\n  const kineticModel: KineticModel = reaction.kineticModel\n\n  const {\n    tokenizedKUnits,\n    tokenizedMuUnits,\n    tokenizedActivationEnergyUnits,\n    tokenizedReactionEnthalpyUnits,\n  } = useUnits()\n\n  const globalOrder = Object.entries(reaction?.kineticConstants).reduce(\n    (accumulator, [key, value]) => {\n      if (isVariableRelatedParam(key)) {\n        return accumulator\n      }\n      return accumulator + parseFloat(value)\n    },\n    0\n  )\n\n  return (\n    <KineticParamsWrapper>\n      {Object.entries(reaction.kineticConstants).map(([param, value]) => {\n        let units\n\n        if (param === reactionConstantsSymbols.preExponential) {\n          if (kineticModel === KineticModels.hyperbolic) {\n            units = <Equation tokenizedEquation={tokenizedMuUnits} />\n          } else {\n            units = (\n              <Equation tokenizedEquation={tokenizedKUnits(globalOrder)} />\n            )\n          }\n        }\n\n        if (param === reactionConstantsSymbols.activationEnergy) {\n          units = (\n            <Equation tokenizedEquation={tokenizedActivationEnergyUnits} />\n          )\n        }\n\n        if (param === reactionConstantsSymbols.reactionEnthalpy) {\n          units = (\n            <Equation tokenizedEquation={tokenizedReactionEnthalpyUnits} />\n          )\n        }\n\n        return (\n          <ReactionParamInputCard\n            key={param}\n            paramSymbol={<SymbolComponent symbol={param} />}\n            value={value}\n            units={units}\n            positive={param !== reactionConstantsSymbols.reactionEnthalpy}\n            updateValue={(value: string) => {\n              updateKineticConstant(param, value)\n            }}\n          />\n        )\n      })}\n    </KineticParamsWrapper>\n  )\n}\n\nexport default ReactionKineticParameters\n\nconst KineticParamsWrapper = styled.div`\n  align-self: stretch;\n  background-color: var(--color-grey-lightest);\n  border-radius: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n\n  input {\n    margin-left: 0;\n  }\n`\n","import {\n  divisionToken,\n  exponentiationToken,\n  multiplicationToken,\n  subtractionToken,\n  parameterToken,\n  variableToken,\n  leftParenthesisToken,\n  rightParenthesisToken,\n  additionToken,\n} from \"./tokens/tokenTypes\"\nimport { KineticModels } from \"./reactionTypes\"\n\nconst serializeKineticEquation = (\n  reaction: Reaction,\n  compounds: Compound[]\n): Token[] => {\n  const findCompound = (id: string): Compound | undefined => {\n    return compounds.find((c) => c.id === id)\n  }\n\n  const equationTokens: Token[] = []\n  /**\n   * TODO: this is just a placeholder for a future serialization system, maybe\n   * TODO: with direct user input!\n   *\n   * Returns tokenized equation with standard notation\n   */\n  switch (reaction.kineticModel) {\n    case KineticModels.hyperbolic:\n      equationTokens.push(parameterToken(`<k_\\\\inf>`))\n      addArrheniusExponential(equationTokens)\n\n      reaction.reactants.forEach((reactionCompound) => {\n        const { symbol } = findCompound(reactionCompound.compoundId) as Compound\n        addHyperbolicTerm(equationTokens, symbol)\n      })\n      return equationTokens\n\n    //\n\n    case KineticModels.autocatalytic:\n      equationTokens.push(parameterToken(`<k_\\\\inf>`))\n      addArrheniusExponential(equationTokens)\n\n      reaction.reactants.forEach((reactionCompound) => {\n        const { symbol } = findCompound(reactionCompound.compoundId) as Compound\n        addReactantWithExponent(equationTokens, symbol)\n      })\n      reaction.products.forEach((reactionCompound) => {\n        const { symbol } = findCompound(reactionCompound.compoundId) as Compound\n        addProductWithExponent(equationTokens, symbol)\n      })\n      return equationTokens\n\n    //\n\n    default:\n      equationTokens.push(parameterToken(`<k_\\\\inf>`))\n      addArrheniusExponential(equationTokens)\n\n      reaction.reactants.forEach((reactionCompound: ReactionCompound) => {\n        const { symbol } = findCompound(reactionCompound.compoundId) as Compound\n        addReactantWithExponent(equationTokens, symbol)\n      })\n      return equationTokens\n  }\n}\n\nexport default serializeKineticEquation\n\n// Helpers\n\nconst addArrheniusExponential = (equationTokens: Token[]): void => {\n  equationTokens.push(multiplicationToken)\n  equationTokens.push(parameterToken(\"e\"))\n  equationTokens.push(exponentiationToken)\n  equationTokens.push(leftParenthesisToken)\n  equationTokens.push(leftParenthesisToken)\n  equationTokens.push(subtractionToken)\n  equationTokens.push(parameterToken(\"<E_A>\"))\n  equationTokens.push(rightParenthesisToken)\n  equationTokens.push(divisionToken)\n  equationTokens.push(leftParenthesisToken)\n  equationTokens.push(parameterToken(\"<R>\"))\n  equationTokens.push(multiplicationToken)\n  equationTokens.push(variableToken(\"{T}\"))\n  equationTokens.push(rightParenthesisToken)\n  equationTokens.push(rightParenthesisToken)\n}\n\nconst addReactantWithExponent = (\n  equationTokens: Token[],\n  symbol: string\n): void => {\n  equationTokens.push(multiplicationToken)\n  equationTokens.push(variableToken(`{[${symbol}]}`))\n  equationTokens.push(exponentiationToken)\n  equationTokens.push(parameterToken(`<\\\\alpha_${symbol}>`))\n}\n\nconst addProductWithExponent = (\n  equationTokens: Token[],\n  symbol: string\n): void => {\n  equationTokens.push(multiplicationToken)\n  equationTokens.push(variableToken(`{[${symbol}]}`))\n  equationTokens.push(exponentiationToken)\n  equationTokens.push(parameterToken(`<\\\\beta_${symbol}>`))\n}\n\nconst addHyperbolicTerm = (equationTokens: Token[], symbol: string): void => {\n  equationTokens.push(multiplicationToken)\n  equationTokens.push(variableToken(`{[${symbol}]}`))\n  equationTokens.push(divisionToken)\n  equationTokens.push(leftParenthesisToken)\n  equationTokens.push(parameterToken(`<K_${symbol}>`))\n  equationTokens.push(additionToken)\n  equationTokens.push(variableToken(`{[${symbol}]}`))\n  equationTokens.push(rightParenthesisToken)\n}\n","import styled from \"styled-components\"\n\n/* Constants */\nimport {\n  KINETIC_MODELS,\n  generateKineticConstants,\n} from \"../../constants/kineticModels\"\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Components */\nimport EditModal from \"../EditModal\"\nimport FieldInput from \"../forms/FieldInput\"\nimport Notice from \"../Notice\"\nimport Select from \"../Select\"\nimport SubmitButton from \"../SubmitButton\"\nimport {\n  ModalInputSection,\n  ModalColumnInputSection,\n} from \"../ModalInputSection\"\nimport { FiPlus } from \"react-icons/fi\"\nimport ReactionCompoundList from \"./ReactionCompoundList\"\nimport ReactionEquation from \"./ReactionEquation\"\nimport ReactionKineticParameters from \"./ReactionKineticParameters\"\nimport ReactionPreview from \"./ReactionPreview\"\n\n/* Helpers */\nimport serializeKineticEquation from \"../../lib/serializeKineticEquation\"\nimport { CompoundTypes } from \"../../lib/reactionTypes\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\n\n/* Hooks */\nimport { useMemo, useState, useRef } from \"react\"\nimport useCompounds from \"../../hooks/useCompounds\"\nimport useReactions from \"../../hooks/useReactions\"\n\ninterface IReactionEditModalProps {\n  compounds: Compound[]\n  reaction: Reaction\n  closeModal: () => void\n}\n\nconst ReactionEditModal: React.FC<IReactionEditModalProps> = (props) => {\n  const { compounds, reaction, closeModal } = props\n  const { findCompound } = useCompounds()\n  const { reactions, updateReaction } = useReactions()\n  const [closing, setClosing] = useState<boolean>(false)\n  const reactionIndex = reactions.findIndex((rea) => rea.id === reaction.id)\n  /**\n   * Copied state for reaction editing\n   */\n  const [modalReaction, setModalReaction] = useState<Reaction>(\n    JSON.parse(JSON.stringify(reaction))\n  )\n\n  /* Keep a reference to scrolled element */\n  const scrollRef = useRef(document.getElementById(\"scroll-target\"))\n\n  /* For the select input, both for reactants and products */\n  const [selectReactantIndex, setSelectReactantIndex] = useState<\n    number | undefined\n  >(undefined)\n  const [selectProductIndex, setSelectProductIndex] = useState<\n    number | undefined\n  >(undefined)\n\n  /**\n   * Select options\n   */\n  const reactantOptions = useMemo(() => {\n    return compounds\n      .filter((compound) => {\n        for (const reactant of modalReaction.reactants) {\n          if (reactant.compoundId === compound.id) {\n            return false\n          }\n        }\n        return true\n      })\n      .map((compound) => {\n        const index = compounds.findIndex((c) => c.id === compound.id)\n        return {\n          value: index,\n          displayText: compound.symbol,\n          collapsedDisplayText: compound.symbol,\n          hoverBackgroundColor:\n            COMPOUND_COLORS[compound.color as keyof typeof COMPOUND_COLORS],\n        }\n      })\n    // eslint-disable-next-line\n  }, [modalReaction.reactants])\n\n  const productOptions = useMemo(() => {\n    return compounds\n      .filter((compound) => {\n        for (const product of modalReaction.products) {\n          if (product.compoundId === compound.id) {\n            return false\n          }\n        }\n        return true\n      })\n      .map((compound) => {\n        const index = compounds.findIndex((c) => c.id === compound.id)\n        return {\n          value: index,\n          displayText: compound.symbol,\n          collapsedDisplayText: compound.symbol,\n          hoverBackgroundColor:\n            COMPOUND_COLORS[compound.color as keyof typeof COMPOUND_COLORS],\n        }\n      })\n    // eslint-disable-next-line\n  }, [modalReaction.products])\n\n  /**\n   * Handle compound form updates\n   */\n  const getCompoundKey = (\n    compoundType: CompoundType\n  ): \"products\" | \"reactants\" => {\n    if (compoundType === CompoundTypes.Reactant) return \"reactants\"\n    return \"products\"\n  }\n\n  const addCompound = (\n    compoundId: string,\n    compoundType: CompoundType\n  ): void => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n\n    updatedReaction[key].push({\n      compoundId,\n      stoichiometricCoefficient: 1,\n    })\n\n    /* Recalculate kinetic constants */\n    const kineticConstants = generateKineticConstants(\n      updatedReaction.kineticModel,\n      updatedReaction,\n      compounds\n    )\n    updatedReaction.kineticConstants = kineticConstants\n    updatedReaction.kineticEquation = serializeKineticEquation(\n      updatedReaction,\n      compounds\n    )\n\n    setModalReaction(updatedReaction)\n  }\n\n  const updateCompound = (\n    compoundIndex: number,\n    compoundType: CompoundType,\n    updatedCompound: ReactionCompound\n  ): void => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = { ...modalReaction }\n\n    updatedReaction[key][compoundIndex] = updatedCompound\n\n    setModalReaction(updatedReaction)\n  }\n\n  const removeCompound = (\n    compoundIndex: number,\n    compoundType: CompoundType\n  ) => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = { ...modalReaction }\n    const deletedCompound = updatedReaction[key][compoundIndex]\n\n    /* Update reaction compounds */\n    updatedReaction[key] = [\n      ...updatedReaction[key].slice(0, compoundIndex),\n      ...updatedReaction[key].slice(\n        compoundIndex + 1,\n        updatedReaction[key].length\n      ),\n    ]\n\n    /* Set keyCompound to undefined if deleted compound is keyCompound */\n    if (deletedCompound.compoundId === modalReaction.keyCompound) {\n      updatedReaction.keyCompound = undefined\n    }\n\n    /* Recalculate kinetic constants and equation */\n    const kineticConstants = generateKineticConstants(\n      updatedReaction.kineticModel as KineticModel,\n      updatedReaction,\n      compounds\n    )\n    updatedReaction.kineticConstants = kineticConstants\n    updatedReaction.kineticEquation = serializeKineticEquation(\n      updatedReaction,\n      compounds\n    )\n\n    setModalReaction(updatedReaction)\n  }\n\n  /**\n   * Handle kinetic constant change\n   */\n\n  const handleKineticConstantUpdate = (key: string, value: string) => {\n    const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n    updatedReaction.kineticConstants[key] = value\n    setModalReaction(updatedReaction)\n  }\n\n  /* For select state */\n  const selectReactantInitialValue = selectReactantIndex\n    ? {\n        value: selectReactantIndex,\n        displayText: compounds[selectReactantIndex].symbol,\n        collapsedDisplayText: compounds[selectReactantIndex].symbol,\n      }\n    : undefined\n\n  const selectProductInitialValue = selectProductIndex\n    ? {\n        value: selectProductIndex,\n        displayText: compounds[selectProductIndex].symbol,\n        collapsedDisplayText: compounds[selectProductIndex].symbol,\n      }\n    : undefined\n\n  return (\n    <EditModal\n      closing={closing}\n      setClosing={setClosing}\n      handleClose={closeModal}\n    >\n      <ReactionPreview reaction={modalReaction} />\n      <br />\n      <SelectField>\n        <FieldInput\n          fieldName=\"name\"\n          label=\"Reaction name:\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setModalReaction({\n              ...modalReaction,\n              name: event.target.value,\n            })\n          }}\n          value={modalReaction.name}\n        />\n      </SelectField>\n\n      {/* Compounds input */}\n      <ModalInputSection>\n        <CompoundInputWrapper>\n          <h2>Reactants</h2>\n          <AddCompound>\n            <Select\n              defaultDisplayValue=\"Compound...\"\n              hoverIcon={<FiPlus />}\n              initialValue={selectReactantInitialValue}\n              selectOptions={reactantOptions}\n              onSelectionChange={(index: number | undefined) => {\n                if (index !== undefined) {\n                  addCompound(compounds[index].id, CompoundTypes.Reactant)\n                }\n                setSelectReactantIndex(undefined)\n              }}\n            />\n          </AddCompound>\n          <CompoundInputInner>\n            {modalReaction.reactants.length !== 0 ? (\n              <ReactionCompoundList\n                reactionIndex={reactionIndex}\n                reactionCompounds={modalReaction.reactants}\n                removeCompound={removeCompound}\n                updateCompound={updateCompound}\n                compoundType={CompoundTypes.Reactant}\n              />\n            ) : (\n              <Notice>No compounds...</Notice>\n            )}\n          </CompoundInputInner>\n        </CompoundInputWrapper>\n\n        <CompoundInputWrapper>\n          <h2>Products</h2>\n          <AddCompound>\n            <Select\n              defaultDisplayValue=\"Compound...\"\n              hoverIcon={<FiPlus />}\n              initialValue={selectProductInitialValue}\n              selectOptions={productOptions}\n              onSelectionChange={(index: number | undefined) => {\n                if (index !== undefined) {\n                  addCompound(compounds[index].id, CompoundTypes.Product)\n                }\n                setSelectProductIndex(undefined)\n              }}\n            />\n          </AddCompound>\n          <CompoundInputInner>\n            {modalReaction.products.length !== 0 ? (\n              <ReactionCompoundList\n                reactionIndex={reactionIndex}\n                reactionCompounds={modalReaction.products}\n                removeCompound={removeCompound}\n                updateCompound={updateCompound}\n                compoundType={CompoundTypes.Product}\n              />\n            ) : (\n              <Notice>No compounds...</Notice>\n            )}\n          </CompoundInputInner>\n        </CompoundInputWrapper>\n      </ModalInputSection>\n\n      {/* Kinetics input */}\n      <ModalColumnInputSection>\n        <h2>Kinetics</h2>\n        <SelectField>\n          <p>Kinetic model</p>\n          <Select\n            initialValue={{\n              value: modalReaction.kineticModel,\n              displayText: KINETIC_MODELS[modalReaction.kineticModel],\n              collapsedDisplayText: KINETIC_MODELS[modalReaction.kineticModel],\n            }}\n            selectOptions={KINETIC_MODELS.map((model, index) => ({\n              value: index,\n              displayText: model,\n              collapsedDisplayText: model,\n            }))}\n            onSelectionChange={(value) => {\n              const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n\n              updatedReaction.kineticConstants = generateKineticConstants(\n                value as KineticModel,\n                modalReaction,\n                compounds\n              )\n              updatedReaction.kineticModel = value\n              updatedReaction.kineticEquation = serializeKineticEquation(\n                updatedReaction,\n                compounds\n              )\n\n              setModalReaction(updatedReaction)\n            }}\n          />\n        </SelectField>\n        <SelectField>\n          <p>Key compound</p>\n          <Select\n            defaultDisplayValue=\"Reactant...\"\n            initialValue={\n              modalReaction.keyCompound !== undefined\n                ? {\n                    value: modalReaction.keyCompound,\n                    displayText: (\n                      findCompound(modalReaction.keyCompound) as Compound\n                    ).symbol,\n                    collapsedDisplayText: (\n                      findCompound(modalReaction.keyCompound) as Compound\n                    ).symbol,\n                  }\n                : undefined\n            }\n            selectOptions={modalReaction.reactants.map((reactionCompound) => ({\n              value: reactionCompound.compoundId,\n              displayText: (\n                findCompound(reactionCompound.compoundId) as Compound\n              ).symbol,\n              collapsedDisplayText: (\n                findCompound(reactionCompound.compoundId) as Compound\n              ).symbol,\n            }))}\n            onSelectionChange={(value: string | undefined) => {\n              const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n              updatedReaction.keyCompound = value\n              setModalReaction(updatedReaction)\n            }}\n          />\n        </SelectField>\n        <ReactionEquation reaction={modalReaction} />\n        <ReactionKineticParameters\n          reaction={modalReaction}\n          compounds={compounds}\n          updateKineticConstant={handleKineticConstantUpdate}\n        />\n      </ModalColumnInputSection>\n\n      <SubmitButton\n        color=\"green\"\n        onClick={() => {\n          updateReaction(reaction.id, modalReaction)\n          scrollRef?.current?.scrollTo({ top: 0, behavior: \"smooth\" })\n          setClosing(true)\n        }}\n      >\n        Done\n      </SubmitButton>\n    </EditModal>\n  )\n}\n\nexport default ReactionEditModal\n\nconst SelectField = styled.div`\n  display: flex;\n  align-items: center;\n  width: 50%;\n\n  p {\n    color: var(--color-grey-dark);\n    flex-grow: 1;\n    font-size: 1rem;\n    margin-right: 1.4rem;\n    flex-basis: 50%;\n  }\n\n  div {\n    flex-basis: 45%;\n  }\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    width: 100%;\n  }\n`\n\nconst CompoundInputWrapper = styled.div`\n  flex-basis: 50%;\n\n  @media (max-width: 700px) {\n    flex-basis: 100%;\n  }\n`\n\nconst CompoundInputInner = styled.div`\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-light);\n  border-radius: 5px;\n  box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.1);\n  margin: 0.5rem 0.3rem;\n  padding: 0.5rem;\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst AddCompound = styled.div`\n  display: flex;\n  margin: 0.3rem;\n\n  & > button {\n    margin-left: 0.5rem;\n  }\n`\n","import styled from \"styled-components\"\nimport ReactionCard from \"./ReactionCard\"\nimport ReactionEditModal from \"./ReactionEditModal\"\nimport NoResource from \"../NoResource\"\nimport { useMemo, useState } from \"react\"\nimport useCompounds from \"../../hooks/useCompounds\"\nimport useReactions from \"../../hooks/useReactions\"\n\nconst ReactionList: React.FC = () => {\n  const { compounds } = useCompounds()\n  const { reactions, removeReaction } = useReactions()\n  const [editedReactionId, setEditedReactionId] = useState<string | undefined>(\n    undefined\n  )\n\n  const editReaction = (id?: string) => setEditedReactionId(id)\n  const editedReaction = useMemo(\n    () =>\n      editedReactionId\n        ? reactions.find((r) => r.id === editedReactionId)\n        : undefined,\n    [reactions, editedReactionId]\n  )\n\n  return (\n    <ReactionListWrapper>\n      {reactions.length === 0 && (\n        <NoResource>No reactions added yet</NoResource>\n      )}\n\n      {reactions.map((reaction, index) => (\n        <ReactionCard\n          reaction={reaction}\n          reactionIndex={index}\n          editReaction={(): void => {\n            editReaction(reaction.id)\n          }}\n          removeReaction={(): void => {\n            removeReaction(reaction.id)\n          }}\n          key={index}\n        >\n          Reaction\n        </ReactionCard>\n      ))}\n\n      {/* Edit modal */}\n      {editedReactionId && (\n        <ReactionEditModal\n          compounds={compounds}\n          reaction={editedReaction as Reaction}\n          closeModal={() => editReaction()}\n        />\n      )}\n    </ReactionListWrapper>\n  )\n}\n\nexport default ReactionList\n\nconst ReactionListWrapper = styled.div`\n  align-self: stretch;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding-left: 0;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n","import Button from \"../components/Button\"\nimport PageTitle from \"../components/PageTitle\"\nimport ReactionList from \"../components/reactions/ReactionList\"\nimport { FiPlus, FiTrash2 } from \"react-icons/fi\"\nimport useReactions from \"../hooks/useReactions\"\nimport { mobileBreakpoint } from \"../lib/breakpoints\"\n\nconst deleteButtonStyle = `\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.6rem 1rem;\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    top: calc(80px + 1rem);\n  }\n`\n\nconst ReactionsPage: React.FC = () => {\n  const { addReaction, resetReactions } = useReactions()\n\n  const handleResetReactions = () => {\n    const confirmation = window.confirm(\n      \"Are you sure you want to delete all reactions?\"\n    )\n    if (confirmation) resetReactions()\n  }\n\n  return (\n    <>\n      <PageTitle>Reactions</PageTitle>\n      <Button color=\"green\" onClick={addReaction}>\n        Add <FiPlus />\n      </Button>\n      <Button\n        color=\"red\"\n        buttonStyle={deleteButtonStyle}\n        onClick={handleResetReactions}\n      >\n        <FiTrash2 size={20} />\n      </Button>\n      <ReactionList />\n    </>\n  )\n}\n\nexport default ReactionsPage\n","const MAX_TICK_AMOUNT = 15\n\n// Format tick value to 1 decimals and scientific notation if needed\nexport const formatTickValue = (value: number) => {\n  if (value >= 100 || value < 0.1) {\n    const stringValue = value.toString()\n    return `${stringValue[0]}.${stringValue[1]}e${getPowerOfTen(value)}`\n  }\n\n  if (value < 100 && value >= 10) return value.toFixed(0)\n  if (value < 10 && value >= 1) return value.toFixed(1)\n  return value.toFixed(2) // if (value < 1 && value >= 0.1)\n}\n\n// Get power of ten for scientific notation\nexport const getPowerOfTen = (value: number) => {\n  let power = 0\n\n  if (value > 1) {\n    while (value / 10 ** power >= 10) {\n      power++\n    }\n    return power\n  }\n\n  while (value * 10 ** power <= 0.1) {\n    power++\n  }\n  if (power === 0) return power\n  return power * -1\n}\n\n// Gets max functional value to set axis values correctly\nexport const maxFunctionalValue = (data: Point[][]) => {\n  const maxValuesForEachVariable: number[] = []\n\n  if (!data || data.length === 0) return 10\n\n  data.forEach((points: Point[]) => {\n    maxValuesForEachVariable.push(\n      Math.max(...points.map((point: Point) => point.y))\n    )\n  })\n\n  return Math.max(...maxValuesForEachVariable)\n}\n\n// Gets min functional value to set axis values correctly\nexport const minFunctionalValue = (data: Point[][]) => {\n  const minValuesForEachVariable: number[] = []\n\n  if (!data || data.length === 0) return 0\n\n  data.forEach((points: Point[]) => {\n    minValuesForEachVariable.push(\n      Math.min(...points.map((point: Point) => point.y))\n    )\n  })\n\n  return Math.min(...minValuesForEachVariable)\n}\n\n// Gets tick distance given a max value and a target tick amount\nexport const getTickDistance = (range: number, targetTickAmount: number) => {\n  const powerOfTen = getPowerOfTen(range)\n\n  if (range / 10 ** powerOfTen < MAX_TICK_AMOUNT / 10) {\n    return 10 ** (powerOfTen - 1)\n  }\n  return 10 ** powerOfTen\n\n  // if (Math.ceil(maxValue / baseTickDistance) < targetTickAmount) {\n\n  // }\n\n  // while ()\n  // const rawDistance = maxValue / (targetTickAmount + 1)\n\n  // let multiplier = 1\n  // if (rawDistance > 1) {\n  //   while (rawDistance / (multiplier * 10) > 1) {\n  //     multiplier = multiplier * 10\n  //   }\n  // } else {\n  //   multiplier = 0.1\n  //   while (rawDistance / (multiplier * 0.1) < 1) {\n  //     multiplier = multiplier * 0.1\n  //   }\n  // }\n\n  // return Math.floor(rawDistance / multiplier) * multiplier\n}\n","import { DISTANCE_FROM_CORNER, Ticks } from \"./drawPlot\"\nimport { formatTickValue } from \"./utils\"\n\ninterface DrawAxisParams {\n  context: CanvasRenderingContext2D\n  ticks: Ticks\n}\n\nconst drawVerticalAxis = ({ context, ticks }: DrawAxisParams) => {\n  const width = context.canvas.width\n  const height = context.canvas.height\n  const effectiveHeight = height - DISTANCE_FROM_CORNER * 2\n\n  const { totalTicks, tickDistance, initialValue } = ticks\n\n  // Once we get the total ticks, it's time to draw them.\n  // We use the entire canvas height for the ticks, so that the\n  // plot always fits in the designated area.\n  for (let i = 1; i <= totalTicks; i++) {\n    const yPosition =\n      height - DISTANCE_FROM_CORNER - (effectiveHeight * i) / totalTicks\n\n    // Ticks\n    context.beginPath()\n    context.strokeStyle = \"hsl(213, 20%, 20%)\"\n    context.moveTo(10 + DISTANCE_FROM_CORNER, yPosition)\n    context.lineTo(DISTANCE_FROM_CORNER * 2, yPosition)\n    context.stroke()\n\n    // Plot lines in the back\n    context.beginPath()\n    context.strokeStyle = \"hsl(213, 20%, 70%)\"\n    context.moveTo(DISTANCE_FROM_CORNER * 2, yPosition)\n    context.lineTo(width - DISTANCE_FROM_CORNER, yPosition)\n    context.stroke()\n\n    // Text\n    context.font = \"16px Mulish\"\n    context.fillStyle = \"hsl(213, 20%, 20%)\"\n    context.textAlign = \"right\"\n    context.fillText(\n      formatTickValue(i * tickDistance + initialValue),\n      DISTANCE_FROM_CORNER * 2 - 5,\n      yPosition + 18\n    )\n  }\n\n  // Draw actual axis line\n  context.strokeStyle = \"hsl(213, 20%, 20%)\"\n  context.beginPath()\n  context.moveTo(DISTANCE_FROM_CORNER * 2, DISTANCE_FROM_CORNER)\n  context.lineTo(DISTANCE_FROM_CORNER * 2, height - DISTANCE_FROM_CORNER)\n  context.stroke()\n}\n\nexport default drawVerticalAxis\n","import { DISTANCE_FROM_CORNER, Ticks } from \"./drawPlot\"\n\ninterface DrawAxisParams {\n  context: CanvasRenderingContext2D\n  ticks: Ticks\n}\n\nconst drawHorizontalAxis = ({ context, ticks }: DrawAxisParams) => {\n  const height = context.canvas.height\n  const width = context.canvas.width\n\n  context.strokeStyle = \"hsl(213, 20%, 30%)\"\n  context.beginPath()\n  context.moveTo(DISTANCE_FROM_CORNER * 2, height - DISTANCE_FROM_CORNER)\n  context.lineTo(width - DISTANCE_FROM_CORNER, height - DISTANCE_FROM_CORNER)\n  context.stroke()\n}\n\nexport default drawHorizontalAxis\n","import { DISTANCE_FROM_CORNER, Ticks } from \"./drawPlot\"\n\ninterface DrawPlotCurveParams {\n  context: CanvasRenderingContext2D\n  data: Point[][]\n  colors: string[]\n  yAxisTicks: Ticks\n}\n\nconst drawPlotCurve = (params: DrawPlotCurveParams) => {\n  const { colors, context, data, yAxisTicks } = params\n  const { initialValue, tickDistance, totalTicks } = yAxisTicks\n\n  const maxTimeValue = data.length !== 0 ? data[0][data[0].length - 1]?.x : 10\n\n  const minYAxisValue = Math.floor(initialValue / tickDistance) * tickDistance\n  const maxYAxisValue = minYAxisValue + tickDistance * totalTicks\n  const range = maxYAxisValue - minYAxisValue\n\n  const plotAreaWidth = context.canvas.width - DISTANCE_FROM_CORNER * 3\n  const plotAreaHeight = context.canvas.height - DISTANCE_FROM_CORNER * 2\n\n  for (let j = 0; j < data.length; j++) {\n    context.beginPath()\n    const plotPath = new Path2D()\n    const points = data[j]\n    const color = colors[j]\n    for (let i = 1; i < points.length; i++) {\n      plotPath.moveTo(\n        DISTANCE_FROM_CORNER * 2 +\n          (plotAreaWidth * points[i - 1].x) / maxTimeValue,\n        DISTANCE_FROM_CORNER +\n          (plotAreaHeight * (maxYAxisValue - points[i - 1].y)) / range\n      )\n      plotPath.lineTo(\n        DISTANCE_FROM_CORNER * 2 + (plotAreaWidth * points[i].x) / maxTimeValue,\n        DISTANCE_FROM_CORNER +\n          (plotAreaHeight * (maxYAxisValue - points[i].y)) / range\n      )\n    }\n    context.lineWidth = 2\n    context.strokeStyle = color\n    context.stroke(plotPath)\n  }\n}\n\nexport default drawPlotCurve\n","import {\n  getTickDistance,\n  minFunctionalValue,\n  maxFunctionalValue,\n} from \"./utils\"\nimport { AVERAGE_TICK_DISTANCE, DISTANCE_FROM_CORNER, Ticks } from \"./drawPlot\"\n\ninterface GetTicksYAxisParams {\n  height: number\n  data: Point[][]\n}\n\n// Gets total ticks and tick distance for y axis\nconst getTicksYAxis = (params: GetTicksYAxisParams): Ticks => {\n  const { data, height } = params\n\n  const targetTicks =\n    Math.floor((height - DISTANCE_FROM_CORNER) / AVERAGE_TICK_DISTANCE) || 10\n\n  const maxValue = maxFunctionalValue(data)\n  const minValue = minFunctionalValue(data)\n  const range = maxValue - minValue\n\n  const tickDistance = getTickDistance(range, targetTicks)\n  const totalTicks = Math.ceil(range / tickDistance)\n  const initialValue = Math.floor(minValue / tickDistance) * tickDistance\n\n  return { tickDistance, totalTicks, initialValue }\n}\n\nexport default getTicksYAxis\n","import drawVerticalAxis from \"./drawVerticalAxis\"\nimport drawHorizontalAxis from \"./drawHorizontalAxis\"\nimport drawPlotCurve from \"./drawPlotCurve\"\nimport getTicksYAxis from \"./getTicksYAxis\"\n\nexport interface Ticks {\n  tickDistance: number\n  totalTicks: number\n  initialValue: number\n}\n\nexport const DISTANCE_FROM_CORNER = 30\nexport const AVERAGE_TICK_DISTANCE = 50\n\n/**\n * Main function to be exported an used in /components/Plot.tsx\n * @param canvas\n */\n\ninterface DrawPlotParams {\n  canvas: HTMLCanvasElement\n  data: Point[][]\n  colors: string[]\n}\n\nexport const drawPlot = ({ canvas, data, colors }: DrawPlotParams) => {\n  const context = canvas.getContext(\"2d\")\n  if (!context) return\n\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n  context.lineWidth = 1\n\n  const yAxisTicks = getTicksYAxis({ height: context.canvas.height, data })\n\n  drawVerticalAxis({ context, ticks: yAxisTicks })\n  drawHorizontalAxis({ context, ticks: yAxisTicks }) // TODO: Change for x axis ticks\n  drawPlotCurve({\n    context,\n    data,\n    colors,\n    yAxisTicks,\n  })\n}\n","import { useEffect, useCallback, useRef, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { drawPlot } from \"../../lib/plot/drawPlot\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\n\ninterface PlotProps {\n  data: Point[][]\n  colors: string[]\n}\n\nconst MOBILE_WIDTH_SUSTRAEND = 44\nconst MOBILE_HEIGHT_SUSTRAEND = 182\nconst DESKTOP_WIDTH_SUSTRAEND = 137\nconst DESKTOP_HEIGHT_SUSTRAEND = 105\n\nconst Plot = (props: PlotProps) => {\n  const { colors, data } = props\n\n  // See this article for more reference:\n  // https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const [canvasWidth, setCanvasWidth] = useState(() =>\n    window.innerWidth <= mobileBreakpoint\n      ? window.innerWidth - MOBILE_WIDTH_SUSTRAEND\n      : window.innerWidth - DESKTOP_WIDTH_SUSTRAEND\n  )\n  const [canvasHeight, setCanvasHeight] = useState(() =>\n    window.innerWidth <= mobileBreakpoint\n      ? window.innerHeight - MOBILE_HEIGHT_SUSTRAEND\n      : window.innerHeight - DESKTOP_HEIGHT_SUSTRAEND\n  )\n\n  const resizeHandler = useCallback(() => {\n    const isMobile = window.innerWidth <= mobileBreakpoint\n    const ws = isMobile ? MOBILE_WIDTH_SUSTRAEND : DESKTOP_WIDTH_SUSTRAEND\n    const hs = isMobile ? MOBILE_HEIGHT_SUSTRAEND : DESKTOP_HEIGHT_SUSTRAEND\n    setCanvasWidth(window.innerWidth - ws)\n    setCanvasHeight(window.innerHeight - hs)\n\n    // Re-draw plot\n    drawPlot({\n      canvas: canvasRef.current as HTMLCanvasElement,\n      data,\n      colors,\n    })\n    // eslint-disable-next-line\n  }, [data])\n\n  useEffect(() => {\n    // Event listener to set width and height of canvas programatically\n    window.addEventListener(\"resize\", resizeHandler)\n\n    drawPlot({\n      canvas: canvasRef.current as HTMLCanvasElement,\n      data,\n      colors,\n    })\n\n    // Cleanup for resize handler\n    return () => window.removeEventListener(\"resize\", resizeHandler)\n\n    // eslint-disable-next-line\n  }, [resizeHandler, data])\n\n  return <Canvas ref={canvasRef} height={canvasHeight} width={canvasWidth} />\n}\n\nexport default Plot\n\nconst Canvas = styled.canvas`\n  border-radius: 5px;\n  background-color: var(--color-grey-lighter);\n  border: 1px solid white;\n`\n","import React from \"react\"\n\ninterface ShowProps<T> {\n  when: T | undefined | null | false\n  children: JSX.Element | JSX.Element[]\n  fallback?: JSX.Element\n}\n\n/**\n * Show component\n * Utility component that only shows the children when `when` is truthy.\n * Also takes a fallback component in case `when` is falsy.\n *\n * @param when: Condition to evaluate, shows children when true/truthy.\n * @param children: Content to be shown if `when` is true/truthy.\n * @param fallback?: Content to be shown if `when` is false/falsy.\n * */\n\nexport default function Show<T>({ when, children, fallback }: ShowProps<T>) {\n  return (\n    <>\n      {!!when && children}\n      {!when && fallback}\n    </>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport useCompounds from \"../../hooks/useCompounds\"\nimport Show from \"../Show\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\ninterface ColorProps {\n  color: string\n}\n\ninterface PlotLegendProps {\n  selectedVariables: number[]\n  temperatureSelected: boolean\n}\n\nconst PlotLegend: React.VFC<PlotLegendProps> = (props) => {\n  const { selectedVariables, temperatureSelected } = props\n  const { compounds } = useCompounds()\n\n  return (\n    <Wrapper>\n      {compounds.map((compound, index) => {\n        const color =\n          COMPOUND_COLORS[compound.color as keyof typeof COMPOUND_COLORS]\n        return (\n          <Show when={selectedVariables.includes(index)} key={index}>\n            <Variable>\n              <ColorBadge color={color} />\n              <p>{compound.symbol}</p>\n            </Variable>\n          </Show>\n        )\n      })}\n\n      <Show when={temperatureSelected}>\n        <Variable>\n          <ColorBadge color=\"#000\" />\n          <p>Temp.</p>\n        </Variable>\n      </Show>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 100px;\n  right: 50px;\n  padding: 15px;\n  border-radius: 3px;\n  border: 1px solid var(--color-grey-normal);\n  background-color: var(--color-grey-lightest);\n  box-shadow: 0 2px 4px var(--color-grey-light);\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    top: 180px;\n    right: 40px;\n  }\n`\n\nconst Variable = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin: 0;\n  }\n`\n\nconst ColorBadge = styled.div<ColorProps>`\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background-color: ${(props) => props.color};\n  margin-right: 1rem;\n  box-shadow: 0 2px 5px -2px var(--color-grey-normal);\n`\n\nexport default PlotLegend\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport useCompounds from \"../../hooks/useCompounds\"\nimport useSettings from \"../../hooks/useSettings\"\nimport Checkbox from \"../forms/Checkbox\"\nimport Show from \"../Show\"\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\nimport type { Dispatch, SetStateAction } from \"react\"\n\ninterface VariableCheckboxesProps {\n  selectedVariables: number[]\n  setSelectedVariables: Dispatch<SetStateAction<number[]>>\n  temperatureSelected: boolean\n  setTemperatureSelected: Dispatch<SetStateAction<boolean>>\n}\n\nconst VariableCheckboxes: React.VFC<VariableCheckboxesProps> = (props) => {\n  const {\n    selectedVariables,\n    setSelectedVariables,\n    temperatureSelected,\n    setTemperatureSelected,\n  } = props\n\n  const { compounds } = useCompounds()\n  const { settings } = useSettings()\n\n  const isToggled = (compoundIndex: number): boolean => {\n    const foundIndex = selectedVariables.findIndex(\n      (value) => value === compoundIndex\n    )\n    if (foundIndex === -1) return false\n    return true\n  }\n\n  const toggleIndex = (compoundIndex: number): void => {\n    const foundIndex = selectedVariables.findIndex(\n      (value) => value === compoundIndex\n    )\n    if (foundIndex === -1) {\n      // Add variable to selected ones\n      setSelectedVariables([...selectedVariables, compoundIndex])\n      return\n    }\n\n    // Remove from selected ones if found\n    setSelectedVariables([\n      ...selectedVariables.slice(0, foundIndex),\n      ...selectedVariables.slice(foundIndex + 1, selectedVariables.length),\n    ])\n  }\n\n  const toggleTemperature = (): void => {\n    if (!temperatureSelected) {\n      setTemperatureSelected(true)\n      setSelectedVariables([])\n      return\n    }\n\n    setTemperatureSelected(false)\n  }\n\n  return (\n    <Wrapper>\n      {compounds.map((compound, index) => {\n        const color =\n          COMPOUND_COLORS[compound.color as keyof typeof COMPOUND_COLORS]\n        return (\n          <CheckboxWrapper\n            onClick={() => toggleIndex(index)}\n            toggled={isToggled(index)}\n            key={compound.id}\n            color={color}\n          >\n            <ColorBadge color={color} toggled={isToggled(index)} />\n            <CompoundSymbol>{compound.symbol}</CompoundSymbol>\n            <Checkbox\n              toggled={!!selectedVariables.includes(index)}\n              onToggle={() => {}}\n            />\n          </CheckboxWrapper>\n        )\n      })}\n\n      {/* Temperature */}\n      <Show when={!settings.isothermic}>\n        <CheckboxWrapper\n          onClick={toggleTemperature}\n          toggled={temperatureSelected}\n          color=\"#000\"\n        >\n          <ColorBadge color=\"#000\" toggled={temperatureSelected} />\n          <CompoundSymbol>Temperature</CompoundSymbol>\n          <Checkbox toggled={temperatureSelected} onToggle={() => {}} />\n        </CheckboxWrapper>\n      </Show>\n    </Wrapper>\n  )\n}\n\nexport default VariableCheckboxes\ninterface CheckboxProps {\n  color: string\n  toggled: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst CheckboxWrapper = styled.button<CheckboxProps>`\n  background-color: ${(props) =>\n    props.toggled ? \"var(--color-grey-lighter)\" : \"var(--color-grey-light)\"};\n  border-radius: 5px;\n  border: 2px solid\n    ${(props) => (props.toggled ? props.color : \"var(--color-grey-light)\")};\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.toggled\n        ? \"var(--color-grey-lightest)\"\n        : \"var(--color-grey-lighter)\"};\n    border: 2px solid\n      ${(props) => (props.toggled ? props.color : \"var(--color-grey-lighter)\")};\n  }\n`\n\nconst ColorBadge = styled.div<CheckboxProps>`\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background-color: ${(props) => props.color};\n  margin-right: 1rem;\n  box-shadow: ${(props) =>\n    props.toggled ? \"\" : \"0 2px 5px -2px var(--color-grey-normal)\"};\n`\n\nconst CompoundSymbol = styled.span`\n  flex-grow: 1;\n  text-align: left;\n  font-size: 1rem;\n`\n","import styled from \"styled-components\"\nimport { FiX } from \"react-icons/fi\"\nimport { mobileBreakpoint } from \"../../lib/breakpoints\"\nimport VariableCheckboxes from \"./VariableCheckboxes\"\nimport type { Dispatch, SetStateAction } from \"react\"\n\ninterface SidebarOptionsProps {\n  optionsVisible: boolean\n  toggleOptionsVisible: () => void\n  selectedVariables: number[]\n  setSelectedVariables: Dispatch<SetStateAction<number[]>>\n  temperatureSelected: boolean\n  setTemperatureSelected: Dispatch<SetStateAction<boolean>>\n}\n\nconst SidebarOptions = (props: SidebarOptionsProps) => {\n  const {\n    optionsVisible,\n    toggleOptionsVisible,\n    selectedVariables,\n    setSelectedVariables,\n    temperatureSelected,\n    setTemperatureSelected,\n  } = props\n\n  return (\n    <SidebarOptionsWrapper visible={optionsVisible}>\n      <CloseButton onClick={toggleOptionsVisible}>\n        <FiX size={20} color=\"#FFF\" />\n      </CloseButton>\n      <h3>Variables</h3>\n      <VariableCheckboxes\n        {...{\n          selectedVariables,\n          setSelectedVariables,\n          temperatureSelected,\n          setTemperatureSelected,\n        }}\n      />\n    </SidebarOptionsWrapper>\n  )\n}\n\nexport default SidebarOptions\n\ninterface SidebarWrapperProps {\n  visible: boolean\n}\n\nconst SidebarOptionsWrapper = styled.div<SidebarWrapperProps>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: calc(250px - 2rem);\n  padding: 1rem;\n  padding-top: 2rem;\n  transform: ${(props) =>\n    props.visible ? \"translateX(0px)\" : \"translateX(300px)\"};\n  background-color: var(--color-grey-dark);\n  transition: all 0.15s ease-in-out;\n  box-shadow: ${(props) =>\n    props.visible ? \"0 0 20px -5px var(--color-grey-dark)\" : \"unset\"};\n\n  @media screen and (max-width: ${mobileBreakpoint}px) {\n    top: 80px;\n  }\n\n  h3 {\n    color: var(--color-grey-lightest);\n  }\n`\n\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  left: 0.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  border-radius: 5px;\n  transition: background-color 0.15s ease-in-out;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`\n","import useSimulationResults from \"../hooks/useSimulationResults\"\n\nconst useGetData = () => {\n  const { simulationResults } = useSimulationResults()\n\n  /**\n   * Maps requested variable data to Victory-readable data\n   */\n  const variableData = (variable: string): Point[] => {\n    return simulationResults?.map((data: TimePoint) => {\n      return {\n        x: data.t,\n        y: data[variable],\n      }\n    }) as Point[]\n  }\n\n  return { variableData }\n}\n\nexport default useGetData\n","import styled from \"styled-components\"\n\n/* Components */\nimport PageTitle from \"../components/PageTitle\"\nimport Plot from \"../components/results/Plot\"\nimport PlotLegend from \"../components/results/PlotLegend\"\nimport SidebarOptions from \"../components/results/SidebarOptions\"\nimport Button from \"../components/Button\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../constants/compoundColors\"\n\n/* Hooks */\nimport { useMemo, useState } from \"react\"\nimport useCompounds from \"../hooks/useCompounds\"\nimport useGetData from \"../hooks/useGetData\"\n\nconst ResultsPage: React.VFC = () => {\n  const { variableData } = useGetData()\n  const { compounds } = useCompounds()\n  const [selectedVariables, setSelectedVariables] = useState<number[]>([0])\n  const [temperatureSelected, setTemperatureSelected] = useState<boolean>(false)\n  const [optionsVisible, setOptionsVisible] = useState<boolean>(false)\n\n  const toggleOptionsVisible = () => setOptionsVisible(!optionsVisible)\n\n  /* Derived state from selectedVariable */\n\n  const [data, colors] = useMemo(() => {\n    const data: Point[][] = []\n    const colors: string[] = []\n\n    // Sets data for selected variables (compounds)\n    selectedVariables.forEach((compoundIndex: number) => {\n      const selectedCompound = compounds[compoundIndex]\n      const compoundData: Point[] = variableData(`[${selectedCompound.symbol}]`)\n      data.push(compoundData)\n      colors.push(\n        COMPOUND_COLORS[selectedCompound.color as keyof typeof COMPOUND_COLORS]\n      )\n    })\n\n    if (!temperatureSelected) return [data, colors]\n\n    // Sets data for temperature\n    data.push(variableData(\"T\"))\n    colors.push(\"#000\")\n    return [data, colors]\n\n    // eslint-disable-next-line\n  }, [selectedVariables, temperatureSelected])\n\n  return (\n    <>\n      <PageTitle>Results</PageTitle>\n      <OptionsButton onClick={toggleOptionsVisible} color=\"green\">\n        Options\n      </OptionsButton>\n      <Plot data={data} colors={colors} />\n      <PlotLegend\n        {...{\n          selectedVariables,\n          temperatureSelected,\n        }}\n      />\n      <SidebarOptions\n        {...{\n          optionsVisible,\n          toggleOptionsVisible,\n          selectedVariables,\n          setSelectedVariables,\n          temperatureSelected,\n          setTemperatureSelected,\n        }}\n      />\n    </>\n  )\n}\n\nexport default ResultsPage\n\nconst OptionsButton = styled(Button)`\n  float: right;\n  margin-bottom: 0.5rem;\n  padding: 0.8rem;\n`\n","import { Switch, Redirect, Route } from \"react-router-dom\"\n\n/* Hooks */\nimport useSimulationResults from \"./hooks/useSimulationResults\"\nimport useVersionControl from \"./hooks/useVersionControl\"\n\n/* Pages */\nimport CompoundsPage from \"./pages/CompoundsPage\"\nimport SettingsPage from \"./pages/SettingsPage\"\nimport ReactionsPage from \"./pages/ReactionsPage\"\nimport ResultsPage from \"./pages/ResultsPage\"\n\nconst Routes = () => {\n  const { simulationResults } = useSimulationResults()\n\n  useVersionControl()\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={CompoundsPage} />\n      <Route path=\"/compounds\" component={CompoundsPage} />\n      <Route path=\"/reactions\" component={ReactionsPage} />\n      <Route path=\"/settings\" component={SettingsPage} />\n\n      {/* Redirect for deployed URL */}\n      <Route path=\"/batch-simulator\">\n        <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n      </Route>\n\n      {/* Redirect /results to / if no data is available */}\n      <Route path=\"/results\" component={ResultsPage}>\n        {simulationResults?.length ? (\n          <ResultsPage />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n            }}\n          />\n        )}\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Routes\n","import { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport GlobalStyles from \"./GlobalStyles\"\n\n/* Layouts */\nimport MainLayout from \"./layouts/MainLayout\"\n\n/* Components */\nimport Routes from \"./Routes\"\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <GlobalStyles />\n        <MainLayout>\n          <Routes />\n        </MainLayout>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}