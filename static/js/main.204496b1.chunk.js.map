{"version":3,"sources":["context/DataContext.tsx","GlobalStyles.tsx","constants/compoundColors.tsx","constants/compoundSymbols.tsx","hooks/useLocalStorageState.tsx","components/Reactor.tsx","layouts/MainLayout.tsx","components/Button.tsx","components/PageTitle.tsx","components/CardButton.tsx","helpers/validators.tsx","components/compounds/CompoundCard.tsx","components/Error.tsx","components/Input.tsx","components/EditModal.tsx","components/SubmitButton.tsx","components/compounds/CompoundEditModal.tsx","components/compounds/CompoundList.tsx","pages/CompoundsPage.tsx","components/Notice.tsx","components/reactions/ReactionPreview.tsx","components/reactions/ReactionCard.tsx","constants/kineticModels.tsx","components/Select.tsx","components/reactions/ReactionCompoundCard.tsx","components/reactions/ReactionCompoundList.tsx","components/MathExpressions.tsx","components/reactions/ReactionEquation.tsx","components/reactions/ReactionParamInputCard.tsx","components/reactions/ReactionKineticParameters.tsx","components/reactions/ReactionEditModal.tsx","components/reactions/ReactionList.tsx","pages/ReactionsPage.tsx","pages/ResultsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CompoundType","GlobalStyles","createGlobalStyle","COMPOUND_COLORS_CODES","COMPOUND_COLORS","orange","yellow","lime","green1","green2","waterGreen1","waterGreen2","skyBlue1","skyBlue2","blue1","blue2","violet1","violet2","pink1","pink2","pink3","red1","red2","COMPOUND_SYMBOLS","useLocalStorageState","key","defaultValue","undefined","options","serialize","JSON","stringify","deserialize","parse","useState","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem","compounds","addCompound","editCompound","updateCompound","removeCompound","editedCompoundId","reactions","addReaction","editReaction","updateReaction","removeReaction","editedReactionId","DataContext","createContext","useData","useContext","DataStore","props","children","currentColor","setCurrentColor","setCompounds","setReactions","setEditedCompoundId","setEditedReactionId","availableSymbol","foundSymbols","Array","length","fill","forEach","compound","index","indexOf","symbol","i","Provider","value","updatedCompounds","push","id","randomstring","generate","color","concentration","name","updatedCompound","compoundId","updatedReactions","reaction","reactants","filter","reactionCompound","products","slice","kineticModel","kineticConstants","reactionConstant","updatedReaction","ReactorWrapper","styled","div","ReactorInterior","ReactorLiquid","Reactor","MainLayout","MainLayoutWrapper","SideContent","to","MainContent","Button","button","colorsBase","colorsHover","PageTitle","h2","CardButton","validateNotEmpty","CompoundCard","validateUnicity","symbolInput","setSymbolInput","liquidRef","document","getElementById","CompoundCardWrapper","CompoundCardInner","onMouseEnter","style","backgroundColor","onMouseLeave","SymbolInput","onBlur","onChange","event","target","onClick","CompoundColorBullet","className","li","input","ErrorWrapper","Error","Input","errors","EditModal","closing","setClosing","handleClose","closeModal","setTimeout","CompoundEditModalWrapper","CompoundEditModalInner","CloseButton","SubmitButton","CompoundEditModal","compoundIndex","findIndex","comp","field","formik","useFormik","initialValues","validate","values","threshold","equal","onSubmit","handleSubmit","SymbolFieldInput","htmlFor","autoComplete","handleChange","FieldInput","type","CompoundList","editedCompound","find","CompoundListWrapper","map","ul","CompoundsPage","Notice","p","ReactionPreview","ReactionPreviewWrapper","c","size","CompoundWrapper","stoichiometricCoefficient","CompoundTile","ReactionCard","ReactionCardWrapper","KINETIC_MODELS","generateKineticConstants","model","generateSimpleModelConstants","generateReversibleModelConstants","generateHiperbolicModelConstants","updatedExponents","oldConstant","inverseReactionConstant","Select","alignment","defaultDisplayValue","initialValue","onSelectionChange","selectOptions","selecting","setSelecting","currentValue","setCurrentValue","selectRef","clickOutsideHandler","useCallback","contains","toggleSelecting","removeEventListener","addEventListener","selectValue","currentValueOption","option","SelectWrapper","SelectValue","collapsedDisplayText","SelectOptions","SelectOption","displayText","ReactionCompoundCard","coefficientInput","setCoefficientInput","ReactionCompoundCardWrapper","parseFloat","ReactionCompoundList","reactionCompounds","compoundType","updatedReactionCompound","Division","numerator","denominator","DivisionWrapper","Power","base","power","PowerWrapper","Subindex","subindex","SubindexWrapper","GreekAlpha","GreekBeta","GreekMu","ReactionEquation","reactionEquation","keyCompound","keyCompoundSymbol","SimpleReactionEquation","EquationWrapper","ReversibleReactionEquation","HiperbolicReactionEquation","ReactionParamInputCard","paramSymbol","updateValue","valueInput","setValueInput","ParamInputWrapper","ParamInputInner","ReactionKineticParameters","updateKineticConstant","compoundParams","KineticParamsWrapper","ReactionEditModal","reactionIndex","rea","modalReaction","setModalReaction","selectReactantIndex","setSelectReactantIndex","selectProductIndex","setSelectProductIndex","getCompoundKey","Reactant","deletedCompound","selectReactantInitialValue","selectProductInitialValue","findCompound","InputSection","CompoundInputWrapper","AddCompound","CompoundInputInner","Product","ColumnInputSection","SelectField","constants","ReactionList","editedReactionIndex","editedReaction","ReactionsPage","ResultsPage","App","path","exact","component","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qWAyBYA,E,wECuFGC,EA9GMC,YAAH,i9E,gCCFLC,EAAwB,CACnC,QACA,QACA,SACA,WACA,OACA,SACA,WACA,SACA,UACA,QACA,OACA,cACA,OACA,QACA,SACA,QACA,cACA,WAGWC,EAAkB,CAC7BC,OAAQ,oBACRC,OAAQ,oBACRC,KAAM,oBACNC,OAAQ,oBACRC,OAAQ,qBACRC,YAAa,qBACbC,YAAa,qBACbC,SAAU,qBACVC,SAAU,qBACVC,MAAO,qBACPC,MAAO,qBACPC,QAAS,qBACTC,QAAS,qBACTC,MAAO,qBACPC,MAAO,qBACPC,MAAO,qBACPC,KAAM,qBACNC,KAAM,qBCvCKC,EAAmB,CAC9B,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCyBaC,EA1Cc,SAC3BC,GAMI,IALJC,EAKG,4DAL2BC,EAC9BC,EAIG,uDAJ0B,CAC3BC,UAAWC,KAAKC,UAChBC,YAAaF,KAAKG,OAGZJ,EAA2BD,EAA3BC,UAAWG,EAAgBJ,EAAhBI,YADhB,EAMuBE,oBAAY,WACpC,IAAMC,EAAsBC,OAAOC,aAAaC,QAAQb,GACxD,OAAIU,EACKH,EAAYG,GAEU,oBAAjBT,EAA8BA,IAAiBA,KAX5D,mBAMIa,EANJ,KAMWC,EANX,KAkBGC,EAAaC,iBAAOjB,GAc1B,OAZAkB,qBAAU,WAER,IAAMC,EAAUH,EAAWI,QACvBD,IAAYnB,IACdW,OAAOC,aAAaS,WAAWF,GAC/BH,EAAWI,QAAUpB,GAIvBW,OAAOC,aAAaU,QAAQtB,EAAKI,EAAUU,MAC1C,CAACd,EAAKI,EAAWU,IAEb,CAACA,EAAOC,I,iBJrBLxC,O,uBAAAA,I,sBAAAA,M,KA6BZ,I,wGAAM0B,GAA8B,CAElCsB,UAAW,GACXC,YAAa,aACbC,aAAc,aACdC,eAAgB,aAChBC,eAAgB,aAChBC,sBAAkB1B,EAGlB2B,UAAW,GACXC,YAAa,aACbC,aAAc,aACdC,eAAgB,aAChBC,eAAgB,aAChBC,sBAAkBhC,GAIPiC,GAAcC,wBAAcnC,IAG5BoC,GAAU,WACrB,OAAOC,qBAAWH,KAMPI,GAAuC,SAACC,GAAW,IACtDC,EAAaD,EAAbC,SADqD,EAErBhC,mBAAiB,GAFI,mBAEtDiC,EAFsD,KAExCC,EAFwC,OAG3B5C,EAChC,YACA,IAL2D,mBAGtDwB,EAHsD,KAG3CqB,EAH2C,OAO3B7C,EAChC,YACA,IAT2D,mBAOtD8B,EAPsD,KAO3CgB,EAP2C,OAabpC,wBAC9CP,GAd2D,mBAatD0B,EAbsD,KAapCkB,EAboC,OAgBbrC,wBAC9CP,GAjB2D,mBAgBtDgC,EAhBsD,KAgBpCa,EAhBoC,KA+BvDC,EAAkB,WACtB,IAAMC,EAAe,IAAIC,MAAMpD,EAAiBqD,QAAQC,MAAK,GAE3D7B,EAA0B8B,SAAQ,SAACC,GACnC,IAAMC,EAAQzD,EAAiB0D,QAAQF,EAASG,SACjC,IAAXF,IAAcN,EAAaM,IAAS,MAE1C,IAAK,IAAIG,EAAI,EAAGA,EAAIT,EAAaE,OAAQO,IACvC,IAAKT,EAAaS,GAChB,OAAO5D,EAAiB4D,GAG5B,MAAO,IA4HT,OACE,cAACvB,GAAYwB,SAAb,CACEC,MAAO,CAELrC,UAAWA,EACXC,YA3Hc,WAClB,IAAMqC,EAAgB,YAAQtC,GAE9BsC,EAAiBC,KAAK,CACpBC,GAAIC,IAAaC,SAAS,GAC1BC,MAAOxF,EAAsBgE,GAC7ByB,cAAe,EACfV,OAAQT,IACRoB,KAAM,KA7BRzB,EAJID,IAAiBhE,EAAsByE,OAAS,EAIpCT,EAAe,EAHb,GAoCHE,EACNiB,IA+GLpC,aA5Ge,SAAC8B,GACpB,GAAqB,qBAAVA,EAAX,CAIA,IAAMQ,EAAMxC,EAA0BgC,GAAOQ,GAC7CjB,EAAoBiB,QAJlBjB,OAAoB5C,IA2GlBwB,eApGiB,SAAC6B,EAAec,GACrC,IAAMR,EAAgB,YAAQtC,GAC9BsC,EAAiBN,GAASc,EAEXzB,EACNiB,IAgGLlC,eA7FiB,SAAC4B,GACtB,IAAMe,EAAc/C,EAA0BgC,GAAOQ,GAK/CQ,EAAmBlE,KAAKG,MAAMH,KAAKC,UAAUuB,IACnD0C,EAAiBlB,SAAQ,SAACmB,GACxBA,EAASC,UAAYD,EAASC,UAAUC,QACtC,SAACC,GAAD,OACEA,EAAiBL,aAAeA,KAGpCE,EAASI,SAAWJ,EAASI,SAASF,QACpC,SAACC,GAAD,OACEA,EAAiBL,aAAeA,QAGbzB,EAER0B,GAKQ3B,EACR,GAAD,mBACVrB,EAA0BsD,MAAM,EAAGtB,IADzB,YAEVhC,EAA0BsD,MAC5BtB,EAAQ,EACPhC,EAA0B4B,YAgE3BvB,mBAGAC,UAAWA,EACXC,YA3Dc,WAClB,IAAMyC,EAAgB,YAAQ1C,GAE9B0C,EAAiBT,KAAK,CACpBC,GAAIC,IAAaC,SAAS,GAC1BQ,UAAW,GACXG,SAAU,GACVE,aAAc,EACdC,iBAAkB,CAChBC,iBAAkB,KAIPnC,EACN0B,IA8CLxC,aA3Ce,SAACwB,GACpB,GAAqB,qBAAVA,EAAX,CAIA,IAAMQ,EAAMlC,EAA0B0B,GAAOQ,GAC7ChB,EAAoBgB,QAJlBhB,OAAoB7C,IA0ClB8B,eAnCiB,SAACuB,EAAe0B,GACrC,IAAMV,EAAmBlE,KAAKG,MAAMH,KAAKC,UAAUuB,IACnD0C,EAAiBhB,GAAS0B,EAEXpC,EACN0B,IA+BLtC,eA5BiB,SAACsB,GACPV,EAEN,GAAD,mBACFhB,EAA0BgD,MAAM,EAAGtB,IADjC,YAEF1B,EAA0BgD,MAC5BtB,EAAQ,EACP1B,EAA0BsB,YAsB3BjB,oBAhBJ,SAmBGO,K,QKlQDyC,GAAiBC,IAAOC,IAAV,mKAQdC,GAAkBF,IAAOC,IAAV,+MAYfE,GAAgBH,IAAOC,IAAV,kNAWJG,GAzCW,WACxB,OACE,cAACL,GAAD,UACE,cAACG,GAAD,UACE,cAACC,GAAD,CAAevB,GAAG,gBC+BXyB,GA1BsB,SAAChD,GAAW,IACvCC,EAAaD,EAAbC,SACR,OACE,eAACgD,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,IACA,gCACE,eAAC,IAAD,CAAMC,GAAG,aAAT,UACE,0CACA,cAAC,KAAD,OAEF,eAAC,IAAD,CAAMA,GAAG,aAAT,UACE,0CACA,cAAC,KAAD,OAEF,eAAC,IAAD,CAAMA,GAAG,WAAT,UACE,wCACA,cAAC,KAAD,aAIN,cAACC,GAAD,UAAcnD,QAOdgD,GAAoBN,IAAOC,IAAV,uHAOjBM,GAAcP,IAAOC,IAAV,smBAgCXQ,GAAcT,IAAOC,IAAV,gLCtDFS,GAlBAV,IAAOW,OAAV,iRAWR,SAACtD,GAAD,OAAWuD,GAAWvD,EAAM0B,UAG1B,SAAC1B,GAAD,OAAWwD,GAAYxD,EAAM0B,UAM7B6B,GAAa,SAAC7B,GAClB,OAAQA,GACN,IAAK,QACH,MAAM,qHAIR,QACE,MAAM,+GAON8B,GAAc,SAAC9B,GACnB,OAAQA,GACN,IAAK,QACH,MAAM,uEAGR,QACE,MAAM,qECxCG+B,GANGd,IAAOe,GAAV,wG,SCqBAC,GArBIhB,IAAOW,OAAV,4ZCIHM,GAAmB,SAACxC,GAC/B,MAAc,KAAVA,IACiB,kBAAVA,KACNA,IC0GQyC,GAzFoC,SAAC7D,GAAW,IAE3Dc,EAKEd,EALFc,SACA7B,EAIEe,EAJFf,aACAC,EAGEc,EAHFd,eACAC,EAEEa,EAFFb,eACA2E,EACE9D,EADF8D,gBAN0D,EAQtB7F,mBAAiB6C,EAASG,QARJ,mBAQrD8C,EARqD,KAQxCC,EARwC,KAWtDC,EAAYxF,mBAElBC,qBAAU,WACRuF,EAAUrF,QAAUsF,SAASC,eAAe,gBAAazG,IACxD,IAKHgB,qBAAU,WACRsF,EAAelD,EAASG,UACvB,CAACH,IA4BJ,OACE,cAACsD,GAAD,UACE,eAACC,GAAD,CACEC,aAAc,WAEZL,EAAUrF,QAAQ2F,MAAMC,gBACtBrI,EAAgB2E,EAASY,QAE7B+C,aAAc,WAEZR,EAAUrF,QAAQ2F,MAAMC,gBAAkB,sBAR9C,UAWE,cAACE,GAAD,CACEtD,MAAO2C,EACPY,OAlCwB,WAC9B,GACEf,GAAiBG,IACjBD,EAAgB,SAAUC,GAC1B,CAEA,IAAMlC,EAAe,gBAAQf,GAC7Be,EAAgBZ,OAAS8C,EACzB7E,EAAe2C,QAGfmC,EAAelD,EAASG,SAwBpB2D,SAvCmB,SAACC,GAC1Bb,EAAea,EAAMC,OAAO1D,UA0CxB,cAAC,GAAD,CAAY2D,QAAS9F,EAArB,SACE,cAAC,KAAD,MAIF,cAAC,GAAD,CAAY8F,QAAS5F,EAArB,SACE,cAAC,KAAD,MAIF,cAAC6F,GAAD,CACEC,UAAU,SACVvD,MAAOZ,EAASY,cAapB0C,GAAsBzB,IAAOuC,GAAV,gDAInBb,GAAoB1B,IAAOC,IAAV,k1BA+CjBoC,GAAsBrC,IAAOC,IAAV,uQAUH,SAAC5C,GAAD,OAAW7D,EAAgB6D,EAAM0B,UAIjDgD,GAAc/B,IAAOwC,MAAV,2G,UChLXC,GAAezC,IAAOC,IAAV,yVAgBHyC,GArB0B,SAACrF,GAAW,IAC3CC,EAAaD,EAAbC,SACR,OAAO,cAACmF,GAAD,CAAcH,UAAU,QAAxB,SAAiChF,KCS3BqF,GAVD3C,IAAOwC,MAAV,mCACP,SAACnF,GAAD,OACAA,EAAMuF,OAAN,8IAKI,MCwCOC,GAhC8B,SAACxF,GAAW,IAC/CC,EAA+CD,EAA/CC,SAAUwF,EAAqCzF,EAArCyF,QAASC,EAA4B1F,EAA5B0F,WAAYC,EAAgB3F,EAAhB2F,YAEjCC,EAAa,WAIjBF,GAAW,GACXG,YAAW,WACTF,MACC,MAUL,OAPAjH,qBAAU,WACJ+G,GACFG,MAGD,CAACH,IAGF,cAACK,GAAD,CAA0BL,QAASA,EAAnC,SACE,eAACM,GAAD,CAAwBN,QAASA,EAAjC,UACE,cAACO,GAAD,CAAajB,QAASa,EAAYH,QAASA,EAA3C,SACE,cAAC,KAAD,MAEDxF,QAQH6F,GAA2BnD,IAAOC,IAAV,yrBAgB1B,SAAC5C,GAAD,OACAA,EAAMyF,QAAN,yLAQI,MAuBFM,GAAyBpD,IAAOC,IAAV,i7BAiBxB,SAAC5C,GAAD,OACAA,EAAMyF,QAAN,2LAQI,MA6BFO,GAAcrD,IAAOW,OAAV,yUAUb,SAACtD,GAAD,OAAYA,EAAMyF,QAAU,kBAAoB,MC5JrCQ,GATMtD,YAAOU,GAAPV,CAAH,sLCwIHuD,GAhH8C,SAAClG,GAAW,IAC/Dc,EAAyBd,EAAzBc,SAAU8E,EAAe5F,EAAf4F,WADoD,EAEhC/F,KAA9Bd,EAF8D,EAE9DA,UAAWG,EAFmD,EAEnDA,eAFmD,EAGxCjB,oBAAkB,GAHsB,mBAG/DwH,EAH+D,KAGtDC,EAHsD,KAIhES,EAAgBpH,EAAUqH,WAAU,SAACC,GAAD,OAAUA,EAAK9E,KAAOT,EAASS,MA6BnEuC,EAAkB,SAACwC,EAAelF,GACtC,IAAK,IAAIF,EAAI,EAAGA,EAAInC,EAAU4B,OAAQO,IAEpC,GAAIA,IAAMiF,GAAiBpH,EAAUmC,GAAGoF,KAAWlF,EACjD,OAAO,EAGX,OAAO,GAMHmF,EAASC,aAAU,CAEvBC,cAAe,CACbxF,OAAQH,EAASG,OACjBU,cAAeb,EAASa,cACxBC,KAAMd,EAASc,MAEjB8E,SAtCe,SAACC,GAChB,INzBFvF,EACAwF,EACAC,EMuBQtB,EAAkB,GAcxB,OAXK3B,GAAiB+C,EAAO1F,QAEnB6C,EAAgB,SAAU6C,EAAO1F,UACzCsE,EAAOtE,OAAS,0BAFhBsE,EAAOtE,OAAS,yBAKb2C,GAAiB+C,EAAOhF,gBNlC/BP,EMoCgCuF,EAAOhF,cNnCvCiF,EMmCsD,ENlCtDC,GMkCyD,ENhCpC,kBAAVzF,IACPA,EAAQwF,GACRxF,IAAUwF,GAAaC,KM+BvBtB,EAAO5D,cAAgB,yCAFvB4D,EAAO5D,cAAgB,gCAIlB4D,GAwBPuB,SAAU,SAACH,GACT,IAAM9E,EAAe,6BAAQf,GAAa6F,GAC1CzH,EAAeiH,EAAetE,GAC9B6D,GAAW,MAIf,OACE,cAAC,GAAD,CACED,QAASA,EACTC,WAAYA,EACZC,YAAaC,EAHf,SAKE,uBAAMkB,SAAUP,EAAOQ,aAAvB,UACE,eAACC,GAAD,CAAkBtF,MAAOZ,EAASY,MAAlC,UACE,uBAAOuF,QAAQ,SAAf,qBACA,cAAC,GAAD,CACE1B,SAAUgB,EAAOhB,OAAOtE,OACxBW,KAAK,SACLsF,aAAa,MACbxF,MAAOZ,EAASY,MAChBkD,SAAU2B,EAAOY,aACjB/F,MAAOmF,EAAOI,OAAO1F,SAEtBsF,EAAOhB,OAAOtE,QAAU,cAAC,GAAD,UAAQsF,EAAOhB,OAAOtE,YAGjD,eAACmG,GAAD,WACE,uBAAOH,QAAQ,gBAAf,oCACA,cAAC,GAAD,CACE1B,SAAUgB,EAAOhB,OAAO5D,cACxBC,KAAK,gBACLyF,KAAK,SACLzC,SAAU2B,EAAOY,aACjB/F,MAAOmF,EAAOI,OAAOhF,gBAEtB4E,EAAOhB,OAAO5D,eACb,cAAC,GAAD,UAAQ4E,EAAOhB,OAAO5D,mBAI1B,eAACyF,GAAD,WACE,uBAAOH,QAAQ,OAAf,uCACA,uBACErF,KAAK,OACLsF,aAAa,MACbtC,SAAU2B,EAAOY,aACjB/F,MAAOmF,EAAOI,OAAO/E,UAGzB,cAAC,GAAD,CAAcF,MAAM,QAAQ2F,KAAK,SAAjC,wBAcFD,GAAazE,IAAOC,IAAV,kMAgBVoE,GAAmBrE,YAAOyE,GAAPzE,CAAH,8TAEA,SAAC3C,GAAD,OAClB7D,EAAgB6D,EAAM0B,UCrGX4F,GA/CoC,SAACtH,GAAW,IACrDjB,EAAciB,EAAdjB,UADoD,EAG1Dc,KADMT,EAFoD,EAEpDA,iBAAkBH,EAFkC,EAElCA,aAAcC,EAFoB,EAEpBA,eAAgBC,EAFI,EAEJA,eAGlDoI,EAAiBnI,EACnBL,EAAUyI,MAAK,SAAC1G,GAAD,OAAcA,EAASS,KAAOnC,UAC7C1B,EAEJ,OACE,eAAC+J,GAAD,WACG1I,EAAU2I,KAAI,SAAC5G,EAAUC,GAAX,OACb,cAAC,GAAD,CAEED,SAAUA,EACV7B,aAAc,WACZA,EAAa8B,IAEf7B,eAAgB,SAAC4B,GACf5B,EAAe6B,EAAOD,IAExB3B,eAAgB,WACdA,EAAe4B,IAEjB+C,gBAAiB,SAACwC,EAAelF,GAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAInC,EAAU4B,OAAQO,IAEpC,GAAIA,IAAMH,GAAShC,EAAUmC,GAAGoF,KAAWlF,EACzC,OAAO,EAGX,OAAO,IAlBJL,MAwBR3B,GACC,cAAC,GAAD,CACE0B,SAAUyG,EACV3B,WAAY,kBAAM3G,WAatBwI,GAAsB9E,IAAOgF,GAAV,wICrCVC,GAtBiB,WAAO,IAAD,EACa/H,KAAzCd,EAD4B,EAC5BA,UAAWC,EADiB,EACjBA,YAAaC,EADI,EACJA,aAUhC,OARAP,qBAAU,WACR,OAAO,WAELO,OAGD,IAGD,qCACE,cAAC,GAAD,wBACA,eAAC,GAAD,CAAQyC,MAAM,QAAQqD,QAAS/F,EAA/B,iBACM,cAAC,KAAD,OAEN,cAAC,GAAD,CAAcD,UAAWA,QCnBhB8I,GANAlF,IAAOmF,EAAV,0GC4EGC,GAzD0C,SAAC/H,GAAW,IAC3DgC,EAAahC,EAAbgC,SACAjD,EAAcc,KAAdd,UAER,OACE,eAACiJ,GAAD,WACiC,IAA9BhG,EAASC,UAAUtB,QAA6C,IAA7BqB,EAASI,SAASzB,QACpD,cAAC,GAAD,+BAGDqB,EAASC,UAAUyF,KAAI,SAACvF,EAAkBpB,GACzC,IAAMD,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAGnC,OACE,eAAC,WAAD,WACa,IAAVf,GAAe,cAAC,KAAD,CAAQmH,KAAM,KAC9B,eAACC,GAAD,WACE,4BAAIhG,EAAiBiG,4BACrB,cAACC,GAAD,CACE3G,MAAOZ,EAASY,MADlB,SAGGZ,EAASG,cAPDkB,EAAiBL,eAcnCE,EAASC,UAAUtB,OAAS,GAAKqB,EAASI,SAASzB,OAAS,GAC3D,cAAC,KAAD,CAAcuH,KAAM,KAGrBlG,EAASI,SAASsF,KAAI,SAACvF,EAAkBpB,GACxC,IAAMD,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAGnC,OACE,eAAC,WAAD,WACa,IAAVf,GAAe,cAAC,KAAD,CAAQmH,KAAM,KAC9B,eAACC,GAAD,WACE,4BAAIhG,EAAiBiG,4BACrB,cAACC,GAAD,CACE3G,MAAOZ,EAASY,MADlB,SAGGZ,EAASG,cAPDkB,EAAiBL,mBAmBpCkG,GAAyBrF,IAAOC,IAAV,4GAOtBuF,GAAkBxF,IAAOC,IAAV,kMAgBfyF,GAAe1F,IAAOC,IAAV,qOACI,SAAC5C,GAAD,OAAW7D,EAAgB6D,EAAM0B,UCxExC4G,GAhBoC,SAACtI,GAAW,IACrDgC,EAA2ChC,EAA3CgC,SAAUzC,EAAiCS,EAAjCT,aAAcE,EAAmBO,EAAnBP,eAEhC,OACE,eAAC8I,GAAD,WACE,cAAC,GAAD,CAAiBvG,SAAUA,IAC3B,cAAC,GAAD,CAAY+C,QAASxF,EAArB,SACE,cAAC,KAAD,MAEF,cAAC,GAAD,CAAYwF,QAAStF,EAArB,SACE,cAAC,KAAD,UAQF8I,GAAsB5F,IAAOC,IAAV,o6B,SCfZ4F,GAAiB,CAAC,SAAU,aAAc,cAE1CC,GAA2B,SACtCC,EACA1G,GAEA,OAAQ0G,GACN,KAAK,EACH,OAAOC,GAA6B3G,GACtC,KAAK,EACH,OAAO4G,GAAiC5G,GAC1C,KAAK,EACH,OAAO6G,GAAiC7G,GAC1C,QACE,OAAO2G,GAA6B3G,KAIpC2G,GAA+B,SAAC3G,GAAwB,MAErBA,EAASO,iBAAxCC,EAFoD,EAEpDA,iBAEFsG,GAJsD,qCAIhB,IAU5C,OATA9G,EAASC,UAAUpB,SAAQ,SAACC,GAC1B,IAAMiI,EAAc/G,EAASO,iBAAiBzB,EAASgB,YAErDgH,EAAiBhI,EAASgB,iBADRpE,IAAhBqL,EACsC,EAEAA,KAIrC,cAAEvG,oBAAqBsG,IAG1BF,GAAmC,SAAC5G,GAAwB,MAEzBA,EAASO,iBAAxCC,EAFwD,EAExDA,iBAEFsG,GAJ0D,qCAIpB,IAmB5C,OAjBA9G,EAASC,UAAUpB,SAAQ,SAACC,GAC1B,IAAMiI,EAAc/G,EAASO,iBAAiBzB,EAASgB,YAErDgH,EAAiBhI,EAASgB,iBADRpE,IAAhBqL,EACsC,EAEAA,KAG5C/G,EAASI,SAASvB,SAAQ,SAACC,GACzB,IAAMiI,EAAc/G,EAASO,iBAAiBzB,EAASgB,YAErDgH,EAAiBhI,EAASgB,iBADRpE,IAAhBqL,EACsC,EAEAA,KAIrC,cAAEvG,mBAAkBwG,wBAAyB,GAAMF,IAGtDD,GAAmCF,GCqE1BM,GA7HA,SAA4BjJ,GAA2B,IAGlEkJ,EAKElJ,EALFkJ,UACAC,EAIEnJ,EAJFmJ,oBACAC,EAGEpJ,EAHFoJ,aACAC,EAEErJ,EAFFqJ,kBACAC,EACEtJ,EADFsJ,cAPkE,EAWlCrL,oBAAkB,GAXgB,mBAW7DsL,EAX6D,KAWlDC,EAXkD,OAY5BvL,oBAC1B,OAAZmL,QAAY,IAAZA,OAAA,EAAAA,EAAchI,aAAS1D,GAb2C,mBAY7D+L,EAZ6D,KAY/CC,EAZ+C,KAiB9DnI,EAAK9C,iBAAe+C,IAAaC,SAAS,IAM1CkI,EAAYlL,iBAA2B,MAG7CC,qBAAU,WAEJ0K,GAAcM,EAAgBN,EAAahI,OAG/CuI,EAAU/K,QAAUsF,SAASC,eAAe5C,EAAG3C,WAG9C,IAKHF,qBAAU,WACOiL,EAAU/K,QAArB2K,EAA+BrF,SAASC,eAAe5C,EAAG3C,SACrC,OACxB,CAAC2K,IAQJ,IAAMK,EAAsBC,uBAAY,SAAChF,GAAsB,IAAD,GAKxD,UAAC8E,EAAU/K,eAAX,aAAC,EAAmBkL,SAASjF,EAAMC,WACrCiF,IAEAP,GAAa,MAGd,IAMGO,EAAkB,WAEjBR,EAGHpL,OAAO6L,oBAAoB,QAASJ,GAAqB,GAFzDzL,OAAO8L,iBAAiB,QAASL,GAAqB,GAMxDJ,GAAcD,IAOVW,EAAc,SAAC9I,GACnB2I,IACAL,EAAgBtI,GAChBiI,EAAkBjI,IAMd+I,EAAmDb,EAAc9B,MACrE,SAAC4C,GAAD,OAAYA,EAAOhJ,QAAUqI,KAG/B,OACE,eAACY,GAAD,CAAe9I,GAAIA,EAAG3C,QAAtB,UACE,eAAC0L,GAAD,CAAaf,UAAWA,EAAWxE,QAASgF,EAA5C,UACE,6BAAsB,OAAlBI,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBI,uBAAwBpB,IAChD,cAAC,KAAD,CAAejB,KAAM,QAEtBqB,GACC,eAACiB,GAAD,CAAetB,UAAWA,GAAa,OAAvC,UACGC,GACC,cAACsB,GAAD,CAAc1F,QAAS,kBAAMmF,OAAYxM,IAAzC,SACE,4BAAIyL,MAGPG,EAAc5B,KAAI,gBAAGtG,EAAH,EAAGA,MAAOsJ,EAAV,EAAUA,YAAV,OACjB,cAACD,GAAD,CAEE1F,QAAS,WACPmF,EAAY9I,IAHhB,SAME,4BAAIsJ,KALCtJ,aAoBbiJ,GAAgB1H,IAAOC,IAAV,oEAKb0H,GAAc3H,IAAOC,IAAV,4XAWb,SAAC5C,GAAD,OACAA,EAAMuJ,UAAN,0FAGI,MAgBFiB,GAAgB7H,IAAOC,IAAV,0fAKf,SAAC5C,GAAD,MAAgC,SAApBA,EAAMkJ,UAAuB,WAAa,MACtD,SAAClJ,GAAD,MAAgC,UAApBA,EAAMkJ,UAAwB,YAAc,MAkBtDuB,GAAe9H,IAAOW,OAAV,6WC7IHqH,GA/CoD,SAAC3K,GAAW,IACrEc,EAA+Dd,EAA/Dc,SAAUqB,EAAqDnC,EAArDmC,iBAAkBjD,EAAmCc,EAAnCd,eAAgBC,EAAmBa,EAAnBb,eADwB,EAI5BlB,mBAC9CkE,EAAiBiG,2BALyD,mBAIrEwC,EAJqE,KAInDC,EAJmD,KA6B5E,OACE,eAACC,GAAD,CACEpJ,MAAOZ,EAASY,MADlB,UAGE,6BAAKZ,EAASG,SACd,uBACEG,MAAOwJ,EACPvD,KAAK,SACLzC,SA7B0B,SAC9BC,GAE2B,KAAvBA,EAAMC,OAAO1D,MAIjByJ,EAAoBE,WAAWlG,EAAMC,OAAO1D,QAH1CyJ,EAAoB,KA0BlBlG,OApB+B,WAC/Bf,GAAiBgH,GACnB1L,EAAe,6BACViD,GADS,IAEZiG,0BAA2BwC,KAI/BC,EAAoB1I,EAAiBiG,8BAcnC,cAAC,GAAD,CAAYrD,QAAS5F,EAArB,SACE,cAAC,KAAD,UAYF2L,GAA8BnI,IAAOC,IAAV,wtBAUX,SAAC5C,GAAD,OAAW7D,EAAgB6D,EAAM0B,UC3BxCsJ,GAxCoD,SAAChL,GAAW,IACrEiL,EACNjL,EADMiL,kBAAmB9L,EACzBa,EADyBb,eAAgBD,EACzCc,EADyCd,eAAgBgM,EACzDlL,EADyDkL,aAEnDnM,EAAcc,KAAdd,UAER,OACE,mCACGkM,EAAkBvD,KAAI,SAACvF,GACtB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAK7BqE,EAAgB8E,EAAkB7E,WACtC,SAAC6B,GAAD,OAAOA,EAAEnG,aAAeK,EAAiBL,cAG3C,OACE,cAAC,GAAD,CAEEhB,SAAUA,EACVqB,iBAAkBA,EAClBjD,eAAgB,SAACiM,GACfjM,EACEiH,EACA+E,EACAC,IAGJhM,eAAgB,WACdA,EAAegH,EAAe+E,KAX3B/I,EAAiBL,kBChCrBsJ,GAAqC,SAACpL,GAAW,IACpDqL,EAA2BrL,EAA3BqL,UAAWC,EAAgBtL,EAAhBsL,YAEnB,OACE,eAACC,GAAD,WACE,8BAAMF,IACN,wBACA,8BAAMC,QAKNC,GAAkB5I,IAAOC,IAAV,iUA2BR4I,GAA+B,SAACxL,GAAW,IAC9CyL,EAAgBzL,EAAhByL,KAAMC,EAAU1L,EAAV0L,MACd,OACE,eAACC,GAAD,WACE,8BAAMF,IACN,qBAAKxG,UAAU,WAAf,SAA2ByG,QAK3BC,GAAehJ,IAAOC,IAAV,8IAkBLgJ,GAAqC,SAAC5L,GAAW,IACpDyL,EAAmBzL,EAAnByL,KAAMI,EAAa7L,EAAb6L,SACd,OACE,eAACC,GAAD,WACE,8BAAML,IACN,qBAAKxG,UAAU,WAAf,SAA2B4G,QAK3BC,GAAkBnJ,IAAOC,IAAV,6IAaRmJ,GAAa,kBAAM,2CACnBC,GAAY,kBAAM,2CAClBC,GAAU,kBAAM,2CC3CdC,GArC4C,SAAClM,GAAW,IAGjEmM,EAFInK,EAAwBhC,EAAxBgC,SAAUjD,EAAciB,EAAdjB,UACZqN,EAAcrN,EAAUyI,MAAK,SAACS,GAAD,OAAOjG,EAASoK,cAAgBnE,EAAE1G,MAGrE,OAAQS,EAASM,cACf,KAAK,EACH6J,EACE,cAAC,GAAD,CACEnK,SAAUA,EACVjD,UAAWA,EACXsN,mBAA8B,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAanL,cAAUvD,IAG9C,MACF,KAAK,EACHyO,EACE,cAAC,GAAD,CACEnK,SAAUA,EACVjD,UAAWA,EACXsN,mBAA8B,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAanL,cAAUvD,IAG9C,MACF,QACEyO,EACE,cAAC,GAAD,CACEnK,SAAUA,EACVjD,UAAWA,EACXsN,mBAA8B,OAAXD,QAAW,IAAXA,OAAA,EAAAA,EAAanL,cAAUvD,IAKlD,OAAOyO,GAOHG,GAA2D,SAACtM,GAAW,IACnEgC,EAA2ChC,EAA3CgC,SAAUjD,EAAiCiB,EAAjCjB,UAAWsN,EAAsBrM,EAAtBqM,kBAE7B,OACE,eAACE,GAAD,WACGF,GACC,qCACE,cAAC,GAAD,CAAUZ,KAAK,IAAII,SAAUQ,IAD/B,eAFJ,IAQGrK,EAASC,UAAUyF,KAAI,SAACvF,GACvB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAEnC,OACE,eAAC,WAAD,eAEE,cAAC,GAAD,CACE2J,KAAI,WAAM3K,EAASG,OAAf,KACJyK,MACE,cAAC,GAAD,CAAUD,KAAM,cAAC,GAAD,IAAgBI,SAAU/K,EAASG,aAL1CkB,EAAiBL,mBAepC0K,GAA+D,SACnExM,GACI,IACIgC,EAA2ChC,EAA3CgC,SAAUjD,EAAiCiB,EAAjCjB,UAAWsN,EAAsBrM,EAAtBqM,kBAE7B,OACE,eAACE,GAAD,WACGF,GACC,qCACE,cAAC,GAAD,CAAUZ,KAAK,IAAII,SAAUQ,IAD/B,eAFJ,IAQGrK,EAASC,UAAUyF,KAAI,SAACvF,GACvB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAEnC,OACE,eAAC,WAAD,eAEE,cAAC,GAAD,CACE2J,KAAI,WAAM3K,EAASG,OAAf,KACJyK,MACE,cAAC,GAAD,CAAUD,KAAM,cAAC,GAAD,IAAgBI,SAAU/K,EAASG,aAL1CkB,EAAiBL,eAbtC,YAyBE,cAAC,GAAD,CAAU2J,KAAK,IAAII,SAAS,OAC3B7J,EAASI,SAASsF,KAAI,SAACvF,GACtB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAEnC,OACE,eAAC,WAAD,eAEE,cAAC,GAAD,CACE2J,KAAI,WAAM3K,EAASG,OAAf,KACJyK,MACE,cAAC,GAAD,CAAUD,KAAM,cAAC,GAAD,IAAeI,SAAU/K,EAASG,aALzCkB,EAAiBL,mBAepC2K,GAA+D,SACnEzM,GACI,IACIgC,EAA2ChC,EAA3CgC,SAAUjD,EAAiCiB,EAAjCjB,UAAWsN,EAAsBrM,EAAtBqM,kBAE7B,OACE,eAACE,GAAD,WACGF,GACC,qCACE,cAAC,GAAD,CAAUZ,KAAK,IAAII,SAAUQ,IAD/B,eAKF,cAAC,GAAD,IACCrK,EAASC,UAAUyF,KAAI,SAACvF,GACvB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAEnC,OACE,eAAC,WAAD,eAEE,cAAC,GAAD,CACEuJ,UAAS,WAAMvK,EAASG,OAAf,KACTqK,YACE,qCACE,cAAC,GAAD,CAAUG,KAAM,IAAKI,SAAU/K,EAASG,SAD1C,eAEQH,EAASG,QAFjB,WALSkB,EAAiBL,mBAoBpCyK,GAAkB5J,IAAOC,IAAV,gcCxIN8J,GArCwD,SACrE1M,GACI,IACI2M,EAAoC3M,EAApC2M,YAAavL,EAAuBpB,EAAvBoB,MAAOwL,EAAgB5M,EAAhB4M,YADzB,EAEiC3O,mBAAsBmD,GAFvD,mBAEIyL,EAFJ,KAEgBC,EAFhB,KAoBH,OACE,cAACC,GAAD,UACE,eAACC,GAAD,WACE,6BAAKL,IACL,uBACEvL,MAAOyL,EACPxF,KAAK,SACLzC,SAvBa,SAACC,GACO,KAAvBA,EAAMC,OAAO1D,MAIjB0L,EAAc/B,WAAWlG,EAAMC,OAAO1D,QAHpC0L,EAAc,KAsBVnI,OAhB0B,WAC5Bf,GAAiBiJ,GACnBD,EAAYC,GAGdC,EAAc1L,YAoBZ2L,GAAoBpK,IAAOC,IAAV,kDAIjBoK,GAAkBrK,IAAOC,IAAV,6kBCmCNqK,GA5E8D,SAC3EjN,GACI,IACIjB,EAA+CiB,EAA/CjB,UAAWiD,EAAoChC,EAApCgC,SAAUkL,EAA0BlN,EAA1BkN,sBAD1B,EAGDlL,EAASO,iBADHC,EAFL,EAEKA,iBAAkBwG,EAFvB,EAEuBA,wBAA4BmE,EAFnD,+DAKH,OACE,eAACC,GAAD,WACE,cAAC,GAAD,CACET,YAAuC,IAA1B3K,EAASM,aAAqB,cAAC,GAAD,IAAc,IACzDlB,MAAOoB,EACPoK,YAAa,SAACxL,GACZ8L,EAAsB,mBAAoB9L,WAIjB1D,IAA5BsL,GACC,cAAC,GAAD,CACE2D,YAAa,cAAC,GAAD,CAAUlB,KAAK,IAAII,SAAS,OACzCzK,MAAO4H,EACP4D,YAAa,SAACxL,GACZ8L,EAAsB,mBAAoB9L,MAK/CY,EAASC,UAAUyF,KAAI,SAACvF,GACvB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAGnC,OACE,cAAC,GAAD,CAEE6K,YACE,qCACE,0CACA,8BAAM7L,EAASG,YAGnBG,MAAO+L,EAAerM,EAASS,IAC/BqL,YAAa,SAACxL,GACZ8L,EAAsBpM,EAASS,GAAIH,KAThCN,EAASS,OAgBO,IAA1BS,EAASM,cACRN,EAASI,SAASsF,KAAI,SAACvF,GACrB,IAAMrB,EAAW/B,EAAUyI,MACzB,SAACS,GAAD,OAAOA,EAAE1G,KAAOY,EAAiBL,cAGnC,OACE,cAAC,GAAD,CAEE6K,YACE,qCACE,0CACA,8BAAM7L,EAASG,YAGnBG,MAAO+L,EAAerM,EAASS,IAC/BqL,YAAa,SAACxL,GACZ8L,EAAsBpM,EAASS,GAAIH,KAThCN,EAASS,WAoBtB6L,GAAuBzK,IAAOC,IAAV,sRC4PXyK,GAvT8C,SAACrN,GAAW,IAC/DjB,EAAoCiB,EAApCjB,UAAWiD,EAAyBhC,EAAzBgC,SAAU4D,EAAe5F,EAAf4F,WADyC,EAEhC/F,KAA9BR,EAF8D,EAE9DA,UAAWG,EAFmD,EAEnDA,eAFmD,EAGxCvB,oBAAkB,GAHsB,mBAG/DwH,EAH+D,KAGtDC,EAHsD,KAIhE4H,EAAgBjO,EAAU+G,WAAU,SAACmH,GAAD,OAASA,EAAIhM,KAAOS,EAAST,MAJD,EAQ5BtD,mBACxCJ,KAAKG,MAAMH,KAAKC,UAAUkE,KAT0C,mBAQ/DwL,EAR+D,KAQhDC,EARgD,OAahBxP,wBAEpDP,GAfoE,mBAa/DgQ,EAb+D,KAa1CC,EAb0C,OAgBlB1P,wBAElDP,GAlBoE,mBAgB/DkQ,EAhB+D,KAgB3CC,EAhB2C,KAuBhEC,EAAiB,SACrB5C,GAEA,OAAIA,IAAiBnP,EAAagS,SAAiB,YAC5C,YAGH/O,EAAc,SAClB8C,EACAoJ,GAGA,IAAM1N,EAAMsQ,EAAe5C,GACrBzI,EAAkB5E,KAAKG,MAAMH,KAAKC,UAAU0P,IAElD/K,EAAgBjF,GAAK8D,KAAK,CACxBQ,aACAsG,0BAA2B,IAG7B,IAAM7F,EAAmBkG,GACvBhG,EAAgBH,aAChBG,GAEFA,EAAgBF,iBAAmBA,EAEnCkL,EAAiBhL,IAGbvD,EAAiB,SACrBiH,EACA+E,EACArJ,GAGA,IAAMrE,EAAMsQ,EAAe5C,GACrBzI,EAAe,gBAAQ+K,GAE7B/K,EAAgBjF,GAAK2I,GAAiBtE,EAEtC4L,EAAiBhL,IAGbtD,EAAiB,SACrBgH,EACA+E,GAGA,IAAM1N,EAAMsQ,EAAe5C,GACrBzI,EAAe,gBAAQ+K,GACvBQ,EAAkBvL,EAAgBjF,GAAK2I,GAG7C1D,EAAgBjF,GAAhB,sBACKiF,EAAgBjF,GAAK6E,MAAM,EAAG8D,IADnC,YAEK1D,EAAgBjF,GAAK6E,MACtB8D,EAAgB,EAChB1D,EAAgBjF,GAAKmD,UAKrBqN,EAAgBlM,aAAe0L,EAAcpB,cAC/C3J,EAAgB2J,iBAAc1O,GAIhC,IAAM6E,EAAmBkG,GACvBhG,EAAgBH,aAChBG,GAEFA,EAAgBF,iBAAmBA,EAEnCkL,EAAiBhL,IAcbwL,EAA6BP,EAC/B,CACEtM,MAAOsM,EACPhD,YAAa3L,EAAU2O,GAAqBzM,OAC5CsJ,qBAAsBxL,EAAU2O,GAAqBzM,aAEvDvD,EAEEwQ,EAA4BN,EAC9B,CACExM,MAAOwM,EACPlD,YAAa3L,EAAU6O,GAAoB3M,OAC3CsJ,qBAAsBxL,EAAU6O,GAAoB3M,aAEtDvD,EAEEyQ,EAAe,SAAC5M,GACpB,OAAOxC,EAAUyI,MAAK,SAACS,GAAD,OAAOA,EAAE1G,KAAOA,MAGxC,OACE,eAAC,GAAD,CACEkE,QAASA,EACTC,WAAYA,EACZC,YAAaC,EAHf,UAKE,cAAC,GAAD,CAAiB5D,SAAUwL,IAG3B,eAACY,GAAD,WACE,eAACC,GAAD,WACE,2CACA,eAACC,GAAD,WACE,cAAC,GAAD,CACEnF,oBAAoB,cACpBC,aAAc6E,EACd3E,cAAevK,EAAU2I,KAAI,SAAC5G,EAAUC,GAAX,MAAsB,CACjDK,MAAOL,EACP2J,YAAa5J,EAASG,OACtBsJ,qBAAsBzJ,EAASG,WAEjCoI,kBAAmB,SAACtI,GAAD,OACjB4M,EAAuB5M,MAG3B,eAAC,GAAD,CACEW,MAAM,QACNqD,QAAS,gBACqBrH,IAAxBgQ,GACF1O,EACED,EAAU2O,GAAqBnM,GAC/BxF,EAAagS,WANrB,iBAUM,cAAC,KAAD,UAGR,cAACQ,GAAD,UACsC,IAAnCf,EAAcvL,UAAUtB,OACvB,cAAC,GAAD,CACE2M,cAAeA,EACfrC,kBAAmBuC,EAAcvL,UACjC9C,eAAgBA,EAChBD,eAAgBA,EAChBgM,aAAcnP,EAAagS,WAG7B,cAAC,GAAD,mCAKN,eAACM,GAAD,WACE,0CACA,eAACC,GAAD,WACE,cAAC,GAAD,CACEnF,oBAAoB,cACpBC,aAAc8E,EACd5E,cAAevK,EAAU2I,KAAI,SAAC5G,EAAUC,GAAX,MAAsB,CACjDK,MAAOL,EACP2J,YAAa5J,EAASG,OACtBsJ,qBAAsBzJ,EAASG,WAEjCoI,kBAAmB,SAACtI,GAAD,OACjB8M,EAAsB9M,MAG1B,eAAC,GAAD,CACEW,MAAM,QACNqD,QAAS,gBACoBrH,IAAvBkQ,GACF5O,EACED,EAAU6O,GAAoBrM,GAC9BxF,EAAayS,UANrB,iBAUM,cAAC,KAAD,UAGR,cAACD,GAAD,UACqC,IAAlCf,EAAcpL,SAASzB,OACtB,cAAC,GAAD,CACE2M,cAAeA,EACfrC,kBAAmBuC,EAAcpL,SACjCjD,eAAgBA,EAChBD,eAAgBA,EAChBgM,aAAcnP,EAAayS,UAG7B,cAAC,GAAD,sCAOR,eAACC,GAAD,WACE,0CACA,eAACC,GAAD,WACE,8CACA,cAAC,GAAD,CACEtF,aAAc,CACZhI,MAAOoM,EAAclL,aACrBoI,YAAalC,GAAegF,EAAclL,cAC1CiI,qBAAsB/B,GAAegF,EAAclL,eAErDgH,cAAed,GAAed,KAAI,SAACgB,EAAO3H,GAAR,MAAmB,CACnDK,MAAOL,EACP2J,YAAahC,EACb6B,qBAAsB7B,MAExBW,kBAAmB,SAACjI,GAClB,IAAMuN,EAAYlG,GAChBrH,EACAoM,GAGFC,EAAiB,6BACZD,GADW,IAEdlL,aAAclB,EACdmB,iBAAkBoM,WAK1B,eAACD,GAAD,WACE,6CACA,cAAC,GAAD,CACEvF,oBAAoB,cACpBC,kBACgC1L,IAA9B8P,EAAcpB,YACV,CACEhL,MAAOoM,EAAcpB,YACrB1B,YACEyD,EAAaX,EAAcpB,aAC3BnL,OACFsJ,qBACE4D,EAAaX,EAAcpB,aAC3BnL,aAEJvD,EAEN4L,cAAekE,EAAcvL,UAAUyF,KAAI,SAACvF,GAAD,MAAuB,CAChEf,MAAOe,EAAiBL,WACxB4I,YACEyD,EAAahM,EAAiBL,YAC9Bb,OACFsJ,qBACE4D,EAAahM,EAAiBL,YAC9Bb,WAEJoI,kBAAmB,SAACjI,GAClB,IAAMqB,EAAkB5E,KAAKG,MAAMH,KAAKC,UAAU0P,IAClD/K,EAAgB2J,YAAchL,EAC9BqM,EAAiBhL,SAIvB,cAAC,GAAD,CAAkBT,SAAUwL,EAAezO,UAAWA,IACtD,cAAC,GAAD,CACEiD,SAAUwL,EACVzO,UAAWA,EACXmO,sBA/L4B,SAAC1P,EAAa4D,GAChD,IAAMqB,EAAkB5E,KAAKG,MAAMH,KAAKC,UAAU0P,IAClD/K,EAAgBF,iBAAiB/E,GAAO4D,EACxCqM,EAAiBhL,SAgMf,cAAC,GAAD,CACEf,MAAM,QACNqD,QAAS,WACPvF,EAAe8N,EAAeE,GAC9B9H,GAAW,IAJf,sBAeA0I,GAAezL,IAAOC,IAAV,oQAcZ8L,GAAc/L,IAAOC,IAAV,mPAiBX6L,GAAqB9L,YAAOyL,GAAPzL,CAAH,+EAKlB0L,GAAuB1L,IAAOC,IAAV,+GAQpB2L,GAAqB5L,IAAOC,IAAV,oJAOlB0L,GAAc3L,IAAOC,IAAV,oHCvVFgM,GA9CgB,WAAO,IAAD,EAO/B/O,KALFd,EAFiC,EAEjCA,UACAM,EAHiC,EAGjCA,UACAK,EAJiC,EAIjCA,iBACAH,EALiC,EAKjCA,aACAE,EANiC,EAMjCA,eAGIoP,EAAsBnP,EACxBL,EAAU+G,WAAU,SAACpE,GAAD,OAAcA,EAAST,KAAO7B,UAClDhC,EAEEoR,EAAiBpP,EACnBL,EAAUwP,QACVnR,EAEJ,OACE,qCACG2B,EAAUqI,KAAI,SAAC1F,EAAUjB,GAAX,OACb,cAAC,GAAD,CACEiB,SAAUA,EACVzC,aAAc,WACZA,EAAawB,IAEftB,eAAgB,WACdA,EAAesB,IANnB,qBAQOA,MAORrB,GACC,cAAC,GAAD,CACEX,UAAWA,EACXiD,SAAU8M,EACVlJ,WAAY,kBAAMrG,WCjBbwP,GAtBiB,WAAO,IAAD,EACElP,KAA9BP,EAD4B,EAC5BA,YAAaC,EADe,EACfA,aAUrB,OARAb,qBAAU,WACR,OAAO,WAELa,OAGD,IAGD,qCACE,cAAC,GAAD,wBACA,eAAC,GAAD,CAAQmC,MAAM,QAAQqD,QAASzF,EAA/B,iBACM,cAAC,KAAD,OAEN,cAAC,GAAD,QCjBS0P,GARe,WAC5B,OACE,mCACE,cAAC,GAAD,yBCwCSC,GA1BH,WACV,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxH,KACjC,cAAC,IAAD,CAAOsH,KAAK,aAAaE,UAAWxH,KACpC,cAAC,IAAD,CAAOsH,KAAK,aAAaE,UAAWL,KACpC,cAAC,IAAD,CAAOG,KAAK,WAAWE,UAAWJ,KAElC,cAAC,IAAD,CAAOE,KAAK,mBAAZ,SACE,cAAC,IAAD,CACE/L,GAAI,CACFkM,SAAU,oBCpBbC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/L,SAASC,eAAe,SAM1BmL,O","file":"static/js/main.204496b1.chunk.js","sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from \"react\"\nimport randomstring from \"randomstring\"\n\n/* Constants */\nimport { COMPOUND_COLORS_CODES } from \"../constants/compoundColors\"\nimport { COMPOUND_SYMBOLS } from \"../constants/compoundSymbols\"\n\n/* Hooks */\nimport useLocalStorageState from \"../hooks/useLocalStorageState\"\n\n/* Types */\nimport { ICompound } from \"../types/Compound\"\nimport { IReaction, IReactionCompound } from \"../types/Reaction\"\nimport { IFCWithChildren } from \"../types/FCWithChildren\"\n\n/**\n * To mark whether if a compound is a reactant or a product,\n * the following enum is used\n *  */\nexport enum CompoundType {\n  Reactant = 0,\n  Product,\n}\n\n/**\n * ISetState type for setState functions\n */\n\ntype ISetState<T> = Dispatch<SetStateAction<T>>\n\ninterface IDefaultValue {\n  /* Compounds */\n  compounds: ICompound[]\n  addCompound: () => void\n  editCompound: (index?: number) => void\n  updateCompound: (index: number, updatedCompound: ICompound) => void\n  removeCompound: (index: number) => void\n  editedCompoundId: string | undefined\n\n  /* Reactions */\n  reactions: IReaction[]\n  addReaction: () => void\n  editReaction: (index?: number) => void\n  updateReaction: (index: number, updatedReaction: IReaction) => void\n  removeReaction: (index: number) => void\n  editedReactionId: string | undefined\n}\n\nconst defaultValue: IDefaultValue = {\n  /* Compounds */\n  compounds: [],\n  addCompound: () => {},\n  editCompound: () => {},\n  updateCompound: () => {},\n  removeCompound: () => {},\n  editedCompoundId: undefined,\n\n  /* Reactions */\n  reactions: [],\n  addReaction: () => {},\n  editReaction: () => {},\n  updateReaction: () => {},\n  removeReaction: () => {},\n  editedReactionId: undefined,\n}\n\n// Context Provider component\nexport const DataContext = createContext(defaultValue)\n\n// Hook to use the context values\nexport const useData = () => {\n  return useContext(DataContext)\n}\n\n/**\n * Store component to abstract logic from root component\n */\nexport const DataStore: React.FC<IFCWithChildren> = (props) => {\n  const { children } = props\n  const [currentColor, setCurrentColor] = useState<number>(0)\n  const [compounds, setCompounds] = useLocalStorageState<ICompound[]>(\n    \"compounds\",\n    []\n  )\n  const [reactions, setReactions] = useLocalStorageState<IReaction[]>(\n    \"reactions\",\n    []\n  )\n\n  // To keep track of edited elements:\n  const [editedCompoundId, setEditedCompoundId] = useState<string | undefined>(\n    undefined\n  )\n  const [editedReactionId, setEditedReactionId] = useState<string | undefined>(\n    undefined\n  )\n\n  /**\n   * Helper functions\n   */\n  const nextColor = () => {\n    if (currentColor === COMPOUND_COLORS_CODES.length - 1) {\n      setCurrentColor(0)\n      return\n    }\n    setCurrentColor(currentColor + 1)\n  }\n\n  const availableSymbol = (): string => {\n    const foundSymbols = new Array(COMPOUND_SYMBOLS.length).fill(false)\n\n    ;(compounds as ICompound[]).forEach((compound) => {\n      const index = COMPOUND_SYMBOLS.indexOf(compound.symbol)\n      if (index !== -1) foundSymbols[index] = true\n    })\n    for (let i = 0; i < foundSymbols.length; i++) {\n      if (!foundSymbols[i]) {\n        return COMPOUND_SYMBOLS[i]\n      }\n    }\n    return \"\"\n  }\n\n  /**\n   * Compounds state handling\n   */\n  const addCompound = (): void => {\n    const updatedCompounds = [...(compounds as ICompound[])]\n\n    updatedCompounds.push({\n      id: randomstring.generate(8),\n      color: COMPOUND_COLORS_CODES[currentColor],\n      concentration: 0,\n      symbol: availableSymbol(),\n      name: \"\",\n    })\n    nextColor()\n\n    let setState = setCompounds as ISetState<ICompound[]>\n    setState(updatedCompounds)\n  }\n\n  const editCompound = (index?: number) => {\n    if (typeof index === \"undefined\") {\n      setEditedCompoundId(undefined)\n      return\n    }\n    const id = (compounds as ICompound[])[index].id\n    setEditedCompoundId(id)\n  }\n\n  const updateCompound = (index: number, updatedCompound: ICompound) => {\n    const updatedCompounds = [...(compounds as ICompound[])]\n    updatedCompounds[index] = updatedCompound\n\n    let setState = setCompounds as ISetState<ICompound[]>\n    setState(updatedCompounds)\n  }\n\n  const removeCompound = (index: number): void => {\n    const compoundId = (compounds as ICompound[])[index].id\n\n    /**\n     * Remove from reactions that have this compound\n     */\n    const updatedReactions = JSON.parse(JSON.stringify(reactions))\n    updatedReactions.forEach((reaction: IReaction) => {\n      reaction.reactants = reaction.reactants.filter(\n        (reactionCompound: IReactionCompound) =>\n          reactionCompound.compoundId !== compoundId\n      )\n\n      reaction.products = reaction.products.filter(\n        (reactionCompound: IReactionCompound) =>\n          reactionCompound.compoundId !== compoundId\n      )\n    })\n    const setReactionState = setReactions as ISetState<IReaction[]>\n\n    setReactionState(updatedReactions)\n\n    /**\n     * Remove from compounds array\n     */\n    const setCompoundState = setCompounds as ISetState<ICompound[]>\n    setCompoundState([\n      ...(compounds as ICompound[]).slice(0, index),\n      ...(compounds as ICompound[]).slice(\n        index + 1,\n        (compounds as ICompound[]).length\n      ),\n    ])\n  }\n\n  /**\n   * Reactions state handling\n   */\n\n  const addReaction = (): void => {\n    const updatedReactions = [...(reactions as IReaction[])]\n\n    updatedReactions.push({\n      id: randomstring.generate(8),\n      reactants: [],\n      products: [],\n      kineticModel: 0,\n      kineticConstants: {\n        reactionConstant: 1,\n      },\n    })\n\n    let setState = setReactions as ISetState<IReaction[]>\n    setState(updatedReactions)\n  }\n\n  const editReaction = (index?: number) => {\n    if (typeof index === \"undefined\") {\n      setEditedReactionId(undefined)\n      return\n    }\n    const id = (reactions as IReaction[])[index].id\n    setEditedReactionId(id)\n  }\n\n  const updateReaction = (index: number, updatedReaction: IReaction) => {\n    const updatedReactions = JSON.parse(JSON.stringify(reactions))\n    updatedReactions[index] = updatedReaction\n\n    let setState = setReactions as ISetState<IReaction[]>\n    setState(updatedReactions)\n  }\n\n  const removeReaction = (index: number): void => {\n    let setState = setReactions as ISetState<IReaction[]>\n\n    setState([\n      ...(reactions as IReaction[]).slice(0, index),\n      ...(reactions as IReaction[]).slice(\n        index + 1,\n        (reactions as IReaction[]).length\n      ),\n    ])\n  }\n\n  return (\n    <DataContext.Provider\n      value={{\n        /* Compounds */\n        compounds: compounds as ICompound[],\n        addCompound,\n        editCompound,\n        updateCompound,\n        removeCompound,\n        editedCompoundId,\n\n        /* Reactions */\n        reactions: reactions as IReaction[],\n        addReaction,\n        editReaction,\n        updateReaction,\n        removeReaction,\n        editedReactionId,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  )\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    --color-primary-darkest: hsl(213,48%,15%);\n    --color-primary-darker: hsl(213,48%,30%);\n    --color-primary-dark: hsl(213,48%,50%);\n    --color-primary-normal: hsl(213,48%,70%);\n    --color-primary-light: hsl(213,48%,85%);\n    --color-primary-lighter: hsl(213,48%,95%);\n\n    --color-triadic-green-darker: hsl(93,40%,30%);\n    --color-triadic-green-dark: hsl(93,40%,45%);\n    --color-triadic-green-normal: hsl(93,40%,70%);\n    --color-triadic-green-light: hsl(93,40%,85%);\n    --color-triadic-green-lighter: hsl(93,40%,95%);\n\n    --color-triadic-red-darker: hsl(333,48%,30%);\n    --color-triadic-red-dark: hsl(333,48%,45%);\n    --color-triadic-red-normal: hsl(333,48%,70%);\n    --color-triadic-red-light: hsl(333,48%,85%);\n    --color-triadic-red-lighter: hsl(333,48%,95%);\n\n    --color-grey-dark: hsl(213, 20%, 30%);\n    --color-grey-normal: hsl(213, 20%, 45%);\n    --color-grey-light: hsl(213, 20%, 70%);\n    --color-grey-lighter: hsl(213, 20%, 85%);\n    --color-grey-lightest: hsl(213, 20%, 95%);\n  }\n  \n  body {\n    margin: 0;\n    margin-top: 30px;\n    background-color: var(--color-grey-lighter);\n    font-family: 'Mulish', sans-serif;\n  }\n\n  a, button {\n    cursor: pointer;\n  }\n\n  a, button, input {\n    transition: all 0.15s ease-in-out;\n  }\n\n  input {\n    background-color: rgba(0, 0, 0, 0.1);\n    border: none;\n    border-radius: 5px;\n    flex-grow: 1;\n    font-family: 'Mulish', sans-serif;\n    min-width: 0;\n    width: 0;\n    margin-left: 1rem;\n    outline: none;\n    padding: 0.5rem 1rem;\n\n    &:hover,\n    &:focus {\n      background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    &:autofill {\n      background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    &:focus {\n      box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.4);\n    }\n  }\n\n  /**\n   * Remove arrows from number inputs\n   */\n  \n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  @keyframes slide-in {\n    from {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0px);\n    }\n  }\n\n  @keyframes slide-out {\n    from {\n      opacity: 1;\n      transform: translateY(0px);\n    }\n    \n    to {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n  }\n`\n\nexport default GlobalStyles\n","export const COMPOUND_COLORS_CODES = [\n  \"blue1\",\n  \"pink3\",\n  \"yellow\",\n  \"skyBlue2\",\n  \"red2\",\n  \"green1\",\n  \"skyBlue1\",\n  \"orange\",\n  \"violet1\",\n  \"pink1\",\n  \"lime\",\n  \"waterGreen2\",\n  \"red1\",\n  \"blue2\",\n  \"green2\",\n  \"pink2\",\n  \"waterGreen1\",\n  \"violet2\",\n]\n\nexport const COMPOUND_COLORS = {\n  orange: \"hsl(30, 80%, 65%)\",\n  yellow: \"hsl(50, 80%, 65%)\",\n  lime: \"hsl(70, 80%, 65%)\",\n  green1: \"hsl(90, 80%, 65%)\",\n  green2: \"hsl(110, 80%, 65%)\",\n  waterGreen1: \"hsl(130, 80%, 65%)\",\n  waterGreen2: \"hsl(150, 80%, 65%)\",\n  skyBlue1: \"hsl(170, 80%, 65%)\",\n  skyBlue2: \"hsl(190, 80%, 65%)\",\n  blue1: \"hsl(210, 80%, 65%)\",\n  blue2: \"hsl(230, 80%, 65%)\",\n  violet1: \"hsl(250, 80%, 65%)\",\n  violet2: \"hsl(270, 80%, 65%)\",\n  pink1: \"hsl(290, 80%, 65%)\",\n  pink2: \"hsl(310, 80%, 65%)\",\n  pink3: \"hsl(330, 80%, 65%)\",\n  red1: \"hsl(350, 80%, 65%)\",\n  red2: \"hsl(10, 80%, 65%)\",\n}\n","export const COMPOUND_SYMBOLS = [\n  'A',\n  'B',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z'\n]","import { useEffect, useRef, useState } from \"react\"\n\ninterface ISerialization<T> {\n  serialize: (value: T) => string\n  deserialize: (value: string) => T\n}\n\nconst useLocalStorageState = <T extends unknown>(\n  key: string,\n  defaultValue: T | undefined = undefined,\n  options: ISerialization<T> = {\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n  }\n) => {\n  const { serialize, deserialize } = options\n\n  /**\n   * The callback in useState is only called for state initialization\n   *  */\n  const [state, setState] = useState<T>((): T => {\n    const valueInLocalStorage = window.localStorage.getItem(key)\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage)\n    }\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue\n  })\n\n  /**\n   * Keep a reference to the old key in localStorage,\n   * to delete it if the key changes\n   */\n  const prevKeyRef = useRef(key)\n\n  useEffect(() => {\n    // Check if key has changed, and remove previous key if necessary\n    const prevKey = prevKeyRef.current\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey)\n      prevKeyRef.current = key\n    }\n\n    // Set item in localStorage\n    window.localStorage.setItem(key, serialize(state))\n  }, [key, serialize, state])\n\n  return [state, setState]\n}\n\nexport default useLocalStorageState\n","import styled from \"styled-components\"\n\nconst Reactor: React.FC = () => {\n  return (\n    <ReactorWrapper>\n      <ReactorInterior>\n        <ReactorLiquid id=\"liquid\" />\n      </ReactorInterior>\n    </ReactorWrapper>\n  )\n}\n\nconst ReactorWrapper = styled.div`\n  position: relative;\n  background-color: var(--color-grey-normal);\n  border-radius: 5px;\n  height: 220px;\n  margin-bottom: 40px;\n`\n\nconst ReactorInterior = styled.div`\n  position: absolute;\n  top: 10px;\n  bottom: 10px;\n  left: 10px;\n  right: 10px;\n\n  background-color: var(--color-grey-lighter);\n  border-radius: 2px;\n  overflow: hidden;\n`\n\nconst ReactorLiquid = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  transition: background-color 0.2s ease-in-out;\n\n  background-color: var(--color-grey-lightest);\n  height: 70%;\n  width: 100%;\n`\n\nexport default Reactor\n","import styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\n\n/* Components */\nimport { FiChevronRight } from \"react-icons/fi\"\nimport Reactor from \"../components/Reactor\"\n\ninterface IProps {\n  children: JSX.Element | JSX.Element[]\n}\n\nconst MainLayout: React.FC<IProps> = (props) => {\n  const { children } = props\n  return (\n    <MainLayoutWrapper>\n      <SideContent>\n        <Reactor />\n        <nav>\n          <Link to=\"/compounds\">\n            <p>Compounds</p>\n            <FiChevronRight />\n          </Link>\n          <Link to=\"/reactions\">\n            <p>Reactions</p>\n            <FiChevronRight />\n          </Link>\n          <Link to=\"/results\">\n            <p>Results</p>\n            <FiChevronRight />\n          </Link>\n        </nav>\n      </SideContent>\n      <MainContent>{children}</MainContent>\n    </MainLayoutWrapper>\n  )\n}\n\nexport default MainLayout\n\nconst MainLayoutWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  margin-right: 20px;\n`\n\nconst SideContent = styled.div`\n  flex-basis: 180px;\n  flex-shrink: 0;\n  margin-right: 20px;\n\n  nav {\n    display: flex;\n    flex-direction: column;\n\n    a {\n      align-items: center;\n      background-color: var(--color-grey-light);\n      border-radius: 5px;\n      color: var(--color-grey-lightest);\n      display: flex;\n      font-size: 1.2rem;\n      justify-content: space-between;\n      margin-bottom: 10px;\n      padding: 5px 10px;\n      text-decoration: none;\n\n      &:hover {\n        background-color: var(--color-grey-dark);\n      }\n\n      p {\n        margin: 0;\n      }\n    }\n  }\n`\n\nconst MainContent = styled.div`\n  background: var(--color-grey-light);\n  border-radius: 5px;\n  flex-basis: 750px;\n  min-height: 600px;\n  padding: 20px;\n  position: relative;\n`\n","import styled from \"styled-components\"\n\ninterface IButton {\n  color?: string\n}\n\nconst Button = styled.button<IButton>`\n  align-items: center;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  font-size: 1.1rem;\n  justify-content: space-between;\n  padding: 5px 10px;\n  text-decoration: none;\n\n  ${(props) => colorsBase(props.color)}\n\n  &:hover {\n    ${(props) => colorsHover(props.color)}\n  }\n`\n\nexport default Button\n\nconst colorsBase = (color?: string) => {\n  switch (color) {\n    case \"green\":\n      return `\n        background-color: var(--color-triadic-green-normal);\n        color: var(--color-grey-lightest);\n      `\n    default:\n      return `\n        background-color: var(--color-primary-dark);\n        color: var(--color-grey-lightest);\n      `\n  }\n}\n\nconst colorsHover = (color?: string) => {\n  switch (color) {\n    case \"green\":\n      return `\n        background-color: var(--color-triadic-green-dark);\n      `\n    default:\n      return `\n        background-color: var(--color-primary-darker);\n      `\n  }\n}\n","import styled from \"styled-components\"\n\nconst PageTitle = styled.h2`\n  color: var(--color-grey-lightest);\n  font-size: 20px;\n  margin-top: 0;\n`\n\nexport default PageTitle\n","import styled from \"styled-components\"\n\nconst CardButton = styled.button`\n  align-items: center;\n  align-self: stretch;\n  background-color: unset;\n  border: none;\n  border-radius: 5px;\n  color: var(--color-grey-dark);\n  cursor: pointer;\n  display: flex;\n  opacity: 0;\n  font-size: 1.5em;\n  margin-left: 0.2rem;\n  padding: 0.5rem;\n  transition: all 0.15s ease-in-out;\n  z-index: 2;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`\n\nexport default CardButton\n","/**\n * Validates if field is not empty, which equates to\n * not being undefined, null,\n * In the case it is a string, check that it is not empty.\n * In the case of a number, 0 is valid.\n *  */\nexport const validateNotEmpty = (value: unknown) => {\n  if (value === \"\") return false\n  if (typeof value === \"number\") return true\n  if (!value) return false\n  return true\n}\n\n/**\n * Validates if field is greater than, only if the value is numeric.\n * Otherwise, returns false.\n *  */\nexport const validateGreaterThan = (\n  value: unknown,\n  threshold: number,\n  equal: boolean\n) => {\n  if (typeof value !== \"number\") return false\n  if (value > threshold) return true\n  if (value === threshold && equal) return true\n  return false\n}\n","import styled from \"styled-components\"\n\n/* Components */\nimport CardButton from \"../CardButton\"\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Hooks */\nimport { useEffect, useRef, useState } from \"react\"\n\n/* Helpers */\nimport { validateNotEmpty } from \"../../helpers/validators\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\n\ninterface ICompoundCardProps {\n  compound: ICompound\n  editCompound: () => void\n  updateCompound: (compound: ICompound) => void\n  validateUnicity: (field: string, value: any) => boolean\n  removeCompound: () => void\n}\n\nconst CompoundCard: React.FC<ICompoundCardProps> = (props) => {\n  const {\n    compound,\n    editCompound,\n    updateCompound,\n    removeCompound,\n    validateUnicity,\n  } = props\n  const [symbolInput, setSymbolInput] = useState<string>(compound.symbol)\n\n  /* Reference to Reactor liquid to change color on hover */\n  const liquidRef = useRef<HTMLElement>()\n\n  useEffect(() => {\n    liquidRef.current = document.getElementById(\"liquid\") || undefined\n  }, [])\n\n  /**\n   * Update symbol input on compound update\n   */\n  useEffect(() => {\n    setSymbolInput(compound.symbol)\n  }, [compound])\n\n  /**\n   * Form submission handling\n   */\n  const handleSymbolChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSymbolInput(event.target.value)\n  }\n\n  const validateAndUpdateSymbol = () => {\n    if (\n      validateNotEmpty(symbolInput) &&\n      validateUnicity(\"symbol\", symbolInput)\n    ) {\n      /* Update symbol */\n      const updatedCompound = { ...compound }\n      updatedCompound.symbol = symbolInput\n      updateCompound(updatedCompound)\n    } else {\n      /* Reset input initial state */\n      setSymbolInput(compound.symbol)\n    }\n  }\n\n  /**\n   * Toggling\n   */\n\n  return (\n    <CompoundCardWrapper>\n      <CompoundCardInner\n        onMouseEnter={() => {\n          // @ts-ignore\n          liquidRef.current.style.backgroundColor =\n            COMPOUND_COLORS[compound.color as keyof typeof COMPOUND_COLORS]\n        }}\n        onMouseLeave={() => {\n          // @ts-ignore\n          liquidRef.current.style.backgroundColor = \"hsl(213, 20%, 95%)\"\n        }}\n      >\n        <SymbolInput\n          value={symbolInput}\n          onBlur={validateAndUpdateSymbol}\n          onChange={handleSymbolChange}\n        />\n\n        {/* Button to toggle modal edition */}\n        <CardButton onClick={editCompound}>\n          <FiEdit />\n        </CardButton>\n\n        {/* Button to delete the compound */}\n        <CardButton onClick={removeCompound}>\n          <FiTrash2 />\n        </CardButton>\n\n        {/* Bullet to display the color associated with the compound */}\n        <CompoundColorBullet\n          className=\"bullet\"\n          color={compound.color as keyof typeof COMPOUND_COLORS}\n        />\n      </CompoundCardInner>\n    </CompoundCardWrapper>\n  )\n}\n\nexport default CompoundCard\n\n/**\n * Styled components\n */\n\nconst CompoundCardWrapper = styled.li`\n  flex-basis: 33%;\n`\n\nconst CompoundCardInner = styled.div`\n  margin: 5px;\n  padding: 20px;\n  position: relative;\n\n  align-items: center;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  border-radius: 5px;\n  display: flex;\n  color: var(--color-grey-lightest);\n  cursor: pointer;\n  overflow: hidden;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    & {\n      box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n\n    & > button {\n      opacity: 1;\n    }\n\n    & > .bullet {\n      transform: scale(25);\n      border-color: var(--color-grey-lighter);\n    }\n    & > .symbol-input:after {\n      margin-left: 0%;\n      width: auto;\n    }\n  }\n\n  button {\n    padding: 0.8rem;\n  }\n`\n\ninterface ICompoundColorBulletProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst CompoundColorBullet = styled.div<ICompoundColorBulletProps>`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  top: 10px;\n  right: 10px;\n  border-radius: 50%;\n  transition: all 0.2s ease-in-out;\n  z-index: 1;\n\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border: 1px solid var(--color-grey-light);\n`\n\nconst SymbolInput = styled.input`\n  font-size: 2rem;\n  margin-left: 0;\n  margin-right: 0.5rem;\n  z-index: 2;\n`\n","import styled from \"styled-components\"\n\n/* Types */\nimport { IFCWithChildren } from \"../types/FCWithChildren\"\n\nconst Error: React.FC<IFCWithChildren> = (props) => {\n  const { children } = props\n  return <ErrorWrapper className=\"error\">{children}</ErrorWrapper>\n}\n\nconst ErrorWrapper = styled.div`\n  position: absolute;\n  bottom: 0rem;\n  right: 0rem;\n\n  background-color: var(--color-triadic-red-dark);\n  border-radius: 5px;\n  box-shadow: 0px 0px 4px var(--color-triadic-red-darker);\n  color: white;\n  padding: 0.5rem;\n  pointer-events: none;\n  opacity: 0;\n  transform: translateY(105%);\n  z-index: 4;\n`\n\nexport default Error\n","import styled from \"styled-components\"\n\ninterface IInputProps extends React.HTMLProps<HTMLInputElement> {\n  errors?: boolean\n}\n\nconst Input = styled.input<IInputProps>`\n  ${(props) =>\n    props.errors\n      ? `\n    box-shadow: 0px 0px 4px 1px var(--color-triadic-red-dark),\n      inset 0px 0px 0px 1px var(--color-triadic-red-dark) !important;\n  `\n      : \"\"}\n`\n\nexport default Input\n","import styled from \"styled-components\"\n\n/* Components */\nimport { FiX } from \"react-icons/fi\"\n\n/* Hooks */\nimport { useEffect } from \"react\"\n\n/* Types */\nimport { IFCWithChildren } from \"../types/FCWithChildren\"\n\nexport interface IClosing {\n  closing?: boolean\n}\n\ntype IEditModalProps = IClosing &\n  IFCWithChildren & {\n    setClosing: (closing: boolean) => void\n    handleClose: () => void\n  }\n\nconst EditModal: React.FC<IEditModalProps> = (props) => {\n  const { children, closing, setClosing, handleClose } = props\n\n  const closeModal = () => {\n    /**\n     * Animate and close modal after slide animation\n     */\n    setClosing(true)\n    setTimeout(() => {\n      handleClose()\n    }, 250)\n  }\n\n  useEffect(() => {\n    if (closing) {\n      closeModal()\n    }\n    // eslint-disable-next-line\n  }, [closing])\n\n  return (\n    <CompoundEditModalWrapper closing={closing}>\n      <CompoundEditModalInner closing={closing}>\n        <CloseButton onClick={closeModal} closing={closing}>\n          <FiX />\n        </CloseButton>\n        {children}\n      </CompoundEditModalInner>\n    </CompoundEditModalWrapper>\n  )\n}\n\nexport default EditModal\n\nconst CompoundEditModalWrapper = styled.div<IClosing>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  min-height: 100%;\n  background-color: var(--color-grey-light);\n\n  animation-name: dim-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  border-radius: 5px;\n  display: flex;\n\n  /* Override animation upon modal close */\n  ${(props) =>\n    props.closing\n      ? `\n    animation-name: dim-out;\n    animation-timing-function: ease-in-out;\n    animation-duration: 0.25s;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n  `\n      : \"\"}\n\n  @keyframes dim-in {\n    from {\n      background-color: rgba(0, 0, 0, 0);\n    }\n\n    to {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  }\n\n  @keyframes dim-out {\n    from {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n\n    to {\n      background-color: rgba(0, 0, 0, 0);\n    }\n  }\n`\n\nconst CompoundEditModalInner = styled.div<IClosing>`\n  align-self: stretch;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  flex-grow: 1;\n  margin: 10px;\n  padding: 2rem;\n  padding-top: 3.5rem;\n  position: relative;\n  z-index: 3;\n\n  /* Override animation upon modal close */\n  ${(props) =>\n    props.closing\n      ? `\n    animation-name: slide-out;\n    animation-timing-function: ease-in-out;\n    animation-duration: 0.25s;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n  `\n      : \"\"}\n\n  label {\n    color: var(--color-grey-dark);\n  }\n\n  input {\n    background-color: rgba(0, 0, 0, 0.1);\n    border-radius: 5px;\n    flex-grow: 1;\n    min-width: 0;\n    margin-left: 1rem;\n    padding: 0.5rem 1rem;\n\n    &:hover,\n    &:focus {\n      background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    &:autofill {\n      background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    &:focus {\n      box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.4);\n    }\n  }\n`\n\nconst CloseButton = styled.button<IClosing>`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  align-items: center;\n  background-color: unset;\n  border: none;\n  border-radius: 5px;\n  display: flex;\n  ${(props) => (props.closing ? \"disabled: true;\" : \"\")}\n  font-size: 1.3rem;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`\n","import styled from \"styled-components\"\nimport Button from \"./Button\"\n\nconst SubmitButton = styled(Button)`\n  align-self: stretch;\n  font-size: 1.2rem;\n  justify-content: center;\n  margin-top: 1.5rem;\n  margin-left: 2.5%;\n  padding: 0.5rem;\n  width: 95%;\n`\nexport default SubmitButton\n","import styled from \"styled-components\"\nimport { useFormik } from \"formik\"\n\n/* Components */\nimport Error from \"../Error\"\nimport Input from \"../Input\"\nimport EditModal from \"../EditModal\"\nimport SubmitButton from \"../SubmitButton\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Helpers */\nimport { validateNotEmpty, validateGreaterThan } from \"../../helpers/validators\"\n\n/* Hooks */\nimport { useState } from \"react\"\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\n\ninterface ICompoundEditModalProps {\n  compound: ICompound\n  closeModal: () => void\n}\n\nconst CompoundEditModal: React.FC<ICompoundEditModalProps> = (props) => {\n  const { compound, closeModal } = props\n  const { compounds, updateCompound } = useData()\n  const [closing, setClosing] = useState<boolean>(false)\n  const compoundIndex = compounds.findIndex((comp) => comp.id === compound.id)\n\n  /**\n   * Validate method for Formik\n   */\n  interface IErrors {\n    symbol?: string\n    concentration?: string\n    name?: string\n  }\n\n  const validate = (values: ICompound) => {\n    const errors: IErrors = {}\n\n    /* Symbol validation */\n    if (!validateNotEmpty(values.symbol))\n      errors.symbol = \"Symbol cannot be empty\"\n    else if (!validateUnicity(\"symbol\", values.symbol))\n      errors.symbol = \"Symbol is already used\"\n\n    /* Concentration validation */\n    if (!validateNotEmpty(values.concentration))\n      errors.concentration = \"Concentration cannot be empty\"\n    else if (!validateGreaterThan(values.concentration, 0, true))\n      errors.concentration = \"Concentration cannot be lower than 0\"\n\n    return errors\n  }\n\n  const validateUnicity = (field: string, value: any): boolean => {\n    for (var i = 0; i < compounds.length; i++) {\n      // @ts-ignore\n      if (i !== compoundIndex && compounds[i][field] === value) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Formik form initialization\n   */\n  const formik = useFormik({\n    // @ts-ignore\n    initialValues: {\n      symbol: compound.symbol,\n      concentration: compound.concentration,\n      name: compound.name,\n    },\n    validate,\n    onSubmit: (values) => {\n      const updatedCompound = { ...compound, ...values }\n      updateCompound(compoundIndex, updatedCompound)\n      setClosing(true)\n    },\n  })\n\n  return (\n    <EditModal\n      closing={closing}\n      setClosing={setClosing}\n      handleClose={closeModal}\n    >\n      <form onSubmit={formik.handleSubmit}>\n        <SymbolFieldInput color={compound.color}>\n          <label htmlFor=\"symbol\">Symbol:</label>\n          <Input\n            errors={!!formik.errors.symbol}\n            name=\"symbol\"\n            autoComplete=\"off\"\n            color={compound.color}\n            onChange={formik.handleChange}\n            value={formik.values.symbol}\n          />\n          {formik.errors.symbol && <Error>{formik.errors.symbol}</Error>}\n        </SymbolFieldInput>\n\n        <FieldInput>\n          <label htmlFor=\"concentration\">Concentration [mol/L]:</label>\n          <Input\n            errors={!!formik.errors.concentration}\n            name=\"concentration\"\n            type=\"number\"\n            onChange={formik.handleChange}\n            value={formik.values.concentration}\n          />\n          {formik.errors.concentration && (\n            <Error>{formik.errors.concentration}</Error>\n          )}\n        </FieldInput>\n\n        <FieldInput>\n          <label htmlFor=\"name\">Compound name (optional):</label>\n          <input\n            name=\"name\"\n            autoComplete=\"off\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </FieldInput>\n        <SubmitButton color=\"green\" type=\"submit\">\n          Done\n        </SubmitButton>\n      </form>\n    </EditModal>\n  )\n}\n\nexport default CompoundEditModal\n\n/**\n * Styled components\n */\n\nconst FieldInput = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  padding: 0.5rem;\n  position: relative;\n\n  &:hover > .error {\n    opacity: 1 !important;\n  }\n`\n\ninterface ISymbolInputProps {\n  color: string\n}\n\nconst SymbolFieldInput = styled(FieldInput)<ISymbolInputProps>`\n  align-items: flex-start;\n  background-color: ${(props) =>\n    COMPOUND_COLORS[props.color as keyof typeof COMPOUND_COLORS]};\n  border-radius: 5px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.5rem;\n  padding: 1rem;\n\n  label {\n    font-size: 1.5rem;\n  }\n\n  input {\n    font-size: 3rem;\n    margin-left: 1rem;\n    width: 0;\n  }\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport CompoundCard from \"./CompoundCard\"\nimport CompoundEditModal from \"./CompoundEditModal\"\n\n/* Hooks */\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\n\ninterface ICompoundListProps {\n  compounds: ICompound[]\n}\n\nconst CompoundList: React.FC<ICompoundListProps> = (props) => {\n  const { compounds } = props\n  const { editedCompoundId, editCompound, updateCompound, removeCompound } =\n    useData()\n\n  const editedCompound = editedCompoundId\n    ? compounds.find((compound) => compound.id === editedCompoundId)\n    : undefined\n\n  return (\n    <CompoundListWrapper>\n      {compounds.map((compound, index) => (\n        <CompoundCard\n          key={index}\n          compound={compound}\n          editCompound={(): void => {\n            editCompound(index)\n          }}\n          updateCompound={(compound: ICompound): void => {\n            updateCompound(index, compound)\n          }}\n          removeCompound={(): void => {\n            removeCompound(index)\n          }}\n          validateUnicity={(field: string, value: any): boolean => {\n            for (var i = 0; i < compounds.length; i++) {\n              // @ts-ignore\n              if (i !== index && compounds[i][field] === value) {\n                return false\n              }\n            }\n            return true\n          }}\n        />\n      ))}\n\n      {/* Edit modal */}\n      {editedCompoundId && (\n        <CompoundEditModal\n          compound={editedCompound as ICompound}\n          closeModal={() => editCompound()}\n        />\n      )}\n    </CompoundListWrapper>\n  )\n}\n\nexport default CompoundList\n\n/**\n * Styled components\n */\n\nconst CompoundListWrapper = styled.ul`\n  align-self: stretch;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding-left: 0;\n`\n","/* Components */\nimport Button from \"../components/Button\"\nimport PageTitle from \"../components/PageTitle\"\nimport CompoundList from \"../components/compounds/CompoundList\"\nimport { FiPlus } from \"react-icons/fi\"\n\n/* Hooks */\nimport { useEffect } from \"react\"\nimport { useData } from \"../context/DataContext\"\n\nconst CompoundsPage: React.FC = () => {\n  const { compounds, addCompound, editCompound } = useData()\n\n  useEffect(() => {\n    return () => {\n      /* Sets edited compound to undefined on dismount */\n      editCompound()\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n      <PageTitle>Compounds</PageTitle>\n      <Button color=\"green\" onClick={addCompound}>\n        Add <FiPlus />\n      </Button>\n      <CompoundList compounds={compounds} />\n    </>\n  )\n}\n\nexport default CompoundsPage\n","import styled from \"styled-components\"\n\nconst Notice = styled.p`\n  color: var(--color-grey-normal);\n  font-style: italic;\n  margin: 0.5rem;\n`\n\nexport default Notice\n","import styled from \"styled-components\"\n\n/* Components */\nimport { Fragment } from \"react\"\nimport Notice from \"../Notice\"\nimport { FiArrowRight, FiPlus } from \"react-icons/fi\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Hooks */\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReaction } from \"../../types/Reaction\"\n\ninterface IReactionPreviewProps {\n  reaction: IReaction\n}\n\nconst ReactionPreview: React.FC<IReactionPreviewProps> = (props) => {\n  const { reaction } = props\n  const { compounds } = useData()\n\n  return (\n    <ReactionPreviewWrapper>\n      {reaction.reactants.length === 0 && reaction.products.length === 0 && (\n        <Notice>No reaction data</Notice>\n      )}\n\n      {reaction.reactants.map((reactionCompound, index) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            {index !== 0 && <FiPlus size={25} />}\n            <CompoundWrapper>\n              <p>{reactionCompound.stoichiometricCoefficient}</p>\n              <CompoundTile\n                color={compound.color as keyof typeof COMPOUND_COLORS}\n              >\n                {compound.symbol}\n              </CompoundTile>\n            </CompoundWrapper>\n          </Fragment>\n        )\n      })}\n\n      {reaction.reactants.length > 0 && reaction.products.length > 0 && (\n        <FiArrowRight size={25} />\n      )}\n\n      {reaction.products.map((reactionCompound, index) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            {index !== 0 && <FiPlus size={25} />}\n            <CompoundWrapper>\n              <p>{reactionCompound.stoichiometricCoefficient}</p>\n              <CompoundTile\n                color={compound.color as keyof typeof COMPOUND_COLORS}\n              >\n                {compound.symbol}\n              </CompoundTile>\n            </CompoundWrapper>\n          </Fragment>\n        )\n      })}\n    </ReactionPreviewWrapper>\n  )\n}\n\nexport default ReactionPreview\n\nconst ReactionPreviewWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  min-height: 3rem;\n`\n\nconst CompoundWrapper = styled.div`\n  align-items: flex-end;\n  display: flex;\n  margin: 0 0.5rem;\n\n  p {\n    color: var(--color-grey-dark);\n    font-size: 1.6rem;\n    margin: 0 0 0.2rem 0;\n  }\n`\n\ninterface ICompoundColorBulletProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst CompoundTile = styled.div<ICompoundColorBulletProps>`\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border-radius: 5px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  color: var(--color-grey-dark);\n  font-size: 1.6rem;\n  margin: 0 0.5rem;\n  padding: 0.5rem 0.9rem;\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport CardButton from \"../CardButton\"\nimport ReactionPreview from \"./ReactionPreview\"\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\"\n\n/* Types */\nimport { IReaction } from \"../../types/Reaction\"\n\ninterface IReactionCardProps {\n  reaction: IReaction\n  editReaction: () => void\n  removeReaction: () => void\n}\n\nconst ReactionCard: React.FC<IReactionCardProps> = (props) => {\n  const { reaction, editReaction, removeReaction } = props\n\n  return (\n    <ReactionCardWrapper>\n      <ReactionPreview reaction={reaction} />\n      <CardButton onClick={editReaction}>\n        <FiEdit />\n      </CardButton>\n      <CardButton onClick={removeReaction}>\n        <FiTrash2 />\n      </CardButton>\n    </ReactionCardWrapper>\n  )\n}\n\nexport default ReactionCard\n\nconst ReactionCardWrapper = styled.div`\n  margin: 10px;\n  padding: 20px;\n  position: relative;\n\n  align-items: center;\n  align-self: stretch;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: var(--color-grey-lighter);\n  border-radius: 5px;\n  display: flex;\n  color: var(--color-grey-dark);\n  cursor: pointer;\n  overflow: hidden;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    background-color: var(--color-grey-lightest);\n\n    & {\n      box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n\n    & > button {\n      opacity: 1;\n    }\n\n    & > .bullet {\n      transform: scale(20);\n      border-color: var(--color-grey-lighter);\n    }\n    & > .symbol-input:after {\n      margin-left: 0%;\n      width: auto;\n    }\n  }\n\n  p {\n    flex-grow: 1;\n    margin: 0;\n  }\n`\n","/* Types */\nimport {\n  IKineticConstants,\n  IReaction,\n  IReactionCompound,\n} from \"../types/Reaction\"\n\n/**\n * This is a placeholder for more complex kinetic models,\n * where constants can be added and used in expressions\n *\n * Kinetic constants are representes by:\n *  - A principal constant, with key @reactionConstant\n *  - A compound-specific constant, with key @compoundId\n *\n * More complex models are not considerer, for simplicity of\n * the MVP1\n */\n\nexport const KINETIC_MODELS = [\"Simple\", \"Reversible\", \"Hiperbolic\"]\n\nexport const generateKineticConstants = (\n  model: number,\n  reaction: IReaction\n): IKineticConstants => {\n  switch (model) {\n    case 0:\n      return generateSimpleModelConstants(reaction)\n    case 1:\n      return generateReversibleModelConstants(reaction)\n    case 2:\n      return generateHiperbolicModelConstants(reaction)\n    default:\n      return generateSimpleModelConstants(reaction)\n  }\n}\n\nconst generateSimpleModelConstants = (reaction: IReaction) => {\n  // eslint-disable-next-line\n  const { reactionConstant, ...other } = reaction.kineticConstants\n\n  const updatedExponents: IKineticConstants = {}\n  reaction.reactants.forEach((compound: IReactionCompound) => {\n    const oldConstant = reaction.kineticConstants[compound.compoundId]\n    if (oldConstant === undefined) {\n      updatedExponents[compound.compoundId] = 1\n    } else {\n      updatedExponents[compound.compoundId] = oldConstant\n    }\n  })\n\n  return { reactionConstant, ...updatedExponents }\n}\n\nconst generateReversibleModelConstants = (reaction: IReaction) => {\n  // eslint-disable-next-line\n  const { reactionConstant, ...other } = reaction.kineticConstants\n\n  const updatedExponents: IKineticConstants = {}\n\n  reaction.reactants.forEach((compound: IReactionCompound) => {\n    const oldConstant = reaction.kineticConstants[compound.compoundId]\n    if (oldConstant === undefined) {\n      updatedExponents[compound.compoundId] = 1\n    } else {\n      updatedExponents[compound.compoundId] = oldConstant\n    }\n  })\n  reaction.products.forEach((compound: IReactionCompound) => {\n    const oldConstant = reaction.kineticConstants[compound.compoundId]\n    if (oldConstant === undefined) {\n      updatedExponents[compound.compoundId] = 1\n    } else {\n      updatedExponents[compound.compoundId] = oldConstant\n    }\n  })\n\n  return { reactionConstant, inverseReactionConstant: 1, ...updatedExponents }\n}\n\nconst generateHiperbolicModelConstants = generateSimpleModelConstants // It's exactly the same\n","import styled from \"styled-components\"\nimport randomstring from \"randomstring\"\n\n/* Components */\nimport { FiChevronDown } from \"react-icons/fi\"\n\n// Hooks\nimport { useEffect, useState, useRef, useCallback } from \"react\"\n\ninterface ISelectProps<T> {\n  defaultDisplayValue?: string\n  initialValue?: ISelectOption<T>\n  selectOptions: ISelectOption<T>[]\n  onSelectionChange: (value?: T) => void\n  alignment?: string\n}\n\ninterface ISelectOption<T> {\n  value?: T\n  displayText?: string\n  collapsedDisplayText?: string\n}\n\n/* Reusable custom select component */\nconst Select = <T extends string | number>(props: ISelectProps<T>) => {\n  // Destructure props\n  const {\n    alignment,\n    defaultDisplayValue,\n    initialValue,\n    onSelectionChange,\n    selectOptions,\n  } = props\n\n  // Set state variables\n  const [selecting, setSelecting] = useState<boolean>(false)\n  const [currentValue, setCurrentValue] = useState<T | undefined>(\n    initialValue?.value || undefined\n  )\n\n  // Use ref for id value\n  const id = useRef<string>(randomstring.generate(8))\n\n  /*\n   * Save a ref select component, for event add and remove listeners\n   * when clicking outside\n   */\n  const selectRef = useRef<HTMLElement | null>(null)\n  // const dropdownRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    // Save initialValue provided as prop to currentValue, if present\n    if (initialValue) setCurrentValue(initialValue.value)\n\n    // Save ref to rendered Select component\n    selectRef.current = document.getElementById(id.current)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  /*\n   * Set ref to dropdown when visible\n   */\n  useEffect(() => {\n    if (selecting) selectRef.current = document.getElementById(id.current)\n    else selectRef.current = null\n  }, [selecting])\n\n  /*\n   * A useCallback hook here is needed so that the exact same function is passed\n   * to both addEventListener and removeEventListener\n   *\n   * https://dev.to/marcostreng/how-to-really-remove-eventlisteners-in-react-3och\n   */\n  const clickOutsideHandler = useCallback((event: any): void => {\n    // TODO: Better typing\n    // Uses tips from:\n    // https://stackoverflow.com/questions/152975/how-do-i-detect-a-click-outside-an-element/3028037#3028037\n\n    if (!selectRef.current?.contains(event.target)) {\n      toggleSelecting()\n      // Change state manually because clickOutsideHandler can't have toggleSelecting as a dependency\n      setSelecting(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  /*\n   * Toggles select options, while adding listeners for closing when clicking outside\n   * of the dropdown\n   */\n  const toggleSelecting = (): void => {\n    // Event listeners handling\n    if (!selecting) {\n      window.addEventListener(\"click\", clickOutsideHandler, true)\n    } else {\n      window.removeEventListener(\"click\", clickOutsideHandler, true)\n    }\n\n    // Toggle state variable\n    setSelecting(!selecting)\n  }\n\n  /*\n   * Handles value selection\n   * Definition is pretty self-explanatory\n   */\n  const selectValue = (value?: T): void => {\n    toggleSelecting()\n    setCurrentValue(value)\n    onSelectionChange(value)\n  }\n\n  /*\n   * Current selected value data\n   */\n  const currentValueOption: ISelectOption<T> | undefined = selectOptions.find(\n    (option) => option.value === currentValue\n  )\n\n  return (\n    <SelectWrapper id={id.current}>\n      <SelectValue selecting={selecting} onClick={toggleSelecting}>\n        <p>{currentValueOption?.collapsedDisplayText || defaultDisplayValue}</p>\n        <FiChevronDown size={10} />\n      </SelectValue>\n      {selecting && (\n        <SelectOptions alignment={alignment || \"left\"}>\n          {defaultDisplayValue && (\n            <SelectOption onClick={() => selectValue(undefined)}>\n              <p>{defaultDisplayValue}</p>\n            </SelectOption>\n          )}\n          {selectOptions.map(({ value, displayText }) => (\n            <SelectOption\n              key={value}\n              onClick={() => {\n                selectValue(value)\n              }}\n            >\n              <p>{displayText}</p>\n            </SelectOption>\n          ))}\n        </SelectOptions>\n      )}\n    </SelectWrapper>\n  )\n}\n\nexport default Select\n\ninterface ISelecting {\n  selecting: boolean\n}\n\nconst SelectWrapper = styled.div`\n  position: relative;\n  flex-grow: 1;\n`\n\nconst SelectValue = styled.div<ISelecting>`\n  align-items: center;\n  background-color: var(--color-grey-lightest);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  font-size: 1.1rem;\n  outline: none;\n  padding: 5px 10px;\n  transition: all 0.15s linear;\n  ${(props) =>\n    props.selecting\n      ? `box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15),\n    0px 0px 2px var(--color-grey-normal);`\n      : \"\"}\n\n  & > p {\n    margin: 0;\n    flex-grow: 1;\n  }\n\n  & > svg {\n    margin-left: 0.5rem;\n  }\n`\n\ninterface ISelectOptions {\n  alignment: string\n}\n\nconst SelectOptions = styled.div<ISelectOptions>`\n  position: absolute;\n  top: 100%;\n\n  align-items: stretch;\n  ${(props) => (props.alignment === \"left\" ? \"left: 0;\" : \"\")}\n  ${(props) => (props.alignment === \"right\" ? \"right: 0;\" : \"\")}\n  background-color: var(--color-grey-lightest);\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15),\n    0px 0px 2px var(--color-grey-normal);\n  display: flex;\n  flex-direction: column;\n  font-size: 1.2rem;\n  margin-top: 0.5rem;\n  max-height: 400px;\n  overflow-y: scroll;\n  padding: 0.5rem;\n  transition: all 0.05s linear;\n  width: auto;\n  z-index: 20;\n`\n\nconst SelectOption = styled.button`\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1rem;\n  text-align: left;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n\n  &:hover {\n    background-color: var(--color-grey-lighter);\n  }\n\n  & > p {\n    white-space: nowrap;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n  }\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport CardButton from \"../CardButton\"\nimport { FiTrash2 } from \"react-icons/fi\"\n\n/* Constants */\nimport { COMPOUND_COLORS } from \"../../constants/compoundColors\"\n\n/* Helpers */\nimport { validateNotEmpty } from \"../../helpers/validators\"\n\n/* Hooks */\nimport { useState } from \"react\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReactionCompound } from \"../../types/Reaction\"\n\ninterface IReactionCompoundCardProps {\n  key: string\n  compound: ICompound\n  reactionCompound: IReactionCompound\n  updateCompound: (updatedReactionCompound: IReactionCompound) => void\n  removeCompound: () => void\n}\n\nconst ReactionCompoundCard: React.FC<IReactionCompoundCardProps> = (props) => {\n  const { compound, reactionCompound, updateCompound, removeCompound } = props\n\n  /* Coefficient is short for Stoichiometric Coefficient in this component */\n  const [coefficientInput, setCoefficientInput] = useState<number | \"\">(\n    reactionCompound.stoichiometricCoefficient\n  )\n\n  const handleCoefficientChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.target.value === \"\") {\n      setCoefficientInput(\"\")\n      return\n    }\n    setCoefficientInput(parseFloat(event.target.value))\n  }\n\n  const validateAndUpdateCoefficient = () => {\n    if (validateNotEmpty(coefficientInput)) {\n      updateCompound({\n        ...reactionCompound,\n        stoichiometricCoefficient: coefficientInput as number,\n      })\n      return\n    }\n    setCoefficientInput(reactionCompound.stoichiometricCoefficient)\n  }\n\n  return (\n    <ReactionCompoundCardWrapper\n      color={compound.color as keyof typeof COMPOUND_COLORS}\n    >\n      <h1>{compound.symbol}</h1>\n      <input\n        value={coefficientInput}\n        type=\"number\"\n        onChange={handleCoefficientChange}\n        onBlur={validateAndUpdateCoefficient}\n      />\n      <CardButton onClick={removeCompound}>\n        <FiTrash2 />\n      </CardButton>\n    </ReactionCompoundCardWrapper>\n  )\n}\n\nexport default ReactionCompoundCard\n\ninterface IReactionCompoundCardWrapperProps {\n  color: keyof typeof COMPOUND_COLORS\n}\n\nconst ReactionCompoundCardWrapper = styled.div<IReactionCompoundCardWrapperProps>`\n  margin: 5px;\n  padding: 1.3rem;\n  position: relative;\n\n  align-items: center;\n  animation-name: slide-in;\n  animation-timing-function: ease-in-out;\n  animation-duration: 0.25s;\n  animation-iteration-count: 1;\n  background-color: ${(props) => COMPOUND_COLORS[props.color]};\n  border-radius: 5px;\n  color: var(--color-grey-dark);\n  display: flex;\n  cursor: pointer;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    & {\n      box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n  }\n\n  h1 {\n    flex-grow: 1;\n    font-size: 1.8rem;\n    margin: 0;\n  }\n\n  input {\n    font-size: 1.3rem;\n    width: 0px;\n  }\n\n  button {\n    opacity: 1;\n    margin-left: 0.5rem;\n  }\n`\n","/* Components */\nimport ReactionCompoundCard from \"./ReactionCompoundCard\"\n\n/* Hooks */\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReactionCompound } from \"../../types/Reaction\"\nimport { CompoundType } from \"../../context/DataContext\"\n\ninterface IReactionCompoundListProps {\n  compoundType: CompoundType\n  reactionCompounds: IReactionCompound[]\n  reactionIndex: number\n  removeCompound: (compoundIndex: number, compoundType: CompoundType) => void\n  updateCompound: (\n    compoundIndex: number,\n    compoundType: CompoundType,\n    updatedCompound: IReactionCompound\n  ) => void\n}\n\nconst ReactionCompoundList: React.FC<IReactionCompoundListProps> = (props) => {\n  const { reactionCompounds, removeCompound, updateCompound, compoundType } =\n    props\n  const { compounds } = useData()\n\n  return (\n    <>\n      {reactionCompounds.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n        /**\n         * compoundIndex is the index in the reaction object (reactants or products)\n         *  */\n        const compoundIndex = reactionCompounds.findIndex(\n          (c) => c.compoundId === reactionCompound.compoundId\n        ) as number\n\n        return (\n          <ReactionCompoundCard\n            key={reactionCompound.compoundId}\n            compound={compound}\n            reactionCompound={reactionCompound}\n            updateCompound={(updatedReactionCompound: IReactionCompound) => {\n              updateCompound(\n                compoundIndex,\n                compoundType,\n                updatedReactionCompound\n              )\n            }}\n            removeCompound={() => {\n              removeCompound(compoundIndex, compoundType)\n            }}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default ReactionCompoundList\n","import styled from \"styled-components\"\n\n/**\n * Division\n */\n\ninterface IDivisionProps {\n  numerator: string | JSX.Element\n  denominator: string | JSX.Element\n}\n\nexport const Division: React.FC<IDivisionProps> = (props) => {\n  const { numerator, denominator } = props\n\n  return (\n    <DivisionWrapper>\n      <div>{numerator}</div>\n      <div></div>\n      <div>{denominator}</div>\n    </DivisionWrapper>\n  )\n}\n\nconst DivisionWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  & > div:not(:nth-child(2)) {\n    display: flex;\n    padding: 0.5rem;\n    position: relative;\n  }\n\n  & > div:nth-child(2) {\n    width: 100%;\n    height: 2px;\n    background-color: var(--color-grey-dark);\n  }\n`\n\n/**\n * Power\n *  */\n\ninterface IPowerProps {\n  base: string | JSX.Element\n  power: string | JSX.Element\n}\n\nexport const Power: React.FC<IPowerProps> = (props) => {\n  const { base, power } = props\n  return (\n    <PowerWrapper>\n      <div>{base}</div>\n      <div className=\"exponent\">{power}</div>\n    </PowerWrapper>\n  )\n}\n\nconst PowerWrapper = styled.div`\n  position: relative;\n  display: flex;\n\n  & > .exponent {\n    transform: translateY(-50%) scale(0.8);\n  }\n`\n\n/**\n * Subindex\n *  */\n\ninterface ISubindexProps {\n  base: string | JSX.Element\n  subindex: string | JSX.Element\n}\n\nexport const Subindex: React.FC<ISubindexProps> = (props) => {\n  const { base, subindex } = props\n  return (\n    <SubindexWrapper>\n      <div>{base}</div>\n      <div className=\"subindex\">{subindex}</div>\n    </SubindexWrapper>\n  )\n}\n\nconst SubindexWrapper = styled.div`\n  position: relative;\n  display: flex;\n\n  & > .subindex {\n    transform: translateY(50%) scale(0.8);\n  }\n`\n\n/**\n * Greek letters\n */\n\nexport const GreekAlpha = () => <span>&alpha;</span>\nexport const GreekBeta = () => <span>&beta;</span>\nexport const GreekMu = () => <span>&mu;</span>\n","import styled from \"styled-components\"\nimport { Fragment } from \"react\"\n\n/* Components */\nimport {\n  Division,\n  Power,\n  Subindex,\n  GreekAlpha,\n  GreekBeta,\n  GreekMu,\n} from \"../MathExpressions\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReaction } from \"../../types/Reaction\"\n\ninterface IReactionEquationProps {\n  reaction: IReaction\n  compounds: ICompound[]\n  keyCompoundSymbol?: string\n}\n\nconst ReactionEquation: React.FC<IReactionEquationProps> = (props) => {\n  const { reaction, compounds } = props\n  const keyCompound = compounds.find((c) => reaction.keyCompound === c.id)\n  let reactionEquation\n\n  switch (reaction.kineticModel) {\n    case 1:\n      reactionEquation = (\n        <ReversibleReactionEquation\n          reaction={reaction}\n          compounds={compounds}\n          keyCompoundSymbol={keyCompound?.symbol || undefined}\n        />\n      )\n      break\n    case 2:\n      reactionEquation = (\n        <HiperbolicReactionEquation\n          reaction={reaction}\n          compounds={compounds}\n          keyCompoundSymbol={keyCompound?.symbol || undefined}\n        />\n      )\n      break\n    default:\n      reactionEquation = (\n        <SimpleReactionEquation\n          reaction={reaction}\n          compounds={compounds}\n          keyCompoundSymbol={keyCompound?.symbol || undefined}\n        />\n      )\n  }\n\n  return reactionEquation\n}\n\nexport default ReactionEquation\n\n//\n\nconst SimpleReactionEquation: React.FC<IReactionEquationProps> = (props) => {\n  const { reaction, compounds, keyCompoundSymbol } = props\n\n  return (\n    <EquationWrapper>\n      {keyCompoundSymbol && (\n        <>\n          <Subindex base=\"r\" subindex={keyCompoundSymbol} />\n          &nbsp;=&nbsp;\n        </>\n      )}\n      k\n      {reaction.reactants.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            .\n            <Power\n              base={`[${compound.symbol}]`}\n              power={\n                <Subindex base={<GreekAlpha />} subindex={compound.symbol} />\n              }\n            />\n          </Fragment>\n        )\n      })}\n    </EquationWrapper>\n  )\n}\n\nconst ReversibleReactionEquation: React.FC<IReactionEquationProps> = (\n  props\n) => {\n  const { reaction, compounds, keyCompoundSymbol } = props\n\n  return (\n    <EquationWrapper>\n      {keyCompoundSymbol && (\n        <>\n          <Subindex base=\"r\" subindex={keyCompoundSymbol} />\n          &nbsp;=&nbsp;\n        </>\n      )}\n      k\n      {reaction.reactants.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            .\n            <Power\n              base={`[${compound.symbol}]`}\n              power={\n                <Subindex base={<GreekAlpha />} subindex={compound.symbol} />\n              }\n            />\n          </Fragment>\n        )\n      })}\n      &nbsp;-&nbsp;\n      <Subindex base=\"k\" subindex=\"-1\" />\n      {reaction.products.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            .\n            <Power\n              base={`[${compound.symbol}]`}\n              power={\n                <Subindex base={<GreekBeta />} subindex={compound.symbol} />\n              }\n            />\n          </Fragment>\n        )\n      })}\n    </EquationWrapper>\n  )\n}\n\nconst HiperbolicReactionEquation: React.FC<IReactionEquationProps> = (\n  props\n) => {\n  const { reaction, compounds, keyCompoundSymbol } = props\n\n  return (\n    <EquationWrapper>\n      {keyCompoundSymbol && (\n        <>\n          <Subindex base=\"r\" subindex={keyCompoundSymbol} />\n          &nbsp;=&nbsp;\n        </>\n      )}\n      <GreekMu />\n      {reaction.reactants.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n        return (\n          <Fragment key={reactionCompound.compoundId}>\n            .\n            <Division\n              numerator={`[${compound.symbol}]`}\n              denominator={\n                <>\n                  <Subindex base={\"K\"} subindex={compound.symbol} />\n                  +[{`${compound.symbol}`}]\n                </>\n              }\n            />\n          </Fragment>\n        )\n      })}\n    </EquationWrapper>\n  )\n}\n\n//\n\nconst EquationWrapper = styled.div`\n  align-items: center;\n  align-self: stretch;\n  background-color: var(--color-grey-lightest);\n  border: 1px solid var(--color-grey-light);\n  border-radius: 5px;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n  color: var(--color-grey-dark);\n  display: flex;\n  font-size: 1.8rem;\n  justify-content: center;\n  padding: 1.5rem;\n  margin: 1.5rem 0 1rem;\n\n  span {\n    font-family: \"Comfortaa\", symbol;\n  }\n`\n","import styled from \"styled-components\"\n\n/* Helpers */\nimport { validateNotEmpty } from \"../../helpers/validators\"\n\n/* Hooks */\nimport { useState } from \"react\"\n\ninterface IReactionParamInputCardProps {\n  paramSymbol: string | JSX.Element | JSX.Element[]\n  value: number\n  updateValue: (value: number) => void\n}\n\nconst ReactionParamInputCard: React.FC<IReactionParamInputCardProps> = (\n  props\n) => {\n  const { paramSymbol, value, updateValue } = props\n  const [valueInput, setValueInput] = useState<number | \"\">(value)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value === \"\") {\n      setValueInput(\"\")\n      return\n    }\n    setValueInput(parseFloat(event.target.value))\n  }\n\n  const validateAndUpdateConstant = () => {\n    if (validateNotEmpty(valueInput)) {\n      updateValue(valueInput as number)\n      return\n    }\n    setValueInput(value)\n  }\n\n  return (\n    <ParamInputWrapper>\n      <ParamInputInner>\n        <h1>{paramSymbol}</h1>\n        <input\n          value={valueInput}\n          type=\"number\"\n          onChange={handleChange}\n          onBlur={validateAndUpdateConstant}\n        />\n      </ParamInputInner>\n    </ParamInputWrapper>\n  )\n}\n\nexport default ReactionParamInputCard\n\nconst ParamInputWrapper = styled.div`\n  flex-basis: 50%;\n`\n\nconst ParamInputInner = styled.div`\n  align-items: center;\n  background-color: var(--color-grey-light);\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  margin: 0.5rem;\n  padding: 1.3rem;\n  transition: all 0.15s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.15);\n    transform: translateY(-2px);\n  }\n\n  h1 {\n    color: var(--color-grey-dark);\n    font-size: 1.6rem;\n    margin: 0;\n    margin-right: 1rem;\n\n    span {\n      /* Greek symbols */\n      font-family: \"Comfortaa\", symbol;\n    }\n  }\n\n  input {\n    font-size: 1.4rem;\n  }\n`\n","import styled from \"styled-components\"\n\n/* Components */\nimport ReactionParamInputCard from \"./ReactionParamInputCard\"\nimport { Subindex, GreekMu } from \"../MathExpressions\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReaction } from \"../../types/Reaction\"\n\ninterface IReactionKineticParametersProps {\n  compounds: ICompound[]\n  reaction: IReaction\n  updateKineticConstant: (key: string, value: number) => void\n}\n\nconst ReactionKineticParameters: React.FC<IReactionKineticParametersProps> = (\n  props\n) => {\n  const { compounds, reaction, updateKineticConstant } = props\n  const { reactionConstant, inverseReactionConstant, ...compoundParams } =\n    reaction.kineticConstants\n\n  return (\n    <KineticParamsWrapper>\n      <ReactionParamInputCard\n        paramSymbol={reaction.kineticModel === 2 ? <GreekMu /> : \"k\"}\n        value={reactionConstant}\n        updateValue={(value: number) => {\n          updateKineticConstant(\"reactionConstant\", value)\n        }}\n      />\n\n      {inverseReactionConstant !== undefined && (\n        <ReactionParamInputCard\n          paramSymbol={<Subindex base=\"k\" subindex=\"-1\" />}\n          value={inverseReactionConstant}\n          updateValue={(value: number) => {\n            updateKineticConstant(\"reactionConstant\", value)\n          }}\n        />\n      )}\n\n      {reaction.reactants.map((reactionCompound) => {\n        const compound = compounds.find(\n          (c) => c.id === reactionCompound.compoundId\n        ) as ICompound\n\n        return (\n          <ReactionParamInputCard\n            key={compound.id}\n            paramSymbol={\n              <>\n                <span>&alpha;</span>\n                <sub>{compound.symbol}</sub>\n              </>\n            }\n            value={compoundParams[compound.id]}\n            updateValue={(value: number) => {\n              updateKineticConstant(compound.id, value)\n            }}\n          />\n        )\n      })}\n\n      {/* For reversible reactions, and for now */}\n      {reaction.kineticModel === 1 &&\n        reaction.products.map((reactionCompound) => {\n          const compound = compounds.find(\n            (c) => c.id === reactionCompound.compoundId\n          ) as ICompound\n\n          return (\n            <ReactionParamInputCard\n              key={compound.id}\n              paramSymbol={\n                <>\n                  <span>&beta;</span>\n                  <sub>{compound.symbol}</sub>\n                </>\n              }\n              value={compoundParams[compound.id]}\n              updateValue={(value: number) => {\n                updateKineticConstant(compound.id, value)\n              }}\n            />\n          )\n        })}\n    </KineticParamsWrapper>\n  )\n}\n\nexport default ReactionKineticParameters\n\nconst KineticParamsWrapper = styled.div`\n  align-self: stretch;\n  background-color: var(--color-grey-lightest);\n  border-radius: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n\n  input {\n    margin-left: 0;\n  }\n`\n","import styled from \"styled-components\"\n\n/* Constants */\nimport {\n  KINETIC_MODELS,\n  generateKineticConstants,\n} from \"../../constants/kineticModels\"\n\n/* Components */\nimport Button from \"../Button\"\nimport EditModal from \"../EditModal\"\nimport Notice from \"../Notice\"\nimport Select from \"../Select\"\nimport SubmitButton from \"../SubmitButton\"\nimport { FiPlus } from \"react-icons/fi\"\nimport ReactionCompoundList from \"./ReactionCompoundList\"\nimport ReactionEquation from \"./ReactionEquation\"\nimport ReactionKineticParameters from \"./ReactionKineticParameters\"\nimport ReactionPreview from \"./ReactionPreview\"\n\n/* Hooks */\nimport { useState } from \"react\"\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { ICompound } from \"../../types/Compound\"\nimport { IReaction, IReactionCompound } from \"../../types/Reaction\"\nimport { CompoundType } from \"../../context/DataContext\"\n\ninterface IReactionEditModalProps {\n  compounds: ICompound[]\n  reaction: IReaction\n  closeModal: () => void\n}\n\nconst ReactionEditModal: React.FC<IReactionEditModalProps> = (props) => {\n  const { compounds, reaction, closeModal } = props\n  const { reactions, updateReaction } = useData()\n  const [closing, setClosing] = useState<boolean>(false)\n  const reactionIndex = reactions.findIndex((rea) => rea.id === reaction.id)\n  /**\n   * Copied state for reaction editing\n   */\n  const [modalReaction, setModalReaction] = useState<IReaction>(\n    JSON.parse(JSON.stringify(reaction))\n  )\n\n  /* For the select input, both for reactants and products */\n  const [selectReactantIndex, setSelectReactantIndex] = useState<\n    number | undefined\n  >(undefined)\n  const [selectProductIndex, setSelectProductIndex] = useState<\n    number | undefined\n  >(undefined)\n\n  /**\n   * Handle compound form updates\n   */\n  const getCompoundKey = (\n    compoundType: CompoundType\n  ): \"products\" | \"reactants\" => {\n    if (compoundType === CompoundType.Reactant) return \"reactants\"\n    return \"products\"\n  }\n\n  const addCompound = (\n    compoundId: string,\n    compoundType: CompoundType\n  ): void => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n\n    updatedReaction[key].push({\n      compoundId,\n      stoichiometricCoefficient: 1,\n    })\n\n    const kineticConstants = generateKineticConstants(\n      updatedReaction.kineticModel,\n      updatedReaction\n    )\n    updatedReaction.kineticConstants = kineticConstants\n\n    setModalReaction(updatedReaction)\n  }\n\n  const updateCompound = (\n    compoundIndex: number,\n    compoundType: CompoundType,\n    updatedCompound: IReactionCompound\n  ): void => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = { ...modalReaction }\n\n    updatedReaction[key][compoundIndex] = updatedCompound\n\n    setModalReaction(updatedReaction)\n  }\n\n  const removeCompound = (\n    compoundIndex: number,\n    compoundType: CompoundType\n  ) => {\n    /* Determine which array to push to */\n    const key = getCompoundKey(compoundType)\n    const updatedReaction = { ...modalReaction }\n    const deletedCompound = updatedReaction[key][compoundIndex]\n\n    /* Update reaction compounds */\n    updatedReaction[key] = [\n      ...updatedReaction[key].slice(0, compoundIndex),\n      ...updatedReaction[key].slice(\n        compoundIndex + 1,\n        updatedReaction[key].length\n      ),\n    ]\n\n    /* Set keyCompound to undefined if deleted compound is keyCompound */\n    if (deletedCompound.compoundId === modalReaction.keyCompound) {\n      updatedReaction.keyCompound = undefined\n    }\n\n    /* Recalculate kinetic constants */\n    const kineticConstants = generateKineticConstants(\n      updatedReaction.kineticModel,\n      updatedReaction\n    )\n    updatedReaction.kineticConstants = kineticConstants\n\n    setModalReaction(updatedReaction)\n  }\n\n  /**\n   * Handle kinetic constant change\n   */\n\n  const handleKineticConstantUpdate = (key: string, value: number) => {\n    const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n    updatedReaction.kineticConstants[key] = value\n    setModalReaction(updatedReaction)\n  }\n\n  /* For select state */\n  const selectReactantInitialValue = selectReactantIndex\n    ? {\n        value: selectReactantIndex,\n        displayText: compounds[selectReactantIndex].symbol,\n        collapsedDisplayText: compounds[selectReactantIndex].symbol,\n      }\n    : undefined\n\n  const selectProductInitialValue = selectProductIndex\n    ? {\n        value: selectProductIndex,\n        displayText: compounds[selectProductIndex].symbol,\n        collapsedDisplayText: compounds[selectProductIndex].symbol,\n      }\n    : undefined\n\n  const findCompound = (id: string) => {\n    return compounds.find((c) => c.id === id)\n  }\n\n  return (\n    <EditModal\n      closing={closing}\n      setClosing={setClosing}\n      handleClose={closeModal}\n    >\n      <ReactionPreview reaction={modalReaction} />\n\n      {/* Compounds input */}\n      <InputSection>\n        <CompoundInputWrapper>\n          <h2>Reactants</h2>\n          <AddCompound>\n            <Select\n              defaultDisplayValue=\"Compound...\"\n              initialValue={selectReactantInitialValue}\n              selectOptions={compounds.map((compound, index) => ({\n                value: index,\n                displayText: compound.symbol,\n                collapsedDisplayText: compound.symbol,\n              }))}\n              onSelectionChange={(index: number | undefined) =>\n                setSelectReactantIndex(index)\n              }\n            />\n            <Button\n              color=\"green\"\n              onClick={() => {\n                if (selectReactantIndex !== undefined)\n                  addCompound(\n                    compounds[selectReactantIndex].id,\n                    CompoundType.Reactant\n                  )\n              }}\n            >\n              Add <FiPlus />\n            </Button>\n          </AddCompound>\n          <CompoundInputInner>\n            {modalReaction.reactants.length !== 0 ? (\n              <ReactionCompoundList\n                reactionIndex={reactionIndex}\n                reactionCompounds={modalReaction.reactants}\n                removeCompound={removeCompound}\n                updateCompound={updateCompound}\n                compoundType={CompoundType.Reactant}\n              />\n            ) : (\n              <Notice>No compounds...</Notice>\n            )}\n          </CompoundInputInner>\n        </CompoundInputWrapper>\n\n        <CompoundInputWrapper>\n          <h2>Products</h2>\n          <AddCompound>\n            <Select\n              defaultDisplayValue=\"Compound...\"\n              initialValue={selectProductInitialValue}\n              selectOptions={compounds.map((compound, index) => ({\n                value: index,\n                displayText: compound.symbol,\n                collapsedDisplayText: compound.symbol,\n              }))}\n              onSelectionChange={(index: number | undefined) =>\n                setSelectProductIndex(index)\n              }\n            />\n            <Button\n              color=\"green\"\n              onClick={() => {\n                if (selectProductIndex !== undefined)\n                  addCompound(\n                    compounds[selectProductIndex].id,\n                    CompoundType.Product\n                  )\n              }}\n            >\n              Add <FiPlus />\n            </Button>\n          </AddCompound>\n          <CompoundInputInner>\n            {modalReaction.products.length !== 0 ? (\n              <ReactionCompoundList\n                reactionIndex={reactionIndex}\n                reactionCompounds={modalReaction.products}\n                removeCompound={removeCompound}\n                updateCompound={updateCompound}\n                compoundType={CompoundType.Product}\n              />\n            ) : (\n              <Notice>No compounds...</Notice>\n            )}\n          </CompoundInputInner>\n        </CompoundInputWrapper>\n      </InputSection>\n\n      {/* Kinetics input */}\n      <ColumnInputSection>\n        <h2>Kinetics</h2>\n        <SelectField>\n          <p>Kinetic model</p>\n          <Select\n            initialValue={{\n              value: modalReaction.kineticModel,\n              displayText: KINETIC_MODELS[modalReaction.kineticModel],\n              collapsedDisplayText: KINETIC_MODELS[modalReaction.kineticModel],\n            }}\n            selectOptions={KINETIC_MODELS.map((model, index) => ({\n              value: index,\n              displayText: model,\n              collapsedDisplayText: model,\n            }))}\n            onSelectionChange={(value) => {\n              const constants = generateKineticConstants(\n                value as number,\n                modalReaction\n              )\n\n              setModalReaction({\n                ...modalReaction,\n                kineticModel: value as number,\n                kineticConstants: constants,\n              })\n            }}\n          />\n        </SelectField>\n        <SelectField>\n          <p>Key compound</p>\n          <Select\n            defaultDisplayValue=\"Reactant...\"\n            initialValue={\n              modalReaction.keyCompound !== undefined\n                ? {\n                    value: modalReaction.keyCompound,\n                    displayText: (\n                      findCompound(modalReaction.keyCompound) as ICompound\n                    ).symbol,\n                    collapsedDisplayText: (\n                      findCompound(modalReaction.keyCompound) as ICompound\n                    ).symbol,\n                  }\n                : undefined\n            }\n            selectOptions={modalReaction.reactants.map((reactionCompound) => ({\n              value: reactionCompound.compoundId,\n              displayText: (\n                findCompound(reactionCompound.compoundId) as ICompound\n              ).symbol,\n              collapsedDisplayText: (\n                findCompound(reactionCompound.compoundId) as ICompound\n              ).symbol,\n            }))}\n            onSelectionChange={(value: string | undefined) => {\n              const updatedReaction = JSON.parse(JSON.stringify(modalReaction))\n              updatedReaction.keyCompound = value\n              setModalReaction(updatedReaction)\n            }}\n          />\n        </SelectField>\n        <ReactionEquation reaction={modalReaction} compounds={compounds} />\n        <ReactionKineticParameters\n          reaction={modalReaction}\n          compounds={compounds}\n          updateKineticConstant={handleKineticConstantUpdate}\n        />\n      </ColumnInputSection>\n\n      <SubmitButton\n        color=\"green\"\n        onClick={() => {\n          updateReaction(reactionIndex, modalReaction)\n          setClosing(true)\n        }}\n      >\n        Done\n      </SubmitButton>\n    </EditModal>\n  )\n}\n\nexport default ReactionEditModal\n\nconst InputSection = styled.div`\n  border-top: 1px solid var(--color-grey-light);\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  padding: 2rem 1rem 0rem;\n\n  h2 {\n    color: var(--color-grey-dark);\n    font-size: 20px;\n    margin-top: 0;\n  }\n`\n\nconst SelectField = styled.div`\n  display: flex;\n  align-items: center;\n  width: 50%;\n\n  p {\n    color: var(--color-grey-dark);\n    flex-grow: 1;\n    font-size: 1rem;\n    margin-right: 1.4rem;\n  }\n\n  div {\n    flex-basis: 45%;\n  }\n`\n\nconst ColumnInputSection = styled(InputSection)`\n  flex-direction: column;\n  flex-wrap: nowrap;\n`\n\nconst CompoundInputWrapper = styled.div`\n  flex-basis: 50%;\n\n  @media (max-width: 700px) {\n    flex-basis: 100%;\n  }\n`\n\nconst CompoundInputInner = styled.div`\n  background-color: var(--color-grey-lightest);\n  border-radius: 5px;\n  margin: 0.5rem 0.3rem;\n  padding: 0.5rem;\n`\n\nconst AddCompound = styled.div`\n  display: flex;\n  margin: 0.3rem;\n\n  & > button {\n    margin-left: 0.5rem;\n  }\n`\n","/* Components */\nimport ReactionCard from \"./ReactionCard\"\nimport ReactionEditModal from \"./ReactionEditModal\"\n\n/* Hooks */\nimport { useData } from \"../../context/DataContext\"\n\n/* Types */\nimport { IReaction } from \"../../types/Reaction\"\n\nconst ReactionList: React.FC = () => {\n  const {\n    compounds,\n    reactions,\n    editedReactionId,\n    editReaction,\n    removeReaction,\n  } = useData()\n\n  const editedReactionIndex = editedReactionId\n    ? reactions.findIndex((reaction) => reaction.id === editedReactionId)\n    : undefined\n\n  const editedReaction = editedReactionId\n    ? reactions[editedReactionIndex as number]\n    : undefined\n\n  return (\n    <>\n      {reactions.map((reaction, index) => (\n        <ReactionCard\n          reaction={reaction}\n          editReaction={(): void => {\n            editReaction(index)\n          }}\n          removeReaction={(): void => {\n            removeReaction(index)\n          }}\n          key={index}\n        >\n          Reaction\n        </ReactionCard>\n      ))}\n\n      {/* Edit modal */}\n      {editedReactionId && (\n        <ReactionEditModal\n          compounds={compounds}\n          reaction={editedReaction as IReaction}\n          closeModal={() => editReaction()}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ReactionList\n","/* Components */\nimport Button from \"../components/Button\"\nimport PageTitle from \"../components/PageTitle\"\nimport ReactionList from \"../components/reactions/ReactionList\"\nimport { FiPlus } from \"react-icons/fi\"\n\n/* Hooks */\nimport { useEffect } from \"react\"\nimport { useData } from \"../context/DataContext\"\n\nconst ReactionsPage: React.FC = () => {\n  const { addReaction, editReaction } = useData()\n\n  useEffect(() => {\n    return () => {\n      /* Sets edited reaction to undefined on dismount */\n      editReaction()\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n      <PageTitle>Reactions</PageTitle>\n      <Button color=\"green\" onClick={addReaction}>\n        Add <FiPlus />\n      </Button>\n      <ReactionList />\n    </>\n  )\n}\n\nexport default ReactionsPage\n","import PageTitle from \"../components/PageTitle\"\n\nconst ResultsPage: React.FC = () => {\n  return (\n    <>\n      <PageTitle>Results</PageTitle>\n    </>\n  )\n}\n\nexport default ResultsPage\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n} from \"react-router-dom\"\nimport GlobalStyles from \"./GlobalStyles\"\n\n/* Context */\nimport { DataStore } from \"./context/DataContext\"\n\n/* Layouts */\nimport MainLayout from \"./layouts/MainLayout\"\n\n/* Pages */\nimport CompoundsPage from \"./pages/CompoundsPage\"\nimport ReactionsPage from \"./pages/ReactionsPage\"\nimport ResultsPage from \"./pages/ResultsPage\"\n\nconst App = () => {\n  return (\n    <DataStore>\n      <Router>\n        <GlobalStyles />\n        <MainLayout>\n          <Switch>\n            <Route path=\"/\" exact component={CompoundsPage} />\n            <Route path=\"/compounds\" component={CompoundsPage} />\n            <Route path=\"/reactions\" component={ReactionsPage} />\n            <Route path=\"/results\" component={ResultsPage} />\n            {/* Redirect for deployed URL */}\n            <Route path=\"/batch-simulator\">\n              <Redirect\n                to={{\n                  pathname: \"/\",\n                }}\n              />\n            </Route>\n          </Switch>\n        </MainLayout>\n      </Router>\n    </DataStore>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}